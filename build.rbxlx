<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="10">
		<Properties>
			<float name="AirDensity">0.00120000006</float>
			<bool name="AllowThirdPartySales">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AuthorityMode">1</token>
			<token name="AvatarUnificationMode">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="ClientAnimatorThrottling">0</token>
			<BinaryString name="CollisionGroupData">AQEABP////8HRGVmYXVsdA==</BinaryString>
			<Ref name="CurrentCamera">RBX957814d10da643648bb4addd8aaead4a</Ref>
			<bool name="DefinesCapabilities">false</bool>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<bool name="FallHeightEnabled">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<token name="FluidForces">0</token>
			<Vector3 name="GlobalWind">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="Gravity">196.199997</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="IKControlConstraintSupport">0</token>
			<token name="LevelOfDetail">0</token>
			<token name="LuauTypeCheckMode">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<token name="ModelStreamingBehavior">0</token>
			<token name="ModelStreamingMode">0</token>
			<token name="MoverConstraintRootBehavior">0</token>
			<string name="Name">Workspace</string>
			<bool name="NeedsPivotMigration">false</bool>
			<token name="PathfindingUseImprovedSearch">0</token>
			<token name="PhysicsImprovedSleep">0</token>
			<token name="PhysicsSteppingMethod">0</token>
			<token name="PlayerCharacterDestroyBehavior">0</token>
			<token name="PrimalPhysicsSolver">0</token>
			<Ref name="PrimaryPart">null</Ref>
			<token name="RejectCharacterDeletions">0</token>
			<token name="RenderingCacheOptimizations">0</token>
			<token name="ReplicateInstanceDestroySetting">0</token>
			<token name="Retargeting">0</token>
			<token name="SandboxedInstanceMode">0</token>
			<float name="ScaleFactor">1</float>
			<token name="SignalBehavior2">0</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="StreamOutBehavior">0</token>
			<bool name="StreamingEnabled">false</bool>
			<token name="StreamingIntegrityMode">0</token>
			<int name="StreamingMinRadius">64</int>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TerrainWeldsFixed">true</bool>
			<token name="TouchEventsUseCollisionGroups">0</token>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000002</UniqueId>
			<token name="UseImprovedModelLod">0</token>
			<token name="UseNewLuauTypeSolver">0</token>
			<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
		</Properties>
		<Item class="Camera" referent="RBX957814d10da643648bb4addd8aaead4a">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>101.014275</Y>
					<Z>121.267845</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>-0</R10>
					<R11>0.780868828</R11>
					<R12>0.624695063</R12>
					<R20>0</R20>
					<R21>-0.624695063</R21>
					<R22>0.780868828</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>0</X>
					<Y>0</Y>
					<Z>-5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000036c</UniqueId>
				<bool name="VRTiltAndRollEnabled">false</bool>
			</Properties>
		</Item>
		<Item class="Part" referent="11">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-10</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284636770</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Baseplate</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000398</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>20</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Terrain" referent="RBXccdc2a2b9144400ebed9c2237231576e">
			<Properties>
				<token name="AcquisitionMethod">0</token>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="Decoration">false</bool>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="GrassLength">0.699999988</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<bool name="SmoothVoxelsUpgraded">false</bool>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000399</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0500000007</R>
					<G>0.330000013</G>
					<B>0.360000014</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX6da0f4c76b0649d09060b40311980fd1">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Utils</string>
				<string name="ScriptGuid">{1a853f02-4bc8-46d4-bff8-acf0665c15b6}</string>
				<ProtectedString name="Source"><![CDATA[
-- // Services
local RunService = game:GetService("RunService")

local Utils = {}

-- Require all child module scripts
local function initialise()
	for _, v in script:GetDescendants() do
		if (v:IsA("ModuleScript")) then
			-- Check that there isn't another module with the same name
			if (Utils[v.Name]) then
				warn("Duplicate util names found:", v)
				break
			end
			Utils[v.Name] = require(v)
		end
	end
end

-- Initialisation
initialise()

if (RunService:IsServer()) then
	print("[SERVER]: -- // Utils Loaded! // --")
else
	print("[CLIENT]: -- // Utils Loaded! // --")
end

return Utils
]]></ProtectedString>
				<int64 name="SourceAssetId">78561310926950</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a69</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBX95cb348b21534ba89d2cdcbfd171e427">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Core</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a6a</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBXf6d49033f0644cacb4557445d65556ae">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ReplicatedData</string>
						<string name="ScriptGuid">{092dd3a8-e294-4c40-a660-596e642cf80c}</string>
						<ProtectedString name="Source"><![CDATA[
-- // Services
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local DataRemoteEvent = Remotes:WaitForChild("GetData")

-- // Constants
local DEBUG_CATEGORIES -- Categories that will print on update (for debugging)
	= {}

-- // Module // --
local ReplicatedData = {}

if RunService:IsServer() then
	-- Server code
	ReplicatedData.Replications = {Public = {}, Private = {}}
	
	-- playertable is optional, if no table replicate to all
	function ReplicatedData:SetData(category, data, playerTable)
		if playerTable then
			-- Private data to a group of players
			table.insert(ReplicatedData.Replications.Private, {category, data, playerTable})
		else
			-- Public data
			ReplicatedData.Replications.Public[category] = data
		end
	end
	
	function ReplicatedData:UpdateData(category, data, playerTable)
		if playerTable then
			for _, localPlayer in ipairs(playerTable) do
				DataRemoteEvent:FireClient(localPlayer, category, data)
			end
		else
			DataRemoteEvent:FireAllClients(category, data)
		end
	end
	
	function ReplicatedData:RemoveData(category)
		if ReplicatedData.Replications.Public[category] then
			ReplicatedData.Replications.Public[category] = nil
		end
		for index, replicationInfo in ipairs(ReplicatedData.Replications.Private) do
			if replicationInfo[1] == category then
				table.remove(ReplicatedData.Replications.Private, index)
			end
		end
	end
	
	DataRemoteEvent.OnServerEvent:Connect(function(p)
		-- Return all public data
		for publicCategory, publicData in ipairs(ReplicatedData.Replications.Public) do
			DataRemoteEvent:FireClient(p, publicCategory, publicData)
		end
		-- Return their private data
		for _, replicationInfo in ipairs(ReplicatedData.Replications.Private) do
			local category, data, playerTable = unpack(replicationInfo)
			if table.find(playerTable, p) then
				DataRemoteEvent:FireClient(p, category, data)
			end
		end
	end)
	
	-- Main loop
	task.spawn(function()
		local publicComparisonCache = {} -- Category = cached_string
		local privateComparisonCache = {} -- Player = {Categot = cached_string}
		while task.wait(0.2) do
			
			-- Public data replicates to all
			for category, publicData in pairs(ReplicatedData.Replications.Public) do
				print("Public data:", category, publicData)
				local newEncodedString = HttpService:JSONEncode(publicData)
				if (not publicComparisonCache[category]) or newEncodedString ~= publicComparisonCache[category] then
					-- Update the data
					publicComparisonCache[category] = newEncodedString
					ReplicatedData:UpdateData(category, publicData, nil)
				end
			end
			
			-- Private data replicates to specific players
			for _, replicationInfo in pairs(ReplicatedData.Replications.Private) do
				local category, data, playerTable = unpack(replicationInfo)
				local newEncodedString = HttpService:JSONEncode(data)
				
				if not privateComparisonCache[playerTable] then
					privateComparisonCache[playerTable] = {}
				end
				
				local comparisonString = privateComparisonCache[playerTable][category]
				
				if (not comparisonString) or newEncodedString ~= comparisonString then
					-- Update the data
					privateComparisonCache[playerTable][category] = newEncodedString
					ReplicatedData:UpdateData(category, data, playerTable)
				end
			end
		end
	end)
else
	-- Client code
	local player = game.Players.LocalPlayer
	
	ReplicatedData.OnUpdate = Instance.new("BindableEvent")
	
	local dataContainer = {}
	
	function ReplicatedData:GetData(category, yield)
		if dataContainer[category] then
			return dataContainer[category]
		end
		
		if yield then
			local yieldStart = tick()
			repeat task.wait(0.2)
			until dataContainer[category] or (tick() - yieldStart) > 25
		end
		return dataContainer[category]
	end
	
	-- Keep track of which categories have been printed to the console
	local received_categories = {}
	
	DataRemoteEvent.OnClientEvent:Connect(function(category, data)
		if (not received_categories[category]) then
			task.delay(1.5, print, "Data recieved: Category =", category, " Data =", data)
		elseif (table.find(DEBUG_CATEGORIES, category)) then
			print("Data recieved: Category =", category, " Data =", data)
		end
		received_categories[category] = true
		
		ReplicatedData.OnUpdate:Fire(category, data)
		dataContainer[category] = data
	end)
	
	-- Get initial data
	DataRemoteEvent:FireServer()
end

return ReplicatedData
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a6b</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXf252f059bb8d4ef69a64b3e70a61ff1c">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Badges</string>
						<string name="ScriptGuid">{5a4196ee-c9af-499c-b1f4-01414ee943f3}</string>
						<ProtectedString name="Source"><![CDATA[
-- Services
local BadgeService = game:GetService("BadgeService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- // Module
local BadgeModule = {}

BadgeModule.Badges = {
	["Default"] = {ID = 12345678};
}

function BadgeModule:AwardBadge(p, stringID)
	
	local badgeInfo = BadgeModule:GetBadgeFromStringID(stringID)
	if not (badgeInfo) then return end
	
	local success, result = pcall(function()
		return BadgeService:GetBadgeInfoAsync(badgeInfo.ID)
	end)
	
	if success then
		-- Check the badge can be awarded
		if result.IsEnabled then
			
			-- Attempt to award the badge
			local awarded, errorMessage = pcall(function()
				BadgeService:AwardBadge(p.UserId, badgeInfo.ID)
			end)
			
			if not awarded then
				warn("Error awarding badge (id: " .. (badgeInfo.ID or "nil") .. "):", errorMessage)
			end
		end
	end
end

-- // Return Badges
function BadgeModule:GetBadgeFromStringID(stringID)
	if (BadgeModule.Badges[stringID]) then
		return BadgeModule.Badges[stringID]
	end
	warn("No badge found with string ID:", stringID)
	return nil
end

return BadgeModule
]]></ProtectedString>
						<int64 name="SourceAssetId">8230682470</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a6c</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX60643555b1014c468b18cd7c900cadbf">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Remotes</string>
						<string name="ScriptGuid">{b2409ac7-d5a3-4988-8b2a-199e03b03f62}</string>
						<ProtectedString name="Source"><![CDATA[
-- // Version 1.00 // 19/02/25 // Shepp2004 // --

-- // Services
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- //** Customise **// --
local Folder = ReplicatedStorage:WaitForChild("Remotes")

-- // Constants
local YIELD_TIME = 10

-- // Module // --
local Module = {}
Module.Remotes = {
	RemoteEvents = {};
	RemoteFunctions = {};
}

-- // Public Methods
function Module:GetRemoteEvent(remoteID : string, yield : boolean)
	if (Module.Remotes.RemoteEvents[remoteID]) then
		return Module.Remotes.RemoteEvents[remoteID]
	end
	
	-- If client-sided, yield until the RemoteEvent exists
	if (RunService:IsClient() and yield) then
		local yieldStart = tick()
		repeat task.wait()
		until (Folder:FindFirstChild(remoteID) or tick() - yieldStart > YIELD_TIME)
		
		if (Folder:FindFirstChild(remoteID)) then
			Module.Remotes.RemoteEvents[remoteID] = Folder:FindFirstChild(remoteID)
			return Module.Remotes.RemoteEvents[remoteID]
		else
			warn("Couldn't find remote event", remoteID)
			return nil
		end
	end
	
	-- If the remote doesn't yet exist, create it on the server
	if (RunService:IsServer()) then
		local remote : RemoteEvent = Instance.new("RemoteEvent")
		remote.Name = remoteID
		remote.Parent = Folder
		
		Module.Remotes.RemoteEvents[remoteID] = remote
		return remote
	end
	
	return nil
end

function Module:GetRemoteFunction(remoteID : string, yield : boolean)
	if (Module.Remotes.RemoteFunctions[remoteID]) then
		return Module.Remotes.RemoteFunctions[remoteID]
	end

	-- If client-sided, yield until the RemoteEvent exists
	if (RunService:IsClient() and yield) then
		local yieldStart = tick()
		repeat task.wait()
		until (Module.Remotes.RemoteFunctions[remoteID] or tick() - yieldStart > YIELD_TIME)

		if (Module.Remotes.RemoteFunctions[remoteID]) then
			return Module.Remotes.RemoteFunctions[remoteID]
		else
			warn("Couldn't find remote function", remoteID)
			return nil
		end
	end

	-- If the remote doesn't yet exist, create it on the server
	if (RunService:IsServer()) then
		local remote : RemoteFunction = Instance.new("RemoteFunction")
		remote.Name = remoteID
		remote.Parent = Folder

		Module.Remotes.RemoteFunctions[remoteID] = remote
		return remote
	end
end

return Module
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a6d</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX7863264488a74d9980f08f94611c7268">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">NumLib</string>
						<string name="ScriptGuid">{9baccbfe-a607-4a1a-8fef-f1d664775b84}</string>
						<ProtectedString name="Source"><![CDATA[local NumLib = {}

NumLib.Suffixes = {"k","M","B","T","qd","Qn","sx","Sp","O","N","de","Ud","DD","tdD","qdD","QnD","sxD","SpD","OcD","NvD","Vgn","UVg","DVg","TVg","qtV","QnV","SeV","SPG","OVG","NVG","TGN","UTG","DTG","tsTG","qtTG","QnTG","ssTG","SpTG","OcTG","NoTG","QdDR","uQDR","dQDR","tQDR","qdQDR","QnQDR","sxQDR","SpQDR","OQDDr","NQDDr","qQGNT","uQGNT","dQGNT","tQGNT","qdQGNT","QnQGNT","sxQGNT","SpQGNT", "OQQGNT","NQQGNT","SXGNTL"}                                              

-- // Currency
function NumLib:ExpandString(str)
	local result
	
	local eCutoff = string.find(str, "e%+")
	if (eCutoff) then
		local coeff = string.sub(str, 1, eCutoff - 1)
		local expo = string.sub(str, eCutoff + 2, string.len(str))
		result = coeff * 10 ^ expo
	else
		for i, v in pairs(NumLib.Suffixes) do
			local cutoff = string.find(str, v)
			if (cutoff) and (string.sub(str, string.len(str) - string.len(v) + 1) == v) then
				local amount = string.sub(str, 1, string.len(str) - string.len(v))
				local answer = tonumber(amount) * 10 ^ (3 * i)
				result = answer
				break
			end
		end
	end
	
	return result
end

function NumLib:ShortenNumber(input : number)
	if (not tonumber(input)) then
		warn("Can't shorten", input, "(not a number!) - Use ':' not '.'")
		return
	end
	
	local isNegative = input < 0
	input = math.abs(input)
	
	local paired = false
	for i, v in pairs(NumLib.Suffixes) do
		if input < (10 ^ (3 * i)) then
			input = input / 10^(3*(i-1))
			local isComplex = string.find(tostring(input), ".") and string.sub(tostring(input), 4, 4) ~= "."
			input = string.sub(tostring(input), 1, (isComplex and 4) or 3) .. (NumLib.Suffixes[i - 1] or "")
			paired = true
			break	
		end
	end
	
	if not (paired) then
		input = tostring(math.floor(input))
	end
	
	if (isNegative) then
		input = "-" .. input
	end
	
	return input
end

-- // General
function NumLib:RoundToSF(number, sf)
	local pow = #tostring(math.floor(number)) - sf
	return math.floor((number / (10 ^ pow)) + 0.5) * (10 ^ pow)
end

function NumLib:RoundToDp(number, dp)
	return math.floor(number * 10^dp) / 10 ^ dp
end

function NumLib:ToTimeString(number)

	local days = math.floor(number / (3600 * 24))
	local hours = math.floor((number - (days * 3600 * 24)) / 3600)
	local mins = math.floor((number - (days * 3600 * 24) - (hours * 3600)) / 60)
	local secs = math.floor((number - (days * 3600 * 24) - (hours * 3600) - (mins * 60)))
	
	if days == 0 then
		if hours == 0 then
			if not (mins == 0) then
				secs = string.format("%.2i", secs)
			end
		else
			mins = string.format("%.2i", mins)
			secs = string.format("%.2i", secs)
		end
	else
		hours = string.format("%.2i", hours)
		mins = string.format("%.2i", mins)
		secs = string.format("%.2i", secs)
	end
	
	local text
	if (number >= 3600 * 24) then
		text = days .. ":" .. hours .. ":" .. mins .. ":" .. secs
	elseif (number >= 3600) then
		text = hours .. ":" .. mins .. ":" .. secs
	elseif (number >= 60) then
		text = mins .. ":" .. secs
	else
		text = secs
	end
	
	return text
end

function NumLib:AddSuffix(number)
	local i = "th"
	local n = tostring(number)
	if string.sub(n, #n-1, #n-1) ~= "1" then -- it's not 11 or 12 or 13
		if string.sub(n,#n, n) == "1" then
			i = "st"
		elseif string.sub(n,#n, n) == "2" then
			i = "nd"
		elseif string.sub(n,#n, n) == "3" then
			i = "rd"
		end
	end
	return n .. i
end

function NumLib:RoundToNearestMultiple(a, b) -- 21, 5
	local rounded = (math.floor(a / b + 0.5) * b)
	return rounded
end

return NumLib
]]></ProtectedString>
						<int64 name="SourceAssetId">14384329400</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a6e</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX0a52f1f91d1146768e47ab75be5f9f1a">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Gui</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a6f</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX6ae04f7cad834227bb54d43d21973c0b">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Messages</string>
						<string name="ScriptGuid">{a0810910-98ca-412e-a2ee-4b55ab8be05a}</string>
						<ProtectedString name="Source"><![CDATA[
-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TextChatService = game:GetService("TextChatService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")

-- Remotes and events
local Remotes = {}

-- Constants
local isClient = RunService:IsClient()
local defaultMessageDuration = 4
local defaultGui = script:WaitForChild("MessageGui")

-- // Module
local MessageModule = {}

local errorMessageColor = Color3.fromRGB(255, 0, 10)
local successMessageColor = Color3.fromRGB(10, 225, 100)

MessageModule.DefaultProperties = {
	Text = "";
	Font = Enum.Font.FredokaOne;
	FontSize = Enum.FontSize.Size96;
	Color = Color3.fromRGB(255, 255, 255);
}

MessageModule.ChatColors = {
	Color3.fromRGB(255, 0, 0);
	Color3.fromRGB(255, 150, 0);
	Color3.fromRGB(255, 255, 0);
	Color3.fromRGB(0, 255, 0);
	Color3.fromRGB(0, 255, 255);
	Color3.fromRGB(50, 150, 255);
	Color3.fromRGB(255, 50, 200);
	Color3.fromRGB(255, 0, 255)
}

function MessageModule.ServerMessage(properties)
	-- :SetCore() can only be run on the client
	-- Fire a remote event if this function is being run on the server
	if (isClient) then
		local textChannel : TextChannel = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXSystem")
		
		local color = properties.Color or Color3.fromRGB(255, 255, 255)
		local message = `<font color = '#{color:ToHex()}'>{properties.Text}</font>`
		textChannel:DisplaySystemMessage(
			message
		)
	else
		Remotes["ServerMessage"]:FireAllClients(properties)
	end
end

-- // Client only code
if (isClient) then
	local player = Players.LocalPlayer
	local PlayerGui = player:WaitForChild("PlayerGui")
	
	-- Gui
	local gui : ScreenGui = PlayerGui:FindFirstChild("MessageGui")
	if not (gui) then
		gui = defaultGui:Clone()
		gui.Parent = PlayerGui
	end
	local messages : Frame = gui:WaitForChild("Messages")
	
	function MessageModule:LocalMessage(text, msgType, color, duration)
		-- Check if a message with this description already exists
		local existingFrame
		for _, frame in messages:GetChildren() do
			if (frame:IsA("Frame")) then
				local textToCompare = frame.TextLabel.Text
				if (textToCompare == text) or (string.sub(textToCompare, 1, #textToCompare - 3) == text) then
					existingFrame = frame
					break
				end
			end
		end
		
		-- Clone a new message frame
		local frame = script.SampleMessage:Clone()
		if (msgType) then 
			if msgType == "Error" then
				frame.TextLabel.TextColor3 = errorMessageColor
			elseif msgType == "Success" then
				frame.TextLabel.TextColor3 = successMessageColor
			end
		else
			frame.TextLabel.TextColor3 = color or Color3.fromRGB(255, 255, 255)
		end
		
		if (existingFrame) then
			-- Check how many times this message has been shown
			local existingText = existingFrame.TextLabel.Text
			local n = string.sub(existingText, #existingText, #existingText)
			if tonumber(n) then
				frame.TextLabel.Text = text .. " X" .. (n + 1)
			else
				frame.TextLabel.Text = text .. " X2"
			end
			existingFrame:Destroy()
		else
			frame.TextLabel.Text = text or ""
		end
		
		frame.Parent = messages
		
		task.delay((duration or defaultMessageDuration), function()
			for i = 0, 1, 0.05 do
				if not (frame.Parent) then return end
				frame.TextLabel.TextTransparency = i
				frame.TextLabel.UIStroke.Transparency = i
				task.wait()
			end
			frame:Destroy()
		end)
	end
else
	function MessageModule:ShowMessage(...)
		Remotes["LocalMessage"]:FireClient(...)
	end	
end

local function initialise()
	if (isClient) then
		-- Get Remotes
		local ServerMessageRemote = ReplicatedStorage.Remotes:WaitForChild("ServerMessage")
		local LocalMessageRemote = ReplicatedStorage.Remotes:WaitForChild("LocalMessage")
		
		ServerMessageRemote.OnClientEvent:Connect(function(...)
			MessageModule.ServerMessage(...)
		end)
		
		LocalMessageRemote.OnClientEvent:Connect(function(...)
			MessageModule:LocalMessage(...)
		end)
	else
		-- Create Remotes
		local ServerMessageRemote = Instance.new("RemoteEvent", ReplicatedStorage.Remotes)
		ServerMessageRemote.Name = "ServerMessage"
		Remotes["ServerMessage"] = ServerMessageRemote
		
		local LocalMessageRemote = Instance.new("RemoteEvent", ReplicatedStorage.Remotes)
		LocalMessageRemote.Name = "LocalMessage"
		Remotes["LocalMessage"] = LocalMessageRemote
	end
end

-- Initialisation
initialise()

return MessageModule
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a70</UniqueId>
					</Properties>
					<Item class="Frame" referent="RBX3d44b27eab4143ec9da6ebf9527a1e67">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">SampleMessage</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0.25</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a71</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX7f00162e0f0744a6b32b169bc6784071">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">This is a sample message (x1)</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a72</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="UIStroke" referent="RBX69617be6c98f4d3b8b3b9254d7884819">
								<Properties>
									<token name="ApplyStrokeMode">0</token>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<UDim name="BorderOffset">
										<S>0</S>
										<O>0</O>
									</UDim>
									<token name="BorderStrokePosition">0</token>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<Color3 name="Color">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Enabled">true</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<token name="LineJoinMode">0</token>
									<string name="Name">UIStroke</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="Thickness">1</float>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a73</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ScreenGui" referent="RBX1437d3b8bff747d288b42a49e8049e62">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipToDeviceSafeArea">true</bool>
							<bool name="DefinesCapabilities">false</bool>
							<int name="DisplayOrder">5</int>
							<bool name="Enabled">true</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">MessageGui</string>
							<bool name="ResetOnSpawn">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SafeAreaCompatibility">1</token>
							<token name="ScreenInsets">0</token>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a74</UniqueId>
							<token name="ZIndexBehavior">1</token>
						</Properties>
						<Item class="Frame" referent="RBX9a0684ac3913417e94d5b30210a3ecca">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>1</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Messages</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.800000012</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.699999988</XS>
									<XO>0</XO>
									<YS>0.25</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a75</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="UIListLayout" referent="RBX35b26bea015d4de78cfa4832db0aafe2">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="FillDirection">1</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<token name="HorizontalAlignment">1</token>
									<token name="HorizontalFlex">0</token>
									<token name="ItemLineAlignment">0</token>
									<string name="Name">UIListLayout</string>
									<UDim name="Padding">
										<S>0</S>
										<O>0</O>
									</UDim>
									<token name="SortOrder">2</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a76</UniqueId>
									<token name="VerticalAlignment">2</token>
									<token name="VerticalFlex">0</token>
									<bool name="Wraps">false</bool>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX56b4ce20cba3437aac6e21dc65c84c85">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Guis</string>
						<string name="ScriptGuid">{a4dff620-adb8-4d6d-8751-ccc00fbd8c96}</string>
						<ProtectedString name="Source"><![CDATA[
-- // Version 1.00 // 19/02/25 // Shepp2004 // --
-- /* Requires at least one local script to require Utils to run */ --

-- // Services
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")
local Players = game:GetService("Players")

local Module = {}
Module.Components = {}

-- // Server Only!
if (RunService:IsServer()) then return {} end
-- //

-- // Private Variables
local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")
local originalSizes = {}

-- // Constants
local YIELD_TIME = 10
local SoundsFolder = script:WaitForChild("Sounds")

-- // GUI Management
function Module:ToggleGUI(guiID : string, enabled : boolean)
	-- Get the required GUI
	local gui : ScreenGui = Module:GetGUI(guiID)
	if not (gui) then return end

	if (enabled ~= nil) then
		gui.Enabled = enabled
	else
		gui.Enabled = not gui.Enabled
	end
end

function Module:GetGUI(guiID : string, yield : boolean)
	if (PlayerGui:FindFirstChild(guiID)) then
		return PlayerGui[guiID]
	end
	
	if (yield) then
		local yieldStart = tick()
		repeat task.wait()
		until (PlayerGui:FindFirstChild(guiID) or tick() - yieldStart > YIELD_TIME)
		
		if (PlayerGui:FindFirstChild(guiID)) then
			return PlayerGui[guiID]
		end
	end
	warn("No GUI found with ID:", guiID)
	return nil
end

-- // Menu Management
function Module:OpenMenu(frame : Frame, closeOtherMenus : boolean)
	task.spawn(function()
		-- Assumes 'frame' is a full-screen frame
		frame.Visible = true
		
		-- Optional: if menu has a radial burst background, fade it in
		if (frame:FindFirstChild("RadialBurst")) then
			if not (frame.RadialBurst:IsA("CanvasGroup")) then
				warn(frame.RadialBurst, "must be a canvas group!")
			else
				for i = 0, 1, -0.1 do
					frame.RadialBurst.GroupTransparency = i
					task.wait()
				end
				frame.RadialBurst.GroupTransparency = 0
			end
		end

		if (frame:HasTag("ExpandingMenu")) then
			if not (originalSizes[frame]) then
				originalSizes[frame] = frame.Frame.Size
			end

			frame.Frame.Visible = true
			frame.Frame.Size = UDim2.fromScale(0, 0)
			frame.Frame:TweenSize(originalSizes[frame], "In", "Quart", 0.25)
			task.wait(0.25)
		end

		frame:TweenPosition(UDim2.fromScale(0, 0), "In", "Quart", 0.25)

		if (closeOtherMenus) then
			for _, otherFrame in frame.Parent:GetChildren() do
				if (otherFrame:IsA("Frame") and otherFrame ~= frame) then
					otherFrame:TweenPosition(UDim2.fromScale(0, 1), "Out", "Quart", 0.1)
					task.delay(0.1, function() otherFrame.Visible = false end)
				end
			end
		end
	end)
end

function Module:CloseMenu(frame : Frame)
	task.spawn(function()
		-- // Optional Animations
		if (frame:HasTag("ExpandingMenu")) then
			if (originalSizes[frame]) then
				frame.Frame:TweenSize(UDim2.fromScale(0, 0), "In", "Quart", 0.2)
				task.wait(0.2)
				frame.Frame.Visible = false
			end
		end

		if (frame:FindFirstChild("RadialBurst")) then
			if not (frame.RadialBurst:IsA("CanvasGroup")) then
				warn(frame.RadialBurst, "must be a canvas group!")
			else
				for i = 0, 1, 0.05 do
					frame.RadialBurst.GroupTransparency = i
					task.wait()
				end
				frame.RadialBurst.GroupTransparency = 1
			end
		end
		-- //
		
		frame:TweenPosition(UDim2.fromScale(0, 1), "In", "Quart", 0.1)
		task.wait(0.1)
		frame.Visible = false
	end)
end

function Module:CloseMenus(parentFrame : Frame)
	for _, frame in parentFrame:GetChildren() do
		if (frame:IsA("Frame")) then
			Module:CloseMenu(frame)
		end
	end
end

-- // Close Buttons
local function setupCloseButtons()
	task.spawn(function()
		-- Wait until at least one button exists
		local yieldStart = tick()
		repeat task.wait(.5)
		until (#CollectionService:GetTagged("CloseButton") > 0 or tick() - yieldStart > 20)

		if (#CollectionService:GetTagged("CloseButton") == 0) then
			return
		end

		for _, closeButton in CollectionService:GetTagged("CloseButton") do
			-- Skip if not a member of player gui
			if not (closeButton:IsDescendantOf(PlayerGui)) then continue end

			local selectButton = closeButton:FindFirstChild("Select")
			if not (selectButton) then
				warn(closeButton, "has no select button!")
				continue
			end
			
			local menu : Frame
			local parent = closeButton.Parent
			
			while (parent ~= PlayerGui and parent.Parent.Name ~= "Menus") do
				task.wait()
				parent = parent.Parent
			end

			-- Check that the close button is a descendant of a menu
			if (parent.Parent.Name ~= "Menus") then
				warn(closeButton, "is not a child of a menu!")
				continue
			end
			
			menu = parent
			selectButton.MouseButton1Click:Connect(function()
				SoundsFolder.ButtonClick1:Play()
				Module:CloseMenu(menu)
			end)
		end
	end)
end

local function initialise()
	-- Require Components
	for _, m in script:WaitForChild("Components"):GetChildren() do
		task.spawn(function()
			Module.Components[m.Name] = require(m)
		end)
	end
	
	-- Whenever a new GUI is added to PlayerGui, activate any new elements
	PlayerGui.ChildAdded:Connect(function(child)
		for name, comp in Module.Components do
			if (comp.ActivateElements) then
				comp:ActivateElements()
			end
		end
	end)
	
	setupCloseButtons()
end

-- Initialisation
initialise()

return Module
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a77</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBX1c630839df7143348af9241fb3b8a74f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Components</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a78</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBXb4c62a77d8c045e5b8a101fb97a5c588">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">ExpandingButton</string>
								<string name="ScriptGuid">{797326c6-cd32-4858-86a4-4346e3a922cd}</string>
								<ProtectedString name="Source"><![CDATA[
--[[
	Requires: A frame with the following :
	- an invisible text button with the name 'Select'
	- a child frame with the name 'Button'
]]--

-- // Services
local TweenService = game:GetService("TweenService")
local CollectionService = game:GetService("CollectionService")

-- // Constants
local TAG = "ExpandingButton"

-- // Component // --
local GuiComponent = {}

-- // Public Methods
function GuiComponent:Create(button : Frame)
	local selectButton : TextButton = button:FindFirstChild("Select")
	if not (selectButton) then
		warn(TAG, "Error:", button, "has no child select!")
		return
	end
	
	local childFrame : Frame = button:FindFirstChild("Button")
	if not (childFrame) then
		warn(TAG, "Error:", button, "has no child called Button!")
		return
	end
	
	-- Create tweens
	local inTweens = {}
	local outTweens = {}
	
	local gradientFrame = button:FindFirstChild("GradientFrame")
	if (gradientFrame) then
		gradientFrame.Transparency = 1
		gradientFrame.Visible = true
		inTweens.Gradient = TweenService:Create(
			gradientFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Transparency = 0}
		)
		outTweens.Gradient = TweenService:Create(
			gradientFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Transparency = 1}
		)
	end

	inTweens.Frame = TweenService:Create(
		childFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quart),
		{Size = UDim2.fromScale(1, 1)}
	)
	outTweens.Frame = TweenService:Create(
		childFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quart),
		{Size = childFrame.Size}
	)

	selectButton.MouseEnter:Connect(function()
		for _, v in inTweens do
			v:Play()
		end
		selectButton.MouseLeave:Wait()
		for _, v in outTweens do
			v:Play()
		end
	end)
end

local activeElements = {}
function GuiComponent:ActivateElements()
	for _, v in CollectionService:GetTagged(TAG) do
		if (activeElements[v]) then continue end
		GuiComponent:Create(v)
		activeElements[v] = true
	end
end

local function initialise()
	-- Wait until at least one button exists
	local yieldStart = tick()
	repeat task.wait(.5)
	until (#CollectionService:GetTagged(TAG) > 0 or tick() - yieldStart > 20)
	
	if (#CollectionService:GetTagged(TAG) == 0) then
		return
	end
	
	GuiComponent:ActivateElements()
end

-- Initialisation
initialise()

return GuiComponent
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a79</UniqueId>
							</Properties>
							<Item class="Frame" referent="RBX85227c680b414ac7abacc5499a49d24e">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Template</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0.200000003</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags">RXhwYW5kaW5nQnV0dG9u</BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a7a</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXcc5b0b7eaf224e52b7690b7efa5765f7">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>-10</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a7b</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXc3093d50339b4634a0933766a36edfd2">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0.5</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
												<Weight>700</Weight>
												<Style>Normal</Style>
											</Font>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>0.5</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-15</XO>
												<YS>1</YS>
												<YO>-15</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<string name="Text">Expand</string>
											<Color3 name="TextColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a7c</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="UICorner" referent="RBX3ad1ce07cfc74421a4220fdafb2946af">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<UDim name="CornerRadius">
												<S>0.200000003</S>
												<O>0</O>
											</UDim>
											<bool name="DefinesCapabilities">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">UICorner</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a7d</UniqueId>
										</Properties>
									</Item>
								</Item>
								<Item class="TextButton" referent="RBX94570c47604a4e73865b79d8d019156b">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoButtonColor">true</bool>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
											<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
										</Font>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Ref name="HoverHapticEffect">null</Ref>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<bool name="Modal">false</bool>
										<string name="Name">Select</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<string name="OpenTypeFeatures"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="PressHapticEffect">null</Ref>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text"></string>
										<Color3 name="TextColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a7e</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">5</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX3c566a70e9dc4acab4e6e97a3b960195">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BouncingButton</string>
								<string name="ScriptGuid">{5ba4e7b1-1600-4efe-8011-56f8eb5d930f}</string>
								<ProtectedString name="Source"><![CDATA[
--[[
	Requires: A frame with the following :
	- an invisible text button with the name 'Select'
	- a child frame with the name 'Button'
]]--

-- // Services
local TweenService = game:GetService("TweenService")
local CollectionService = game:GetService("CollectionService")

-- // Constants
local TAG = "BouncingButton"

-- // Component // --
local GuiComponent = {}

-- // Public Methods
function GuiComponent:Create(button : Frame)
	local selectButton : TextButton = button:FindFirstChild("Select")
	if not (selectButton) then
		warn(TAG, "Error:", button, "has no child select!")
		return
	end
	
	local childFrame : Frame = button:FindFirstChild("Select")
	if not (childFrame) then
		warn(TAG, "Error:", button, "has no child called Button!")
		return
	end
	
	local inTweens = {}
	local outTweens = {}

	local imageLabel = childFrame:FindFirstChild("ImageLabel")
	if (imageLabel) then
		inTweens.Image = TweenService:Create(
			imageLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Rotation = 30}
		)
		outTweens.Image = TweenService:Create(
			imageLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Rotation = 0}
		)
	end

	local gradientFrame = childFrame:FindFirstChild("GradientFrame")
	if (gradientFrame) then
		gradientFrame.Transparency = 1
		gradientFrame.Visible = true
		inTweens.Gradient = TweenService:Create(
			gradientFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Transparency = 0.8}
		)
		outTweens.Gradient = TweenService:Create(
			gradientFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Transparency = 1}
		)
	end

	inTweens.Frame = TweenService:Create(
		childFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quart),
		{Position = UDim2.new(childFrame.Position.X.Scale, childFrame.Position.X.Offset, 0.5, -5)}
	)
	outTweens.Frame = TweenService:Create(
		childFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quart),
		{Position = childFrame.Position}
	)

	selectButton.MouseEnter:Connect(function()
		for _, v in inTweens do
			v:Play()
		end
		selectButton.MouseLeave:Wait()
		for _, v in outTweens do
			v:Play()
		end
	end)
end

local activeElements = {}
function GuiComponent:ActivateElements()
	for _, v in CollectionService:GetTagged(TAG) do
		if (activeElements[v]) then continue end
		GuiComponent:Create(v)
		activeElements[v] = true
	end
end

local function initialise()
	-- Wait until at least one button exists
	local yieldStart = tick()
	repeat task.wait(.5)
	until (#CollectionService:GetTagged(TAG) > 0 or tick() - yieldStart > 20)
	
	if (#CollectionService:GetTagged(TAG) == 0) then
		return
	end
	
	GuiComponent:ActivateElements()
end

-- Initialisation
initialise()

return GuiComponent
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a7f</UniqueId>
							</Properties>
							<Item class="Frame" referent="RBX5edf2b2754974a25a2587da86b5ae97c">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Template</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0.200000003</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags">Qm91bmNpbmdCdXR0b24=</BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a80</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXbee783e4d9e44b3fa3aaacb36e22bddb">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>-10</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a81</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX9d2c752561104b7e8855f3c2eaa9faee">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0.5</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
												<Weight>700</Weight>
												<Style>Normal</Style>
											</Font>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>0.5</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-15</XO>
												<YS>1</YS>
												<YO>-15</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<string name="Text">Bounce</string>
											<Color3 name="TextColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a82</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="UICorner" referent="RBX2c324bf87ec748eab1b1172a66faf8d3">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<UDim name="CornerRadius">
												<S>0.200000003</S>
												<O>0</O>
											</UDim>
											<bool name="DefinesCapabilities">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">UICorner</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a83</UniqueId>
										</Properties>
									</Item>
								</Item>
								<Item class="TextButton" referent="RBXb2f2f0b6cbe8457e808cf07362f5610f">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoButtonColor">true</bool>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
											<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
										</Font>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Ref name="HoverHapticEffect">null</Ref>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<bool name="Modal">false</bool>
										<string name="Name">Select</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<string name="OpenTypeFeatures"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="PressHapticEffect">null</Ref>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text"></string>
										<Color3 name="TextColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a84</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">5</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX418c9531ae2148a284c010b45b8574e8">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">RotatingElement</string>
								<string name="ScriptGuid">{8d3e342d-75b1-4315-b502-9dc558a8be36}</string>
								<ProtectedString name="Source"><![CDATA[
-- // Services
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")

-- // Constants
local TAG = "RotatingElement"

-- // Component // --
local GuiComponent = {}

local function initialise()
	-- Wait until at least one button exists
	local yieldStart = tick()
	repeat task.wait(.5)
	until (#CollectionService:GetTagged(TAG) > 0 or tick() - yieldStart > 20)
	
	if (#CollectionService:GetTagged(TAG) == 0) then
		return
	end
	
	RunService:BindToRenderStep("RotateElements", Enum.RenderPriority.Last.Value, function()
		for _, v in CollectionService:GetTagged(TAG) do
			if (not v:IsDescendantOf(game.Players)) then continue end
			
			local speed = v:GetAttribute("RotateSpeed") or 1
			v.Rotation += speed
		end
	end)
end

-- Initialisation
initialise()

return GuiComponent
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a85</UniqueId>
							</Properties>
							<Item class="ImageLabel" referent="RBXd9a7d988b89a406aab370abfbf4dd44f">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize">AQAAAAsAAABSb3RhdGVTcGVlZAYAAAAAAADwPw==</BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Content name="Image"><url>rbxassetid://120013121116925</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">RotatingImage</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>100</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags">Um90YXRpbmdFbGVtZW50</BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a86</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX71700a7c6bd543d3a76fb7728a4945ae">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SwingingElement</string>
								<string name="ScriptGuid">{55cd6ea1-0f96-4d6b-8a6d-453f2d88daad}</string>
								<ProtectedString name="Source"><![CDATA[
-- // Services
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")

-- // Constants
local TAG = "SwingingElement"

-- // Component // --
local GuiComponent = {}

local function initialise()
	-- Wait until at least one button exists
	local yieldStart = tick()
	repeat task.wait(.5)
	until (#CollectionService:GetTagged(TAG) > 0 or tick() - yieldStart > 20)
	
	if (#CollectionService:GetTagged(TAG) == 0) then
		return
	end
	
	RunService:BindToRenderStep("SwingElements", Enum.RenderPriority.Last.Value, function()
		for _, v in CollectionService:GetTagged(TAG) do
			if (not v:IsDescendantOf(game.Players)) then continue end
			
			local t = tick()
			
			local maxAngle = v:GetAttribute("MaxSwingAngle") or 30
			local offset = v:GetAttribute("SwingOffset") or 0
			local speed = v:GetAttribute("SwingSpeed") or 1
			local func = v:GetAttribute("SwingFunction") or "Default"
			
			local rot : Number
			if (func == "Default") then
				rot = (math.sin(speed * t * 1.5) * math.cos(speed * 0.1 * t)) * maxAngle
			elseif (func == "Tan") then
				rot = (math.sin(speed * 0.25 * t) / math.cos(speed * 1 * t)) * maxAngle
			end
			
			v.Rotation = rot + offset
		end
	end)
end

-- Initialisation
initialise()

return GuiComponent
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a87</UniqueId>
							</Properties>
							<Item class="ImageLabel" referent="RBX2cf1076da0f64c5fb94877f50ff739d8">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"><![CDATA[BAAAAA0AAABNYXhTd2luZ0FuZ2xlBgAAAAAAAD5ADQAAAFN3aW5nRnVuY3Rpb24CBwAAAERl
ZmF1bHQLAAAAU3dpbmdPZmZzZXQGAAAAAAAANEAKAAAAU3dpbmdTcGVlZAYAAAAAAADwPw==]]></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Content name="Image"><url>rbxassetid://120013121116925</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">SwingingImage</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>100</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags">U3dpbmdpbmdFbGVtZW50</BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a88</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX4785427832004d4d82ae5ff89ab9a36a">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">ColourChangingElement</string>
								<string name="ScriptGuid">{0ab4551f-6562-4df4-b4ce-3c44258722f6}</string>
								<ProtectedString name="Source"><![CDATA[
-- // Services
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")

-- // Constants
local TAG = "ColourChangingElement"

-- // Component // --
local GuiComponent = {}

-- /* CUSTOMISE */ --
GuiComponent.ColourSets = {
	["Default"] = {
		[1] = BrickColor.new("Really red").Color;
		[2] = BrickColor.new("Neon orange").Color;
		[3] = BrickColor.new("New Yeller").Color;
		[4] = BrickColor.new("Lime green").Color;
		[5] = BrickColor.new("Electric blue").Color;
		[6] = BrickColor.new("Dark blue").Color;
		[7] = BrickColor.new("Royal purple").Color;
		[8] = BrickColor.new("Hot pink").Color;
	};
	
	["Greyscale"] = {
		[1] = Color3.fromRGB(0, 0, 0);
		[2] = Color3.fromRGB(128, 128, 128);
		[3] = Color3.fromRGB(255, 255, 255);
		[4] = Color3.fromRGB(128, 128, 128);
	};
	
	["Blue"] = {
		[1] = Color3.fromRGB(50, 150, 255);
		[2] = Color3.fromRGB(0, 0, 255);
		[3] = Color3.fromRGB(0, 200, 255);
		[4] = Color3.fromRGB(0, 255, 255);
	};
	-- Add custom ones here,
	-- change the attribute "ColourSet" to the one you want to use
}

local function initialise()
	-- Wait until at least one button exists
	local yieldStart = tick()
	repeat task.wait(.5)
	until (#CollectionService:GetTagged(TAG) > 0 or tick() - yieldStart > 20)
	
	if (#CollectionService:GetTagged(TAG) == 0) then
		return
	end
	
	RunService:BindToRenderStep("ChangeElementColours", Enum.RenderPriority.Last.Value, function()
		for _, v in CollectionService:GetTagged(TAG) do
			if (not v:IsDescendantOf(game.Players)) then continue end
			
			local t = tick()
			
			local colourSetID = v:GetAttribute("ColourSet") or "Default"
			local colourSetInfo = GuiComponent.ColourSets[colourSetID]
			if not (colourSetInfo) then
				warn("Could not find GUI colour set:", colourSetID)
				RunService:UnbindFromRenderStep("ChangeElementColours")
				return
			end
			
			local speed = 4 * math.clamp(1 / (v:GetAttribute("ColourChangeSpeed") or 1), 0, 10)
			
			local i = (t % (speed / #colourSetInfo)) / (speed / #colourSetInfo)
			local n1 = math.floor((t / speed) * #colourSetInfo) % #colourSetInfo
			local n2 = n1 + 1
			
			if n1 == 0 then n1 = #colourSetInfo end

			if n2 > #colourSetInfo then
				n2 = 1
			end
			
			local c1 = colourSetInfo[n1]
			local c2 = colourSetInfo[n2]
			
			local colour = c1:Lerp(c2, i)
			
			if (v:IsA("Frame") or v:IsA("GuiButton")) then
				v.BackgroundColor3 = colour
			elseif (v:IsA("ImageLabel")) then
				v.ImageColor3 = colour
			elseif (v:IsA("TextLabel")) then
				v.TextColor3 = colour
			end
		end
	end)
end

-- Initialisation
initialise()

return GuiComponent
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a89</UniqueId>
							</Properties>
							<Item class="Frame" referent="RBXa286cc8ea4b24e6eb6b69e40b56bdf74">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"><![CDATA[AgAAABEAAABDb2xvdXJDaGFuZ2VTcGVlZAaamZmZmZnpPwkAAABDb2xvdXJTZXQCBwAAAERl
ZmF1bHQ=]]></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>0.870588303</G>
										<B>0.525490224</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ColourChangeFrame</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.800000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags">Q29sb3VyQ2hhbmdpbmdFbGVtZW50</BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a8a</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UICorner" referent="RBX8ff5fbfea10a4218b04c7c8d0d85c487">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<UDim name="CornerRadius">
											<S>0.0500000007</S>
											<O>0</O>
										</UDim>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UICorner</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a8b</UniqueId>
									</Properties>
								</Item>
								<Item class="UIStroke" referent="RBX1f20abb7869f4b4f9a9fe0e8ab8ee7e6">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Enabled">true</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<token name="LineJoinMode">0</token>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Thickness">3</float>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a8c</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextButton" referent="RBX4cf0155d0675473db29f99f7c1ca38cd">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>1</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"><![CDATA[AgAAABEAAABDb2xvdXJDaGFuZ2VTcGVlZAaamZmZmZnZPwkAAABDb2xvdXJTZXQCCQAAAEdy
ZXlzY2FsZQ==]]></BinaryString>
									<bool name="AutoButtonColor">true</bool>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
										<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
									</Font>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Ref name="HoverHapticEffect">null</Ref>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<bool name="Modal">false</bool>
									<string name="Name">ColourChangeButton</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>-60</YO>
									</UDim2>
									<Ref name="PressHapticEffect">null</Ref>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0.100000001</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags">Q29sb3VyQ2hhbmdpbmdFbGVtZW50</BinaryString>
									<string name="Text">Button</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a8d</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">5</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBXd2fd112f074742369eafed354616dbdf">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"><![CDATA[AgAAABEAAABDb2xvdXJDaGFuZ2VTcGVlZAYAAAAAAADwPwkAAABDb2xvdXJTZXQCBwAAAERl
ZmF1bHQ=]]></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Content name="Image"><url>rbxassetid://120013121116925</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ColourChangeImage</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>100</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags">Um90YXRpbmdFbGVtZW50AENvbG91ckNoYW5naW5nRWxlbWVudA==</BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a8e</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX85a299b4429c490cb88b802e16f38b9e">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"><![CDATA[AgAAABEAAABDb2xvdXJDaGFuZ2VTcGVlZAYAAAAAAADwPwkAAABDb2xvdXJTZXQCBAAAAEJs
dWU=]]></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
										<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
									</Font>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">ColourChangeText</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>200</XO>
										<YS>0</YS>
										<YO>50</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags">Q29sb3VyQ2hhbmdpbmdFbGVtZW50</BinaryString>
									<string name="Text">Label</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a8f</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX399c0e630e874ba887abc4e949de783d">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">CurrencyLabel</string>
								<string name="ScriptGuid">{b9aeddb4-2b2c-44d1-b423-c17ad4f79a8c}</string>
								<ProtectedString name="Source"><![CDATA[
--[[
	Requires: A frame with the following :
	- a text label named 'Amount'
	- either:
		- 1. an image label named 'currencyIcon'
		- 2. a frame of image labels named 'currencyIcons'
]]--

-- // Services
local TweenService = game:GetService("TweenService")
local CollectionService = game:GetService("CollectionService")

-- // Dependencies
local NumLib = require("../../../Core/NumLib")

-- // Constants
local CurrencyIcons = {
	["Cash"] = "rbxassetid://109226830882785";
}

-- // Component // --
local GuiComponent = {}

-- // Public Methods
function GuiComponent:SetCurrencyText(frame : Frame, amount : number, currencyID : string)
	-- Validate
	local amountTextLabel : TextLabel = frame:FindFirstChild("Amount")
	if not (amountTextLabel) then
		warn("Currency Label Error:", frame, "has no child called Amount!")
		return
	end
	
	-- Round the amount
	amountTextLabel.Text = NumLib:ShortenNumber(amount)
	
	-- Set the currency icon
	local currencyIcon = CurrencyIcons[currencyID]
	if (currencyIcon) then
		if (frame:FindFirstChild("CurrencyIcon")) then
			frame.CurrencyIcon.Image = currencyIcon
		elseif (frame:FindFirstChild("CurrencyIcons")) then
			for _, v in frame.CurrencyIcons:GetChildren() do
				if v:IsA("ImageLabel") then
					v.Visible = v.Name == currencyID
				end
			end
		end
	end
end

local function initialise()
	
end

-- Initialisation
initialise()

return GuiComponent
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a90</UniqueId>
							</Properties>
							<Item class="Frame" referent="RBX812ac5e29d3641d2bb58c4b3f8dd7ec6">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Template</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0.200000003</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags">Qm91bmNpbmdCdXR0b24=</BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a91</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXc40765922d5343caac10732d4d99ea79">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>-10</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a92</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX7589d76005e24f71800ce7524da594ff">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0.5</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
												<Weight>700</Weight>
												<Style>Normal</Style>
											</Font>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>0.5</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-15</XO>
												<YS>1</YS>
												<YO>-15</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<string name="Text">Bounce</string>
											<Color3 name="TextColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a93</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="UICorner" referent="RBX1ef13199e50a4b4e8c8d24ce4311ef6a">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<UDim name="CornerRadius">
												<S>0.200000003</S>
												<O>0</O>
											</UDim>
											<bool name="DefinesCapabilities">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<string name="Name">UICorner</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a94</UniqueId>
										</Properties>
									</Item>
								</Item>
								<Item class="TextButton" referent="RBX079adabcd6384f57b5577cca2ec1a3c1">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoButtonColor">true</bool>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
											<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
										</Font>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Ref name="HoverHapticEffect">null</Ref>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<bool name="Modal">false</bool>
										<string name="Name">Select</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<string name="OpenTypeFeatures"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="PressHapticEffect">null</Ref>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text"></string>
										<Color3 name="TextColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a95</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">5</int>
									</Properties>
								</Item>
							</Item>
							<Item class="LocalScript" referent="RBXd5f2f5be283f4c3bab856e1676ae591b">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Disabled">true</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">Example</string>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{4ebe43d2-8819-40a9-b57d-310d978886f9}</string>
									<ProtectedString name="Source"><![CDATA[
-- // Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Utils = require(ReplicatedStorage:WaitForChild("Utils"))
local GuiComponents = Utils.Guis.Components

local currencyFrame = script.Parent

while task.wait(2) do
	GuiComponents.CurrencyLabel:SetCurrencyText(currencyFrame, math.random(1, 10000), "Cash")
end]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a96</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX4d140230e6764bfbb930c1a9dc5c89f3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Sounds</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a97</UniqueId>
						</Properties>
						<Item class="Sound" referent="RBXe2a7ee4ee2964cfbbd8bdad9ec5b9c33">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="IsMutedForCapture">false</bool>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">ButtonClick1</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<float name="RollOffMaxDistance">10000</float>
								<float name="RollOffMinDistance">10</float>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://4499400560</url></Content>
								<int64 name="SourceAssetId">4499400560</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a98</UniqueId>
								<float name="Volume">0.5</float>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX9ce70723cbfe47f5bb0cb9c7de33c879">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GUI</string>
							<string name="ScriptGuid">{01e488b3-6ea3-4191-ad08-a75e56eeca93}</string>
							<ProtectedString name="Source"><![CDATA[
-- // Services
local CollectionService = game:GetService("CollectionService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

-- // Constants
local isServer = RunService:IsServer()
if (isServer) then return {} end

-- // Player
local player = Players.LocalPlayer

-- // Gui Elements

-- // MODULE // --
local Gui = {}

-- // Variables
local originalSizes = {}

function Gui:OpenMenu(frame, closeOthers)
	task.spawn(function()
		-- Assumes 'frame' is a full-screen frame
		frame.Visible = true
		
		if (frame:FindFirstChild("RadialBurst")) then
			if not (frame.RadialBurst:IsA("CanvasGroup")) then
				warn(frame.RadialBurst, "must be a canvas group!")
			else
				for i = 0, 1, -0.1 do
					frame.RadialBurst.GroupTransparency = i
					task.wait()
				end
				frame.RadialBurst.GroupTransparency = 0
			end
		end

		
		if (frame:HasTag("ExpandingMenu")) then
			if not (originalSizes[frame]) then
				originalSizes[frame] = frame.Frame.Size
			end
			
			frame.Frame.Visible = true
			frame.Frame.Size = UDim2.fromScale(0, 0)
			frame.Frame:TweenSize(originalSizes[frame], "In", "Quart", 0.25)
			task.wait(0.25)
		end
		
		frame:TweenPosition(UDim2.fromScale(0, 0), "In", "Quart", 0.25)
		
		if (closeOthers) then
			for _, otherFrame in frame.Parent:GetChildren() do
				if (otherFrame:IsA("Frame") and otherFrame ~= frame) then
					otherFrame:TweenPosition(UDim2.fromScale(0, 1), "Out", "Quart", 0.1)
					task.delay(0.1, function() otherFrame.Visible = false end)
				end
			end
		end
	end)
end

function Gui:CloseMenu(frame)
	task.spawn(function()
		if (frame:HasTag("ExpandingMenu")) then
			if (originalSizes[frame]) then
				frame.Frame:TweenSize(UDim2.fromScale(0, 0), "In", "Quart", 0.2)
				task.wait(0.2)
				frame.Frame.Visible = false
			end
		end
		
		if (frame:FindFirstChild("RadialBurst")) then
			if not (frame.RadialBurst:IsA("CanvasGroup")) then
				warn(frame.RadialBurst, "must be a canvas group!")
			else
				for i = 0, 1, 0.05 do
					frame.RadialBurst.GroupTransparency = i
					task.wait()
				end
				frame.RadialBurst.GroupTransparency = 1
			end
		end
		
		frame:TweenPosition(UDim2.fromScale(0, 1), "In", "Quart", 0.1)
		task.wait(0.1)
		frame.Visible = false
	end)
end

function Gui:CloseMenus(parentFrame)
	for _, frame in parentFrame:GetChildren() do
		if (frame:IsA("Frame")) then
			Gui:CloseMenu(frame)
		end
	end
end

local function initialise()
	-- Wait here for GUI to load
	
	-- Expanding Buttons
	for _, frame in CollectionService:GetTagged("ExpandingButton") do
		local inTweens = {}
		local outTweens = {}

		local button = frame:WaitForChild("Button")
		if not (button) then
			warn(frame, "has no button")
			return
		end
		
		local gradientFrame = button:FindFirstChild("GradientFrame")
		if (gradientFrame) then
			gradientFrame.Transparency = 1
			gradientFrame.Visible = true
			inTweens.Gradient = TweenService:Create(
				gradientFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Transparency = 0}
			)
			outTweens.Gradient = TweenService:Create(
				gradientFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Transparency = 1}
			)
		end

		inTweens.Frame = TweenService:Create(
			button, TweenInfo.new(0.25, Enum.EasingStyle.Quart),
			{Size = UDim2.fromScale(1, 1)}
		)
		outTweens.Frame = TweenService:Create(
			button, TweenInfo.new(0.25, Enum.EasingStyle.Quart),
			{Size = button.Size}
		)

		frame.Select.MouseEnter:Connect(function()
			for _, v in inTweens do
				v:Play()
			end
			frame.Select.MouseLeave:Wait()
			for _, v in outTweens do
				v:Play()
			end
		end)
	end
	
	-- Bouncing Buttons
	for _, frame in CollectionService:GetTagged("BouncingButton") do
		local inTweens = {}
		local outTweens = {}

		local button = frame:WaitForChild("Button")
		if not (button) then
			warn(frame, "has no button")
			return
		end

		local imageLabel = button:FindFirstChild("ImageLabel")
		if (imageLabel) then
			inTweens.Image = TweenService:Create(
				imageLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Rotation = 30}
			)
			outTweens.Image = TweenService:Create(
				imageLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Rotation = 0}
			)
		end

		local gradientFrame = button:FindFirstChild("GradientFrame")
		if (gradientFrame) then
			gradientFrame.Transparency = 1
			gradientFrame.Visible = true
			inTweens.Gradient = TweenService:Create(
				gradientFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Transparency = 0.8}
			)
			outTweens.Gradient = TweenService:Create(
				gradientFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Transparency = 1}
			)
		end

		inTweens.Frame = TweenService:Create(
			button, TweenInfo.new(0.25, Enum.EasingStyle.Quart),
			{Position = UDim2.new(button.Position.X.Scale, button.Position.X.Offset, 0.5, -5)}
		)
		outTweens.Frame = TweenService:Create(
			button, TweenInfo.new(0.25, Enum.EasingStyle.Quart),
			{Position = button.Position}
		)

		frame.Select.MouseEnter:Connect(function()
			for _, v in inTweens do
				v:Play()
			end
			frame.Select.MouseLeave:Wait()
			for _, v in outTweens do
				v:Play()
			end
		end)
	end
	
	-- Close Buttons
	for _, frame in CollectionService:GetTagged("CloseButton") do
		local button = frame:FindFirstChild("Select")
		if not (button) then
			warn(button, "has no select button!")
			continue
		end
		
		button.MouseButton1Click:Connect(function()
			local menu = frame.Parent.Parent
			Gui:CloseMenu(menu)
		end)
	end
	
	local originalTransparencies = {}
	
	RunService.RenderStepped:Connect(function()
		local t = tick()
		for _, v in CollectionService:GetTagged("RotatingElement") do
			if not (v.Visible) then return end
			
			local speed = v:GetAttribute("Speed") or 1
			local func = v:GetAttribute("Function") or 0
			local maxAngle = v:GetAttribute("MaxAngle") or 360
			
			if (func == 0) then
				v.Rotation = v.Rotation + speed
			elseif (func == 1) then
				v.Rotation = (math.sin(0.8 * t * speed) * math.cos(1.2 * t * speed)) * maxAngle
			elseif (func == 2) then
				v.Rotation = (math.sin(0.4 * t * speed) / math.cos(2 * t * speed)) * maxAngle
			elseif (func == 3) then
				v.Rotation = (math.sin(0.8 * t * speed) ^ 2 * math.tan(0.1 * t * speed) * math.cos(t)) * maxAngle
			end
		end
		
		for _, v in CollectionService:GetTagged("GlowingElement") do
			if not (v.Visible) then return end
			
			local frequency = v:GetAttribute("GlowFrequency") or 1.0
			local amplitude = v:GetAttribute("GlowAmplitude") or 0.10
			
			if (v:IsA("Frame")) then
				if not (originalTransparencies[v]) then
					originalTransparencies[v] = v.BackgroundTransparency
				end
				v.BackgroundTransparency = originalTransparencies[v] + (math.sin(t * frequency) * amplitude)
			elseif (v:IsA("ImageLabel")) then
				if not (originalTransparencies[v]) then
					originalTransparencies[v] = v.ImageTransparency
				end
				v.ImageTransparency = originalTransparencies[v] + (math.sin(t * frequency) * amplitude)
			end
		end
	end)	
end

-- Initialisation
initialise()

return Gui
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a99</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXd00c4b6d1e57438893c8a1247fa76c00">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Environment</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a9a</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX68e88d8946ad454899ae1bdec3a86d35">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Sounds</string>
						<string name="ScriptGuid">{6b9cff5d-31df-4d9d-adb6-9072db3ba777}</string>
						<ProtectedString name="Source"><![CDATA[
-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Debris = game:GetService("Debris")

-- Assets
local ReplicatedTemp

-- Constants
local isServer = RunService:IsServer()

-- // Module
local SoundModule = {}

-- // Internal Remote
SoundModule.PlaySoundRemote = script:WaitForChild("PlaySound")

-- Add sounds here
SoundModule.DefaultSounds = {}

function SoundModule:PlaySound(sound, cf, playerList)
	if not (sound) then return end
	
	if (isServer) then
		if not (typeof(sound) == "string") then
			local clone = sound:Clone()
			clone.Parent = ReplicatedTemp
			Debris:AddItem(clone, clone.TimeLength + 3)
			sound = clone
		end

		for _, p in (playerList or Players:GetPlayers()) do
			SoundModule.PlaySoundRemote:FireClient(p, sound, cf)
		end
	else
		
		-- Find the sound
		local s
		if (typeof(sound) == "string") then
			s = SoundModule.DefaultSounds[sound]
			if not (s) then
				warn("No sound found with ID:", sound)
				return
			end
		else
			s = sound:Clone()
		end
		
		-- Check if 3D sound is needed
		if (cf) then
			if (typeof(cf) == "CFrame") then
				local part = Instance.new("Part")
				part.Anchored = true
				part.CFrame = cf
				part.Transparency = 1
				part.CanCollide = false
				part.CanTouch = false
				part.Parent = workspace

				local clone = s:Clone()
				clone.RollOffMaxDistance = 150
				clone.PlayOnRemove = true
				clone.Parent = part

				part:Destroy()
			else
				local clone = s:Clone()
				clone.RollOffMaxDistance = 150
				clone.PlayOnRemove = true
				clone.Parent = cf
				clone:Destroy()
			end
		else
			if (s.Parent == nil) then
				s.Parent = workspace
				s.PlayOnRemove = true
				s:Destroy()
			else
				s:Play()
			end
		end
	end
end

if not (isServer) then
	local player = Players.LocalPlayer

	-- Variables
	local footstepsActive = true

	SoundModule.LoopingSoundCache = {}
	function SoundModule:PlayLoopingSound(sound, part, override, fade)
		if (SoundModule.LoopingSoundCache[sound] and (not override)) then return end

		-- Find the sound
		local s
		if (typeof(sound) == "string") then
			s = SoundModule.DefaultSounds[sound]
			if not (s) then
				warn("No sound found with ID:", sound)
				return
			end
		else
			s = sound:Clone()
		end

		-- Check if 3D sound is needed
		local soundObject
		if (part) then
			soundObject = s:Clone()
			soundObject.RollOffMaxDistance = 150
			soundObject.Parent = part
			soundObject.Looped = true
		else
			soundObject = s:Clone()
			soundObject.Parent = ReplicatedTemp
			soundObject.Looped = true
		end

		if (fade) then
			local volume = soundObject.Volume

			soundObject.Volume = 0
			soundObject.Playing = true
			task.spawn(function()
				for i = 0, volume, 0.05 do
					soundObject.Volume = i
					task.wait()
				end
			end)
		else
			soundObject.Playing = true
		end

		-- Record as a looped sound
		if (SoundModule.LoopingSoundCache[sound]) then
			SoundModule:StopLoopingSound(sound, false)
		end
		SoundModule.LoopingSoundCache[sound] = soundObject
	end

	function SoundModule:StopLoopingSound(sound, fade)
		local soundObject = (SoundModule.LoopingSoundCache[sound])
		if (soundObject) then
			SoundModule.LoopingSoundCache[sound] = nil
			if (fade) then
				for i = soundObject.Volume, 0, -0.05 do
					soundObject.Volume = i
					task.wait()
				end
			end
			soundObject:Destroy()
		end
	end

	function SoundModule:ToggleFootsteps(state)
		local char = player.Character
		local root = char and char:FindFirstChild("HumanoidRootPart")
		if not (root) then return end

		local running = root:FindFirstChild("Running")
		if not (running) then return end

		if (state == nil) then
			state = not footstepsActive
		end

		if (state) then
			running.Volume = 0.5
		else
			running.Volume = 0
		end
		footstepsActive = state
	end

	SoundModule.PlaySoundRemote.OnClientEvent:Connect(function(...)
		SoundModule:PlaySound(...)
	end)
end

local function initialise()
	-- Create a replicated temp folder if it doesn't already exist
	if not (ReplicatedStorage:FindFirstChild("ReplicatedTemp")) then
		ReplicatedTemp = Instance.new("Folder", ReplicatedStorage)
		ReplicatedTemp.Name = "ReplicatedTemp"
	end
	
	-- Register default sounds
	if (script:FindFirstChild("DefaultSounds")) then
		for _, v in script.DefaultSounds:GetChildren() do
			SoundModule.DefaultSounds[v.Name] = v
		end
	end
end

-- Initialisation
initialise()

return SoundModule
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a9b</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBXa8695f61edf94f6584f0d84e3f776f04">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">DefaultSounds</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a9c</UniqueId>
						</Properties>
						<Item class="Sound" referent="RBXc46cfeee673343d091ffd66c982ef526">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="IsMutedForCapture">false</bool>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Click1</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<float name="RollOffMaxDistance">10000</float>
								<float name="RollOffMinDistance">10</float>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://4499400560</url></Content>
								<int64 name="SourceAssetId">4499400560</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a9d</UniqueId>
								<float name="Volume">0.5</float>
							</Properties>
						</Item>
					</Item>
					<Item class="RemoteEvent" referent="RBX64834d690c794cf7a89cd5b5db77725d">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">PlaySound</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a9e</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX22f056830bde4e219366728420d6a18a">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Drops</string>
						<string name="ScriptGuid">{17f2c5c9-da25-4173-b489-b89dce9d5e8f}</string>
						<ProtectedString name="Source"><![CDATA[
-- // Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local PhysicsService = game:GetService("PhysicsService")
local HapticService = game:GetService("HapticService")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

-- // Constants
local isServer = RunService:IsServer()

-- // Dependencies
local NumLib = require("../Core/NumLib")

-- // Remotes
local dropCurrencyRemote = script:WaitForChild("DropCurrency")

local CollectableCurrency = {}

-- Assets
local collectableModels = script:WaitForChild("Models")
local collectableSounds = script:WaitForChild("Sounds")

local collectables = {
	["Cash"] = {
		[1] = {
			Name = "Coin";
			Value = 1;
			Model = collectableModels:WaitForChild("Coin");
			Sound = collectableSounds:WaitForChild("Coins");
		};
		[2] = {
			Name = "Money Bag";
			Value = 10;
			Model = collectableModels:WaitForChild("MoneyBag");
			Sound = collectableSounds:WaitForChild("Money");
		};
		[3] = {
			Name = "Coin";
			Value = 100;
			Model = collectableModels:WaitForChild("Coin");
			Sound = collectableSounds:WaitForChild("Coins");
		};
		[4] = {
			Name = "Money Bag";
			Value = 1000;
			Model = collectableModels:WaitForChild("MoneyBag");
			Sound = collectableSounds:WaitForChild("Money");
		};
	};
	
	["XP"] = {
		[1] = {
			Name = "XP";
			Value = 1;
			Model = collectableModels:WaitForChild("XP");
			Sound = collectableSounds:WaitForChild("XP");
		};
	}
}

if (isServer) then
	function CollectableCurrency:DropCurrency(p : Player, currencyID : string, value : number)
		dropCurrencyRemote:FireClient(p, currencyID, value)
	end
	
	if not (PhysicsService:IsCollisionGroupRegistered("Collectables")) then
		PhysicsService:RegisterCollisionGroup("Collectables")
		PhysicsService:CollisionGroupSetCollidable("Collectables", "Collectables", false)
		
		task.spawn(function()
			if not (PhysicsService:IsCollisionGroupRegistered("Players")) then
				repeat task.wait(.2)
				until PhysicsService:IsCollisionGroupRegistered("Players")
			end
			PhysicsService:CollisionGroupSetCollidable("Collectables", "Players", false)
			print("-- // Created Collectables Collision Group // --")
		end)
	end	
else
	local player = Players.LocalPlayer
	
	-- Constants
	local maxCollectables = 10
	
	function CollectableCurrency:DropCurrency(currencyID : string, value : number)
		-- Check that the value is not <= 0
		if (value <= 0) then return end
		
		-- Divide this value into different currency drops of this type
		local list = collectables[currencyID]
		if not (list) then warn("No collectables for currency:", currencyID) return end
		
		table.sort(list, function(a, b)
			return a.Value > b.Value
		end)
		
		-- Create a value billboard gui
		local gui = script.ValueGui:Clone()
		gui.Adornee = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		gui:SetAttribute("Value", 0)
		
		local frame = gui.Currencies:FindFirstChild(currencyID)
		if not (frame) then
			frame = gui.Currencies.Default
		end
		
		for _, v in gui.Currencies:GetChildren() do
			if v:IsA("Frame") then
				v.Visible = v == frame
			end
		end
		
		frame.Button.Amount.Text = "0"
		gui.Parent = workspace:FindFirstChild("Temp") or workspace
		
		if (currencyID == "XP") then
			maxCollectables = 5
			gui.Enabled = false
		end
		
		local amountRemaining = value
		local drops = {}
		while (amountRemaining > 0 and #drops < maxCollectables) do
			local selectedCollectable = list[#list] -- Default
			for i = 1, #list do
				if (amountRemaining > list[i].Value) then
					selectedCollectable = list[i]
					break
				end
			end
			table.insert(drops, selectedCollectable)
			amountRemaining -= selectedCollectable.Value
			task.wait()
		end
		
		-- Haptic Service
		-- hapticService:SetMotor(Enum.UserInputType.Gamepad1, Enum.VibrationMotor.Large, 1)
		
		-- Drop the drops
		local char = player.Character or player.CharacterAdded:Wait()
		local root = char:WaitForChild("HumanoidRootPart")
		for i, v in drops do
			local model = v.Model:Clone()
			model:PivotTo(root.CFrame * CFrame.new(math.random(-10, 10), 0, math.random(-10, 10)))
			
			for _, v in model:GetDescendants() do
				if v:IsA("BasePart") then
					v.CollisionGroup = "Collectables"
				end
			end
			
			model.Parent = workspace:FindFirstChild("Temp") or workspace
			
			local pitch = math.clamp(3 + ((i / #drops) ^ 2) * 7, 1, 10)
			local clone = v.Sound:Clone()
			clone.PlaybackSpeed = pitch
			clone.Parent = model
			clone:Play()
			
			Debris:AddItem(model, 2.5)
			Debris:AddItem(clone, 2)
			task.wait(((1 - (i / #drops)) ^ 2) * .3)
			
			if not (currencyID == "XP") then
				task.delay(0.2, function()
					local tween = TweenService:Create(
						model.PrimaryPart, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
						{CFrame = root.CFrame, Size = Vector3.new(0, 0, 0), Transparency = 1}
					)
					tween:Play()
					
					local billboardGui = model:FindFirstChildOfClass("BillboardGui")
						or model.PrimaryPart:FindFirstChildOfClass("BillboardGui")
					if (billboardGui) then
						billboardGui.Enabled = true
						TweenService:Create(
							billboardGui,
							TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
							{Size = UDim2.fromScale(0.01, 0.01), Enabled = false}
						):Play()
					end

					local value = gui:GetAttribute("Value")
					gui:SetAttribute("Value", value + v.Value)
					
					local text = NumLib:ShortenNumber(value + v.Value)
					if (text) then
						frame.Button.Amount.Text = "+" .. text
					end
				end)
			else
				local billboardGui = model:FindFirstChildOfClass("BillboardGui")
					or model.PrimaryPart:FindFirstChildOfClass("BillboardGui")
				if (billboardGui) then
					billboardGui.Enabled = false
				end
			end
		end
		
		-- hapticService:SetMotor(Enum.UserInputType.Gamepad1, Enum.VibrationMotor.Large, 0)	
		
		-- Fade out the GUI
		task.wait(2.0)
		for i = 0, 1, 0.05 do
			gui.Currencies.GroupTransparency = i
			task.wait()
		end
		gui:Destroy()
	end
	
	dropCurrencyRemote.OnClientEvent:Connect(function(...)
		CollectableCurrency:DropCurrency(...)
	end)
end

return CollectableCurrency
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001a9f</UniqueId>
					</Properties>
					<Item class="RemoteEvent" referent="RBX8a91826fdea74fd2a7b7fc1ab70f020a">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">DropCurrency</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aa0</UniqueId>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBXd0b015909fba4308b07b75be949db4ad">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Models</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aa1</UniqueId>
						</Properties>
						<Item class="Model" referent="RBX7732b2854f4e420a9fae75d02f364a13">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">MoneyBag</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">RBXfa690bbc10f24dcbb7ec6b7d12ff158c</Ref>
								<float name="ScaleFactor">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aa2</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-9.39958191</X>
										<Y>1</Y>
										<Z>-6.03915405</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBXfa690bbc10f24dcbb7ec6b7d12ff158c">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AudioCanCollide">true</bool>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>36.8917084</X>
										<Y>-53.8730011</Y>
										<Z>-13.6260767</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="EnableFluidForces">true</bool>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Handle</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">161263832</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aa3</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">0</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>2</X>
										<Y>2</Y>
										<Z>2</Z>
									</Vector3>
								</Properties>
								<Item class="SpecialMesh" referent="RBXf2518c069b80424b86bd4bd54e9a43ae">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Content name="MeshId"><url>http://www.roblox.com/asset/?id=16657069</url></Content>
										<token name="MeshType">5</token>
										<string name="Name">Mesh</string>
										<Vector3 name="Offset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<Vector3 name="Scale">
											<X>0.5</X>
											<Y>0.600000024</Y>
											<Z>0.5</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<Content name="TextureId"><url>http://www.roblox.com/asset/?id=16657057</url></Content>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aa4</UniqueId>
										<Vector3 name="VertexColor">
											<X>1</X>
											<Y>1</Y>
											<Z>1</Z>
										</Vector3>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Model" referent="RBX93262d4f0b6641e397fdc50780b43995">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Coin</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">RBX9b52dffb35ee454793e5e8ec2138327c</Ref>
								<float name="ScaleFactor">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aa5</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-12.5</X>
										<Y>0.5</Y>
										<Z>-5.89996338</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX9b52dffb35ee454793e5e8ec2138327c">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AudioCanCollide">true</bool>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>33.7912903</X>
										<Y>-54.3730011</Y>
										<Z>-13.486886</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4280374457</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="EnableFluidForces">true</bool>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">1</float>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aa6</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
								<Item class="BillboardGui" referent="RBXe1110bc34cf5419aa905bd68e37c1c34">
									<Properties>
										<bool name="Active">true</bool>
										<Ref name="Adornee">RBX9b52dffb35ee454793e5e8ec2138327c</Ref>
										<bool name="AlwaysOnTop">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<float name="Brightness">1</float>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">true</bool>
										<bool name="DefinesCapabilities">false</bool>
										<float name="DistanceLowerLimit">0</float>
										<float name="DistanceStep">0</float>
										<float name="DistanceUpperLimit">-1</float>
										<bool name="Enabled">true</bool>
										<Vector3 name="ExtentsOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<Vector3 name="ExtentsOffsetWorldSpace">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LightInfluence">0</float>
										<float name="MaxDistance">INF</float>
										<string name="Name">BillboardGui</string>
										<Ref name="PlayerToHideFrom">null</Ref>
										<bool name="ResetOnSpawn">true</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<UDim2 name="Size">
											<XS>1.5</XS>
											<XO>0</XO>
											<YS>1.5</YS>
											<YO>0</YO>
										</UDim2>
										<Vector2 name="SizeOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<int64 name="SourceAssetId">-1</int64>
										<Vector3 name="StudsOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<Vector3 name="StudsOffsetWorldSpace">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aa7</UniqueId>
										<token name="ZIndexBehavior">1</token>
									</Properties>
									<Item class="ImageLabel" referent="RBXdc1abf9225dd40379c07e01d48386632">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="Image"><url>rbxassetid://109226830882785</url></Content>
											<Color3 name="ImageColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">ImageLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<token name="ResampleMode">0</token>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<token name="ScaleType">3</token>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<float name="SliceScale">1</float>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UDim2 name="TileSize">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aa8</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Model" referent="RBXe19a928868ae40f08d9109eca5ebe042">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">XP</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">RBX783034eb7cd84916ae9c3da52c4f06cb</Ref>
								<float name="ScaleFactor">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aa9</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-83.8334503</X>
										<Y>109.395782</Y>
										<Z>11.8633614</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBX783034eb7cd84916ae9c3da52c4f06cb">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AudioCanCollide">true</bool>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-37.5417099</X>
										<Y>54.5230026</Y>
										<Z>4.27607727</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4283877631</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="EnableFluidForces">true</bool>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aaa</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">0</token>
									<Vector3 name="size">
										<X>0.699999988</X>
										<Y>0.699999988</Y>
										<Z>0.699999988</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX0e89088316ac4c738aa20006abae7c97">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Sounds</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aab</UniqueId>
						</Properties>
						<Item class="Sound" referent="RBX363b10b270fe4340836f6e09b69e491c">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="IsMutedForCapture">false</bool>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Money</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<float name="RollOffMaxDistance">10000</float>
								<float name="RollOffMinDistance">10</float>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://3020841054</url></Content>
								<int64 name="SourceAssetId">3020841054</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aac</UniqueId>
								<float name="Volume">0.5</float>
							</Properties>
						</Item>
						<Item class="Sound" referent="RBX48680f70aa8141ba8041c685f837e037">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="IsMutedForCapture">false</bool>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Coins</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<float name="RollOffMaxDistance">10000</float>
								<float name="RollOffMinDistance">10</float>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://5613553529</url></Content>
								<int64 name="SourceAssetId">5613553529</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aad</UniqueId>
								<float name="Volume">0.5</float>
							</Properties>
						</Item>
						<Item class="Sound" referent="RBXc2ba334e4ec148dfb016079de2c0cd4f">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="IsMutedForCapture">false</bool>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">XP</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">10</float>
								<bool name="Playing">false</bool>
								<float name="RollOffMaxDistance">10000</float>
								<float name="RollOffMinDistance">10</float>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://584691395</url></Content>
								<int64 name="SourceAssetId">584691395</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aae</UniqueId>
								<float name="Volume">0.5</float>
							</Properties>
						</Item>
					</Item>
					<Item class="BillboardGui" referent="RBX5f39b898316e489c8780b31149f2d2d8">
						<Properties>
							<bool name="Active">true</bool>
							<Ref name="Adornee">null</Ref>
							<bool name="AlwaysOnTop">true</bool>
							<BinaryString name="AttributesSerialize">AQAAAAUAAABWYWx1ZQUAAAAA</BinaryString>
							<bool name="AutoLocalize">true</bool>
							<float name="Brightness">1</float>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">true</bool>
							<bool name="DefinesCapabilities">false</bool>
							<float name="DistanceLowerLimit">0</float>
							<float name="DistanceStep">0</float>
							<float name="DistanceUpperLimit">-1</float>
							<bool name="Enabled">true</bool>
							<Vector3 name="ExtentsOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="ExtentsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LightInfluence">0</float>
							<float name="MaxDistance">INF</float>
							<string name="Name">ValueGui</string>
							<Ref name="PlayerToHideFrom">null</Ref>
							<bool name="ResetOnSpawn">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<UDim2 name="Size">
								<XS>5</XS>
								<XO>0</XO>
								<YS>2</YS>
								<YO>0</YO>
							</UDim2>
							<Vector2 name="SizeOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<int64 name="SourceAssetId">-1</int64>
							<Vector3 name="StudsOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="StudsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aaf</UniqueId>
							<token name="ZIndexBehavior">1</token>
						</Properties>
						<Item class="CanvasGroup" referent="RBX6cf6f07aa353452eba75af5188b4afb3">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">true</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Color3 name="GroupColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="GroupTransparency">0</float>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Currencies</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ab0</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX69d93980efa5424394f91ab67e8e3af1">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Coins</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags">RXhwYW5kaW5nQnV0dG9u</BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ab1</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX263fe7f08b964782a3dc9c1473116da2">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>-10</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ab2</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX83d9336011464754b6d644f710e8be45">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>1</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
												<Weight>400</Weight>
												<Style>Normal</Style>
											</Font>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">1</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">Amount</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.300000012</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<string name="Text">2000</string>
											<Color3 name="TextColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ab3</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="UIStroke" referent="RBX9650a621a9834786bb3b40223228f8fc">
											<Properties>
												<token name="ApplyStrokeMode">0</token>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<UDim name="BorderOffset">
													<S>0</S>
													<O>0</O>
												</UDim>
												<token name="BorderStrokePosition">0</token>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<Color3 name="Color">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<token name="LineJoinMode">0</token>
												<string name="Name">UIStroke</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Thickness">3</float>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ab4</UniqueId>
											</Properties>
										</Item>
									</Item>
									<Item class="ImageLabel" referent="RBXc998e056f9ea43709aa8c4946437720f">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="Image"><url>rbxassetid://109226830882785</url></Content>
											<Color3 name="ImageColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">ImageLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>-5</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<token name="ResampleMode">0</token>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<token name="ScaleType">3</token>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.349999994</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>10</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<float name="SliceScale">1</float>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UDim2 name="TileSize">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ab5</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="UIListLayout" referent="RBX5f7cbd2a48ec45efa577658d19220570">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="FillDirection">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<token name="HorizontalAlignment">0</token>
											<token name="HorizontalFlex">0</token>
											<token name="ItemLineAlignment">2</token>
											<string name="Name">UIListLayout</string>
											<UDim name="Padding">
												<S>0</S>
												<O>0</O>
											</UDim>
											<token name="SortOrder">2</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ab6</UniqueId>
											<token name="VerticalAlignment">1</token>
											<token name="VerticalFlex">0</token>
											<bool name="Wraps">false</bool>
										</Properties>
									</Item>
								</Item>
								<Item class="UIStroke" referent="RBXb5ff1aee01764c32a8f717814ccedd1c">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Enabled">true</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<token name="LineJoinMode">0</token>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ab7</UniqueId>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX0c58b828e1414a52a8987fde09401fe7">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoButtonColor">true</bool>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
											<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
										</Font>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Ref name="HoverHapticEffect">null</Ref>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<bool name="Modal">false</bool>
										<string name="Name">Select</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<string name="OpenTypeFeatures"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="PressHapticEffect">null</Ref>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text"></string>
										<Color3 name="TextColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ab8</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX532d4386a5df4f1781e13f171c699342">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">XP</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags">RXhwYW5kaW5nQnV0dG9u</BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ab9</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX1bc37f2150f041aa82d07ff9bfe4212d">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>-10</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001aba</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXaeb3890f943f41588d914bbf67e6bda2">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>1</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
												<Weight>400</Weight>
												<Style>Normal</Style>
											</Font>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">1</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">Amount</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.300000012</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<string name="Text">2000</string>
											<Color3 name="TextColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001abb</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="UIStroke" referent="RBX003567f2e14843de9e9e84d2937ba051">
											<Properties>
												<token name="ApplyStrokeMode">0</token>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<UDim name="BorderOffset">
													<S>0</S>
													<O>0</O>
												</UDim>
												<token name="BorderStrokePosition">0</token>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<Color3 name="Color">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<token name="LineJoinMode">0</token>
												<string name="Name">UIStroke</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Thickness">3</float>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001abc</UniqueId>
											</Properties>
										</Item>
									</Item>
									<Item class="ImageLabel" referent="RBX05dcac658e2448e884c809263178de68">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="Image"><url>rbxassetid://6430908053</url></Content>
											<Color3 name="ImageColor3">
												<R>0.466666669</R>
												<G>0.996078432</G>
												<B>1</B>
											</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">ImageLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>-5</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<token name="ResampleMode">0</token>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<token name="ScaleType">3</token>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.349999994</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>10</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<float name="SliceScale">1</float>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UDim2 name="TileSize">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001abd</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="UIListLayout" referent="RBXf6cd56336d274ba5aaee758427dc9272">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="FillDirection">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<token name="HorizontalAlignment">0</token>
											<token name="HorizontalFlex">0</token>
											<token name="ItemLineAlignment">2</token>
											<string name="Name">UIListLayout</string>
											<UDim name="Padding">
												<S>0</S>
												<O>0</O>
											</UDim>
											<token name="SortOrder">2</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001abe</UniqueId>
											<token name="VerticalAlignment">1</token>
											<token name="VerticalFlex">0</token>
											<bool name="Wraps">false</bool>
										</Properties>
									</Item>
								</Item>
								<Item class="UIStroke" referent="RBX00189f79337742f1992b83ce3ade3c2d">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Enabled">true</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<token name="LineJoinMode">0</token>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001abf</UniqueId>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXa9ac7b97ed89460abd32cad4f59a6b34">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoButtonColor">true</bool>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
											<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
										</Font>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Ref name="HoverHapticEffect">null</Ref>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<bool name="Modal">false</bool>
										<string name="Name">Select</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<string name="OpenTypeFeatures"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="PressHapticEffect">null</Ref>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text"></string>
										<Color3 name="TextColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ac0</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXa24238e32ba046c0985226b90933f1ec">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Default</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags">RXhwYW5kaW5nQnV0dG9u</BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ac1</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXe3ed206de1d24d1080eb376a93f72005">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>-10</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ac2</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX3649251044d04952b6c284f3859aad13">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>1</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
												<Weight>400</Weight>
												<Style>Normal</Style>
											</Font>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">1</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">Amount</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.300000012</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<string name="Text">2000</string>
											<Color3 name="TextColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ac3</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="UIStroke" referent="RBXfc61186b9d554d3cab96b8d1dbeb536a">
											<Properties>
												<token name="ApplyStrokeMode">0</token>
												<BinaryString name="AttributesSerialize"></BinaryString>
												<UDim name="BorderOffset">
													<S>0</S>
													<O>0</O>
												</UDim>
												<token name="BorderStrokePosition">0</token>
												<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
												<Color3 name="Color">
													<R>0</R>
													<G>0</G>
													<B>0</B>
												</Color3>
												<bool name="DefinesCapabilities">false</bool>
												<bool name="Enabled">true</bool>
												<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
												<token name="LineJoinMode">0</token>
												<string name="Name">UIStroke</string>
												<int64 name="SourceAssetId">-1</int64>
												<BinaryString name="Tags"></BinaryString>
												<float name="Thickness">3</float>
												<float name="Transparency">0</float>
												<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ac4</UniqueId>
											</Properties>
										</Item>
									</Item>
									<Item class="ImageLabel" referent="RBXffeae62d55c642d78f77502f985b8eea">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0.5</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="Image"><url>rbxassetid://109226830882785</url></Content>
											<Color3 name="ImageColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">ImageLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>-5</XO>
												<YS>0.5</YS>
												<YO>0</YO>
											</UDim2>
											<token name="ResampleMode">0</token>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<token name="ScaleType">3</token>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>0.349999994</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>10</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<float name="SliceScale">1</float>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UDim2 name="TileSize">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ac5</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="UIListLayout" referent="RBXd27315e1be77407893dfcf720a926d8e">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="FillDirection">0</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<token name="HorizontalAlignment">0</token>
											<token name="HorizontalFlex">0</token>
											<token name="ItemLineAlignment">2</token>
											<string name="Name">UIListLayout</string>
											<UDim name="Padding">
												<S>0</S>
												<O>0</O>
											</UDim>
											<token name="SortOrder">2</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ac6</UniqueId>
											<token name="VerticalAlignment">1</token>
											<token name="VerticalFlex">0</token>
											<bool name="Wraps">false</bool>
										</Properties>
									</Item>
								</Item>
								<Item class="UIStroke" referent="RBX79a5deaa22e541c094186b7a3365ba46">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Enabled">true</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<token name="LineJoinMode">0</token>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ac7</UniqueId>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXe29ee1eefef344c7b8b398956eda4be5">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoButtonColor">true</bool>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
											<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
										</Font>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Ref name="HoverHapticEffect">null</Ref>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<bool name="Modal">false</bool>
										<string name="Name">Select</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<string name="OpenTypeFeatures"></string>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="PressHapticEffect">null</Ref>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text"></string>
										<Color3 name="TextColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ac8</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="TimerService" referent="RBX504ea7262a5f45608778a4c8ae167cfb">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TimerService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000325</UniqueId>
		</Properties>
	</Item>
	<Item class="SoundService" referent="6">
		<Properties>
			<token name="AmbientReverb">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AudioApiByDefault">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="CharacterSoundsUseNewApi">0</token>
			<token name="DefaultListenerLocation">0</token>
			<bool name="DefinesCapabilities">false</bool>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsNewExpForAudioApiByDefault">false</bool>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000326</UniqueId>
			<token name="VolumetricAudio">1</token>
		</Properties>
	</Item>
	<Item class="VideoCaptureService" referent="RBX6675922816694c2fab10bfe5f080dfe9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VideoCaptureService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000332</UniqueId>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX7d2814fe1f7f45118023f3c5c621c59d">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000333</UniqueId>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBXd82cc9224b7a420db6eb313ecae0c65e">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000334</UniqueId>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBX3018aaa8c96c4cd6949a1cb67a001531">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BubbleChatEnabled">false</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsAutoMigrated">false</bool>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000339</UniqueId>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX3773bb8753974d6fa6995d93359260b2">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BanningEnabled">true</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="CharacterAutoLoads">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPlayersInternal">12</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
			<float name="RespawnTime">5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000033b</UniqueId>
			<bool name="UseStrafingAnimations">false</bool>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBX3e3182275cc64788b266884a5db25d1e">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000033e</UniqueId>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBXe47d4fda291543498473380c069b6fa4">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000340</UniqueId>
		</Properties>
	</Item>
	<Item class="MaterialService" referent="RBX7db80fe32c764fc2b542ef6ae28aec4f">
		<Properties>
			<string name="AsphaltName">Asphalt</string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="BasaltName">Basalt</string>
			<string name="BrickName">Brick</string>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<string name="CardboardName">Cardboard</string>
			<string name="CarpetName">Carpet</string>
			<string name="CeramicTilesName">CeramicTiles</string>
			<string name="ClayRoofTilesName">ClayRoofTiles</string>
			<string name="CobblestoneName">Cobblestone</string>
			<string name="ConcreteName">Concrete</string>
			<string name="CorrodedMetalName">CorrodedMetal</string>
			<string name="CrackedLavaName">CrackedLava</string>
			<bool name="DefinesCapabilities">false</bool>
			<string name="DiamondPlateName">DiamondPlate</string>
			<string name="FabricName">Fabric</string>
			<string name="FoilName">Foil</string>
			<string name="GlacierName">Glacier</string>
			<string name="GraniteName">Granite</string>
			<string name="GrassName">Grass</string>
			<string name="GroundName">Ground</string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="IceName">Ice</string>
			<string name="LeafyGrassName">LeafyGrass</string>
			<string name="LeatherName">Leather</string>
			<string name="LimestoneName">Limestone</string>
			<string name="MarbleName">Marble</string>
			<string name="MetalName">Metal</string>
			<string name="MudName">Mud</string>
			<string name="Name">MaterialService</string>
			<string name="PavementName">Pavement</string>
			<string name="PebbleName">Pebble</string>
			<string name="PlasterName">Plaster</string>
			<string name="PlasticName">Plastic</string>
			<string name="RockName">Rock</string>
			<string name="RoofShinglesName">RoofShingles</string>
			<string name="RubberName">Rubber</string>
			<string name="SaltName">Salt</string>
			<string name="SandName">Sand</string>
			<string name="SandstoneName">Sandstone</string>
			<string name="SlateName">Slate</string>
			<string name="SmoothPlasticName">SmoothPlastic</string>
			<string name="SnowName">Snow</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000341</UniqueId>
			<bool name="Use2022MaterialsXml">false</bool>
			<string name="WoodName">Wood</string>
			<string name="WoodPlanksName">WoodPlanks</string>
		</Properties>
	</Item>
	<Item class="TextChatService" referent="RBX8fafcab5edd7487cbe65d1724c04a92c">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="ChatTranslationFTUXShown">true</bool>
			<bool name="ChatTranslationToggleEnabled">false</bool>
			<token name="ChatVersion">0</token>
			<bool name="CreateDefaultCommands">true</bool>
			<bool name="CreateDefaultTextChannels">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="HasSeenDeprecationDialog">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsLegacyChatDisabled">false</bool>
			<string name="Name">TextChatService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000342</UniqueId>
		</Properties>
		<Item class="ChatWindowConfiguration" referent="RBXabfad3b2cfb94408b9f771c2269ca463">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0.2999999999999999889</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/Montserrat-Medium.ttf</url></CachedFaceId>
				</Font>
				<float name="HeightScale">1</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<token name="HorizontalAlignment">1</token>
				<string name="Name">ChatWindowConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Color3 name="TextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="TextSize">14</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">0.5</double>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000039b</UniqueId>
				<token name="VerticalAlignment">1</token>
				<float name="WidthScale">1</float>
			</Properties>
		</Item>
		<Item class="ChatInputBarConfiguration" referent="RBX7f89ee7bd7cf418eb3fa35bc47c5af1e">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutocompleteEnabled">true</bool>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0.2000000000000000111</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/Montserrat-Medium.ttf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<token name="KeyboardKeyCode">47</token>
				<string name="Name">ChatInputBarConfiguration</string>
				<Color3 name="PlaceholderColor3">
					<R>0.698039234</R>
					<G>0.698039234</G>
					<B>0.698039234</B>
				</Color3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Ref name="TargetTextChannel">null</Ref>
				<Color3 name="TextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="TextSize">14</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">0.5</double>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000039c</UniqueId>
			</Properties>
		</Item>
		<Item class="BubbleChatConfiguration" referent="RBX40fa9444b97246918705002494bec99d">
			<Properties>
				<string name="AdorneeName">HumanoidRootPart</string>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.980392158</R>
					<G>0.980392158</G>
					<B>0.980392158</B>
				</Color3>
				<double name="BackgroundTransparency">0.10000000000000000555</double>
				<float name="BubbleDuration">15</float>
				<float name="BubblesSpacing">6</float>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<token name="Font">18</token>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/GothamSSm.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/Montserrat-Medium.ttf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Vector3 name="LocalPlayerStudsOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="MaxBubbles">3</float>
				<float name="MaxDistance">100</float>
				<float name="MinimizeDistance">40</float>
				<string name="Name">BubbleChatConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<bool name="TailVisible">true</bool>
				<Color3 name="TextColor3">
					<R>0.223529413</R>
					<G>0.23137255</G>
					<B>0.239215687</B>
				</Color3>
				<int64 name="TextSize">16</int64>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000039d</UniqueId>
				<float name="VerticalStudsOffset">0</float>
			</Properties>
		</Item>
		<Item class="ChannelTabsConfiguration" referent="RBX803e96f01f4a4f50a20189eedacbf0f6">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">false</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/BuilderSans.json</url></Family>
					<Weight>700</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/BuilderSans-Bold.otf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Color3 name="HoverBackgroundColor3">
					<R>0.490196079</R>
					<G>0.490196079</G>
					<B>0.490196079</B>
				</Color3>
				<string name="Name">ChannelTabsConfiguration</string>
				<Color3 name="SelectedTabTextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Color3 name="TextColor3">
					<R>0.686274529</R>
					<G>0.686274529</G>
					<B>0.686274529</B>
				</Color3>
				<int64 name="TextSize">18</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">1</double>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000039e</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="PermissionsService" referent="RBX0fafafd9c673427d9cd397f3d947d8b1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000344</UniqueId>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBX7553ad5142e7426ba8bc012b9be4faaa">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="CustomPoliciesEnabled">false</bool>
			<bool name="DefinesCapabilities">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PlayerEmulatorService</string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<bool name="PseudolocalizationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<int name="TextElongationFactor">0</int>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000345</UniqueId>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBXdf71d22641c14df385fdb0b4b0e372de">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="EnableScriptCollabByDefaultOnLoad">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000349</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="7">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoJumpEnabled">true</bool>
			<token name="AvatarJointUpgrade_SerializedRollout">0</token>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">true</bool>
			<float name="CharacterWalkSpeed">16</float>
			<bool name="ClassicDeath">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<token name="EnableDynamicHeads">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<token name="LuaCharacterController">0</token>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<bool name="RagdollDeath">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000034b</UniqueId>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="8">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000396</UniqueId>
			</Properties>
			<Item class="LocalScript" referent="9">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Client</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{b0388fa0-df75-43b1-b64b-9b82a876bb86}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

print("Hello world, from client!")
print("[Requiring UI Library]")

local Packages = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Packages"))

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local mainGui = playerGui:WaitForChild("Main")

local menus = mainGui:WaitForChild("Menus")
local menu1 = menus:WaitForChild("Menu1")

local button = menu1:WaitForChild("Frame"):WaitForChild("ExpandingButton")
local closeButton = menu1.Frame:WaitForChild("CloseButton")

button.Select.MouseButton1Click:Connect(function()
    if not (Packages.Debounce:Try("BUTTON_1_CLICK", 0.75)) then return end

    -- Show a message to the server
    Packages.UI.Messages:LocalMessage(
        "Hello from the client!",
        "Success",
        Color3.fromRGB(0, 255, 0),
        5
    )

    local soundID = math.random(1, 2) == 1 and "Click_01" or "Bright_Click"
    Packages.Sounds:PlaySound(soundID)
end)

closeButton.Select.MouseButton1Click:Connect(function()
    Packages.UI:CloseMenu(menu1, true, true)
    Packages.Sounds:PlaySound("Click_01")
end)

Packages.UI:OpenMenu(menu1, true, true, 90)]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000397</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBX3248ba63a25243f7af6ce2c6a6a7cf0d">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000039a</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX0ce0f145020e48b0b2f7ab362b4226d3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000034c</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBXfee7c261f83d4ca1a2ead6df4c9124f8">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="RtlTextSupport">0</token>
			<token name="ScreenOrientation">2</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<Ref name="StudioDefaultStyleSheet">null</Ref>
			<Ref name="StudioInsertWidgetLayerCollectorAutoLinkStyleSheet">null</Ref>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000034d</UniqueId>
			<token name="VirtualCursorMode">0</token>
		</Properties>
		<Item class="ScreenGui" referent="RBXf4debee053224055a5afab7971548a67">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="ClipToDeviceSafeArea">true</bool>
				<bool name="DefinesCapabilities">false</bool>
				<int name="DisplayOrder">0</int>
				<bool name="Enabled">true</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Main</string>
				<bool name="ResetOnSpawn">true</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<token name="SafeAreaCompatibility">1</token>
				<token name="ScreenInsets">2</token>
				<token name="SelectionBehaviorDown">0</token>
				<token name="SelectionBehaviorLeft">0</token>
				<token name="SelectionBehaviorRight">0</token>
				<token name="SelectionBehaviorUp">0</token>
				<bool name="SelectionGroup">false</bool>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001ce6</UniqueId>
				<token name="ZIndexBehavior">1</token>
			</Properties>
			<Item class="CanvasGroup" referent="RBX48166a43ec4641c7936f2bd0c1f31aea">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">true</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<Color3 name="GroupColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="GroupTransparency">0</float>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">Menus</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001785</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBXa9501979677946ad82a728854427ff51">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Menu1</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags">TWVudQ==</BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000017a6</UniqueId>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX4b792c03b0374d548eb603a3e081c9fa">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Frame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000017bc</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX4c733d55a8154e3b83156629b7e08ec9">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ExpandingButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.300000012</XS>
									<XO>0</XO>
									<YS>0.300000012</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags">RXhwYW5kaW5nQnV0dG9u</BinaryString>
								<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001d6b</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="UIAspectRatioConstraint" referent="RBX76e78041b09448fab2db91e47cc09bf1">
								<Properties>
									<float name="AspectRatio">2.18684196</float>
									<token name="AspectType">0</token>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="DominantAxis">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">UIAspectRatioConstraint</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001d8d</UniqueId>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBXa4383aaaa9be46fc97d8c484cae31507">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoButtonColor">true</bool>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
										<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
									</Font>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Ref name="HoverHapticEffect">null</Ref>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<bool name="Modal">false</bool>
									<string name="Name">Select</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="PressHapticEffect">null</Ref>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text"></string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001d97</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBXa4a3d9c5d1cd445ab74e0bcfadf74314">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Button</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>-10</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags">Q29sb3VyQ2hhbmdpbmdFbGVtZW50</BinaryString>
									<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001d98</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX5f8eee3ffd8449d4a00cf1ac18273f77">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">TextContent</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>1</YS>
											<YO>-5</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001db9</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="UIListLayout" referent="RBXbab100ef911541f5a96d2ebeb4097e18">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="FillDirection">1</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<token name="HorizontalAlignment">0</token>
											<token name="HorizontalFlex">0</token>
											<token name="ItemLineAlignment">0</token>
											<string name="Name">UIListLayout</string>
											<UDim name="Padding">
												<S>0</S>
												<O>0</O>
											</UDim>
											<token name="SortOrder">2</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001dba</UniqueId>
											<token name="VerticalAlignment">0</token>
											<token name="VerticalFlex">0</token>
											<bool name="Wraps">false</bool>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBX4c40f8f210024e879073f45a4bf2f2e4">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
												<Weight>400</Weight>
												<Style>Normal</Style>
											</Font>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>-10</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags">Um90YXRpbmdFbGVtZW50</BinaryString>
											<string name="Text">Press Me</string>
											<Color3 name="TextColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001dbb</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="UICorner" referent="RBX421563512ce145f7ad7596a61e0def9d">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<UDim name="CornerRadius">
											<S>0.25</S>
											<O>0</O>
										</UDim>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UICorner</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001dbc</UniqueId>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="UIStroke" referent="RBX2547b0607e2b451898063c15dbce5c0e">
							<Properties>
								<token name="ApplyStrokeMode">0</token>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<UDim name="BorderOffset">
									<S>0</S>
									<O>0</O>
								</UDim>
								<token name="BorderStrokePosition">0</token>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<Color3 name="Color">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Enabled">true</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LineJoinMode">0</token>
								<string name="Name">UIStroke</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="Thickness">4</float>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000017f9</UniqueId>
							</Properties>
						</Item>
						<Item class="UICorner" referent="RBX8118d935ed9a4a61b2ed6b56eac9a923">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0.100000001</S>
									<O>0</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000017fa</UniqueId>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBXbccc3b0f20ab4b118bc6dd00f7c84660">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>1</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<UniqueId name="HistoryId">774a92fe3f3077d308a27d4200001d6b</UniqueId>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">CloseButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.100000001</XS>
									<XO>0</XO>
									<YS>0.300000012</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000022b1</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextButton" referent="RBX21aceb57df7d490e94f8a43a9d7f929f">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoButtonColor">true</bool>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
										<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
									</Font>
									<UniqueId name="HistoryId">774a92fe3f3077d308a27d4200001d97</UniqueId>
									<Ref name="HoverHapticEffect">null</Ref>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<bool name="Modal">false</bool>
									<string name="Name">Select</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="PressHapticEffect">null</Ref>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text"></string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000022b3</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX17c733818f1048bd93ea22f1adc5b8d3">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">774a92fe3f3077d308a27d4200001d98</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Button</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>1</YS>
										<YO>-10</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000022b4</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX8a0146fa96004e4fa2edc0849e7da44a">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">774a92fe3f3077d308a27d4200001db9</UniqueId>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">TextContent</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>1</YS>
											<YO>-5</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000022b5</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="UIListLayout" referent="RBXb886d1456ca04c3ebabd8aa846035f14">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="FillDirection">1</token>
											<UniqueId name="HistoryId">774a92fe3f3077d308a27d4200001dba</UniqueId>
											<token name="HorizontalAlignment">0</token>
											<token name="HorizontalFlex">0</token>
											<token name="ItemLineAlignment">0</token>
											<string name="Name">UIListLayout</string>
											<UDim name="Padding">
												<S>0</S>
												<O>0</O>
											</UDim>
											<token name="SortOrder">2</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000022b6</UniqueId>
											<token name="VerticalAlignment">0</token>
											<token name="VerticalFlex">0</token>
											<bool name="Wraps">false</bool>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBX2bf8491cd34c45ffad3ed0bc04d81da8">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<Font name="FontFace">
												<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
												<Weight>400</Weight>
												<Style>Normal</Style>
											</Font>
											<UniqueId name="HistoryId">774a92fe3f3077d308a27d4200001dbb</UniqueId>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<float name="LineHeight">1</float>
											<string name="LocalizationMatchIdentifier"></string>
											<string name="LocalizationMatchedSourceText"></string>
											<int name="MaxVisibleGraphemes">-1</int>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<string name="OpenTypeFeatures"></string>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<bool name="RichText">false</bool>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags">Um90YXRpbmdFbGVtZW50</BinaryString>
											<string name="Text">X</string>
											<Color3 name="TextColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<token name="TextDirection">0</token>
											<bool name="TextScaled">true</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<token name="TextTruncate">0</token>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000022b7</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="UICorner" referent="RBXc1fcfed0b9e14a73bb96b4e11e79dea7">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<UDim name="CornerRadius">
											<S>1</S>
											<O>0</O>
										</UDim>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">774a92fe3f3077d308a27d4200001dbc</UniqueId>
										<string name="Name">UICorner</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000022b8</UniqueId>
									</Properties>
								</Item>
								<Item class="UIStroke" referent="RBX50049030b23948dbbb6cf04b52484502">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Enabled">true</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<token name="LineJoinMode">0</token>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<float name="Thickness">3</float>
										<float name="Transparency">0</float>
										<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c0000232b</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="UIAspectRatioConstraint" referent="RBX9c09aef2fdde4488bb25c76066af685f">
								<Properties>
									<float name="AspectRatio">1</float>
									<token name="AspectType">0</token>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="DominantAxis">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">UIAspectRatioConstraint</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000022e0</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="LocalizationService" referent="RBX2fc238201db64fbaac47928baaff7b45">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000034f</UniqueId>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX96581f6475ab4f9e89233053bf21a2dd">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000353</UniqueId>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBX56436191b0454726939c89890e3d5185">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000355</UniqueId>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXccf0845f6b0640c990fae5720b3a09a9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000356</UniqueId>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBX9f1bf691c0bb4db99a2a1a787a021dc7">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000359</UniqueId>
		</Properties>
		<Item class="StringValue" referent="RBXb09aeac67b2e469a9ba1cca2f1730b36">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001be1</UniqueId>
				<string name="Value">{9a42ef7e-f4cd-446f-b947-7807b8937273}</string>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBXbf454aef33914d90a31d878e9eab3b73">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000035a</UniqueId>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX3ac3190d724e47dab914927178977b88">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000035b</UniqueId>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBXfd3dcfa071624ad893056f2e047b8f8a">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000035c</UniqueId>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBX559cf94e5ab54e009d1581737077495f">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000035d</UniqueId>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBXe7e265f6aa1e44eeb58a20d71e5ed75a">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AutomaticScaling">0</token>
			<bool name="AvatarGestures">false</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="ControllerModels">1</token>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="FadeOutViewOnCollision">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="LaserPointer">1</token>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000361</UniqueId>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX31d74705ba034cb787ae6a9074204019">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000362</UniqueId>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX5c65bfaf4d8e446da9dbae88d90d9b53">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000363</UniqueId>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX345b3502c7704246bfb8c6270e5cd2ed">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000364</UniqueId>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBXa4bba69e39a1480bad99f4e236dd1668">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000365</UniqueId>
		</Properties>
	</Item>
	<Item class="AvatarSettings" referent="RBX28f91fbdc9234e2a90f212470a4e0c35">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AvatarSettings</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000036b</UniqueId>
		</Properties>
		<Item class="AvatarRules" referent="RBX7f9580e6c7d94a7e8df872d0dab15ed1">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<token name="AvatarType">1</token>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">DefaultAvatarRules</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000004c2</UniqueId>
			</Properties>
			<Item class="AvatarBodyRules" referent="RBX361aa68f9cde4d07857bbf635c6285e3">
				<Properties>
					<token name="AppearanceMode">0</token>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<token name="BuildMode">0</token>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<int64 name="CustomBodyBundleId">0</int64>
					<token name="CustomBodyType">0</token>
					<NumberRange name="CustomBodyTypeScale">0 1 </NumberRange>
					<bool name="CustomEyebrowEnabled">false</bool>
					<int64 name="CustomEyebrowId">0</int64>
					<bool name="CustomEyelashEnabled">false</bool>
					<int64 name="CustomEyelashId">0</int64>
					<bool name="CustomFaceEnabled">false</bool>
					<int64 name="CustomFaceId">0</int64>
					<bool name="CustomHeadEnabled">false</bool>
					<int64 name="CustomHeadId">0</int64>
					<NumberRange name="CustomHeadScale">0.95 1 </NumberRange>
					<NumberRange name="CustomHeight">5.5 5.5 </NumberRange>
					<NumberRange name="CustomHeightScale">0.9 1.05 </NumberRange>
					<bool name="CustomLeftArmEnabled">false</bool>
					<int64 name="CustomLeftArmId">0</int64>
					<bool name="CustomLeftLegEnabled">false</bool>
					<int64 name="CustomLeftLegId">0</int64>
					<bool name="CustomMoodEnabled">false</bool>
					<int64 name="CustomMoodId">0</int64>
					<NumberRange name="CustomProportionsScale">0 1 </NumberRange>
					<bool name="CustomRightArmEnabled">false</bool>
					<int64 name="CustomRightArmId">0</int64>
					<bool name="CustomRightLegEnabled">false</bool>
					<int64 name="CustomRightLegId">0</int64>
					<bool name="CustomTorsoEnabled">false</bool>
					<int64 name="CustomTorsoId">0</int64>
					<NumberRange name="CustomWidthScale">0.7 1 </NumberRange>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<bool name="KeepPlayerHead">true</bool>
					<string name="Name">AvatarBodyRules</string>
					<token name="ScaleMode">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000004c3</UniqueId>
				</Properties>
			</Item>
			<Item class="AvatarCollisionRules" referent="RBXe4163f8d2d9641e79639cd63f9977651">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<token name="CollisionMode">0</token>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<token name="HitAndTouchDetectionMode">0</token>
					<token name="LegacyCollisionMode">1</token>
					<string name="Name">AvatarCollisionRules</string>
					<Vector3 name="SingleColliderSize">
						<X>2</X>
						<Y>4</Y>
						<Z>1</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000004c4</UniqueId>
				</Properties>
			</Item>
			<Item class="AvatarAnimationRules" referent="RBXc10ddb84355d4900916c72db0d571ee8">
				<Properties>
					<token name="AnimationClipsMode">0</token>
					<token name="AnimationPacksMode">0</token>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="CustomClimbAnimationEnabled">false</bool>
					<int64 name="CustomClimbAnimationId">0</int64>
					<bool name="CustomFallAnimationEnabled">false</bool>
					<int64 name="CustomFallAnimationId">0</int64>
					<bool name="CustomIdleAlt1AnimationEnabled">false</bool>
					<int64 name="CustomIdleAlt1AnimationId">0</int64>
					<bool name="CustomIdleAlt2AnimationEnabled">false</bool>
					<int64 name="CustomIdleAlt2AnimationId">0</int64>
					<bool name="CustomIdleAnimationEnabled">false</bool>
					<int64 name="CustomIdleAnimationId">0</int64>
					<bool name="CustomJumpAnimationEnabled">false</bool>
					<int64 name="CustomJumpAnimationId">0</int64>
					<bool name="CustomRunAnimationEnabled">false</bool>
					<int64 name="CustomRunAnimationId">0</int64>
					<bool name="CustomSwimAnimationEnabled">false</bool>
					<int64 name="CustomSwimAnimationId">0</int64>
					<bool name="CustomSwimIdleAnimationEnabled">false</bool>
					<int64 name="CustomSwimIdleAnimationId">0</int64>
					<bool name="CustomWalkAnimationEnabled">false</bool>
					<int64 name="CustomWalkAnimationId">0</int64>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">AvatarAnimationRules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000004c5</UniqueId>
				</Properties>
			</Item>
			<Item class="AvatarAccessoryRules" referent="RBXe1d6eea113894a1090ead39334a0fbf1">
				<Properties>
					<token name="AccessoryMode">0</token>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<token name="CustomAccessoryMode">0</token>
					<bool name="CustomBackAccessoryEnabled">false</bool>
					<int64 name="CustomBackAccessoryId">0</int64>
					<bool name="CustomFaceAccessoryEnabled">false</bool>
					<int64 name="CustomFaceAccessoryId">0</int64>
					<bool name="CustomFrontAccessoryEnabled">false</bool>
					<int64 name="CustomFrontAccessoryId">0</int64>
					<bool name="CustomHairAccessoryEnabled">false</bool>
					<int64 name="CustomHairAccessoryId">0</int64>
					<bool name="CustomHeadAccessoryEnabled">false</bool>
					<int64 name="CustomHeadAccessoryId">0</int64>
					<bool name="CustomNeckAccessoryEnabled">false</bool>
					<int64 name="CustomNeckAccessoryId">0</int64>
					<bool name="CustomShoulderAccessoryEnabled">false</bool>
					<int64 name="CustomShoulderAccessoryId">0</int64>
					<bool name="CustomWaistAccessoryEnabled">false</bool>
					<int64 name="CustomWaistAccessoryId">0</int64>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="EnableSound">true</bool>
					<bool name="EnableVFX">true</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Vector3 name="LimitBounds">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="LimitMethod">1</token>
					<string name="Name">AvatarAccessoryRules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000004c6</UniqueId>
				</Properties>
			</Item>
			<Item class="AvatarClothingRules" referent="RBXb83288ff82b14048907e9a64ea4b9086">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<token name="ClothingMode">0</token>
					<bool name="CustomClassicPantsAccessoryEnabled">false</bool>
					<int64 name="CustomClassicPantsAccessoryId">0</int64>
					<bool name="CustomClassicShirtsAccessoryEnabled">false</bool>
					<int64 name="CustomClassicShirtsAccessoryId">0</int64>
					<bool name="CustomClassicTShirtsAccessoryEnabled">false</bool>
					<int64 name="CustomClassicTShirtsAccessoryId">0</int64>
					<token name="CustomClothingMode">0</token>
					<bool name="CustomDressSkirtAccessoryEnabled">false</bool>
					<int64 name="CustomDressSkirtAccessoryId">0</int64>
					<bool name="CustomJacketAccessoryEnabled">false</bool>
					<int64 name="CustomJacketAccessoryId">0</int64>
					<bool name="CustomLeftShoesAccessoryEnabled">false</bool>
					<int64 name="CustomLeftShoesAccessoryId">0</int64>
					<bool name="CustomPantsAccessoryEnabled">false</bool>
					<int64 name="CustomPantsAccessoryId">0</int64>
					<bool name="CustomRightShoesAccessoryEnabled">false</bool>
					<int64 name="CustomRightShoesAccessoryId">0</int64>
					<bool name="CustomShirtAccessoryEnabled">false</bool>
					<int64 name="CustomShirtAccessoryId">0</int64>
					<bool name="CustomShortsAccessoryEnabled">false</bool>
					<int64 name="CustomShortsAccessoryId">0</int64>
					<bool name="CustomSweaterAccessoryEnabled">false</bool>
					<int64 name="CustomSweaterAccessoryId">0</int64>
					<bool name="CustomTShirtAccessoryEnabled">false</bool>
					<int64 name="CustomTShirtAccessoryId">0</int64>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Vector3 name="LimitBounds">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">AvatarClothingRules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000004c7</UniqueId>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBXafb7f352c2fe4393a0a5fbf30ca4fffa">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LuaWebService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000373</UniqueId>
		</Properties>
	</Item>
	<Item class="ProcessInstancePhysicsService" referent="RBXcc03e29bf06444df9fb006cf29e1086d">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ProcessInstancePhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000374</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000375</UniqueId>
		</Properties>
		<Item class="Folder" referent="2">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Shared</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000392</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBX8bc3c7c671ee4ef28863e8fc3c1dc0a2">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Assets</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">68fd6fe389d5a4b808a2bc0300001845</UniqueId>
				</Properties>
				<Item class="Folder" referent="RBX6e99a7a40aa340209242136bfe05848b">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Models</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">68fd6fe389d5a4b808a2bc0300001846</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX78672948e8744b048723b8bb29bb9390">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">UI</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">68fd6fe389d5a4b808a2bc0300001847</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX208fac8cf2724be18f29fa96503551c5">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Sounds</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001cd0</UniqueId>
					</Properties>
					<Item class="Sound" referent="RBXe51f88c57e2b4efda470bf08d6943fe2">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="IsMutedForCapture">false</bool>
							<NumberRange name="LoopRegion">0 60000 </NumberRange>
							<bool name="Looped">false</bool>
							<string name="Name">Bright_Click</string>
							<bool name="PlayOnRemove">false</bool>
							<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
							<bool name="PlaybackRegionsEnabled">false</bool>
							<float name="PlaybackSpeed">1</float>
							<bool name="Playing">false</bool>
							<float name="RollOffMaxDistance">10000</float>
							<float name="RollOffMinDistance">10</float>
							<token name="RollOffMode">0</token>
							<Ref name="SoundGroup">null</Ref>
							<Content name="SoundId"><url>rbxassetid://15675059323</url></Content>
							<int64 name="SourceAssetId">15675059323</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="TimePosition">0</double>
							<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001dad</UniqueId>
							<float name="Volume">0.5</float>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBXaf5816d61dcc408194ecd277be854853">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Packages</string>
					<string name="ScriptGuid">{96965b3e-f478-4c74-8e4f-af328d81aef8}</string>
					<ProtectedString name="Source"><![CDATA[--!strict

local Packages = {}

-- // Paths
Packages.Sounds = require(script.Sounds)
Packages.UI = require(script.UI)
Packages.Remotes = require(script.Remotes)
Packages.Debounce = require(script.Debounce)
Packages.ReplicatedData = require(script.ReplicatedData)

return Packages]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f03</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX5775f239a28a4ecab3230f0b05ff4263">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Remotes</string>
						<string name="ScriptGuid">{bcd86405-885a-4cdc-9b81-7509a5fbb758}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- // Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local RemotesFolder : Folder

local Remotes = {}

-- // Private Variables
local RemoteEvents : {[string] : RemoteEvent} = {}
local RemoteFunctions : {[string] : RemoteFunction} = {}

function Remotes:GetRemote(remoteType : "RemoteEvent" | "RemoteFunction", name : string): RemoteEvent | RemoteFunction
	if (RunService:IsServer()) then
		local dict = (remoteType == "RemoteEvent" and RemoteEvents) or RemoteFunctions
		if (dict[name]) then
			return dict[name]
		end
		
		-- If not found, create the remote
		local remote = Instance.new(remoteType)
		remote.Parent = RemotesFolder
		remote.Name = name
		
		dict[name] = remote
		
		return remote
	else
		local remote = RemotesFolder:FindFirstChild(name) :: RemoteEvent | RemoteFunction
		if (not remote) then
			print(`[CLIENT | REMOTES] Waiting for {remoteType} {name}`)
			remote = RemotesFolder:WaitForChild(name, 20) :: RemoteEvent | RemoteFunction
			if not (remote) then error(("Remote %s not found!"):format(name)) end
		end
		return remote
	end
end

local function initialise()
	if (RunService:IsServer()) then
		RemotesFolder = ReplicatedStorage:FindFirstChild("Remotes")
		if not (RemotesFolder) then
			local folder = Instance.new("Folder")
			folder.Parent = ReplicatedStorage
			folder.Name = "Remotes"
			RemotesFolder = folder
		end
	else
		RemotesFolder = ReplicatedStorage:WaitForChild("Remotes")
	end
end

-- Initialisation
initialise()

return Remotes]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f04</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXbaeb6f92012b46f89468356c62304b22">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Sounds</string>
						<string name="ScriptGuid">{1ef39381-cee8-4ff2-822c-fcebdf079997}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Debris = game:GetService("Debris")
local TweenService = game:GetService("TweenService")

-- Constants
local SOUNDS_FOLDER : Folder? = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Assets"):WaitForChild("Sounds")
local DEFAULT_SOUNDS_FOLDER : Folder = script:WaitForChild("DefaultSounds")
local IS_SERVER = RunService:IsServer()
local LOCAL_PLAYER = not IS_SERVER and Players.LocalPlayer or nil

-- Assets
local ReplicatedTemp = ReplicatedStorage:FindFirstChild("ReplicatedTemp") or Instance.new("Folder")
ReplicatedTemp.Name = "ReplicatedTemp"
ReplicatedTemp.Parent = ReplicatedStorage

-- Remote creation
local function getOrCreateRemote()
	local existing = script:FindFirstChild("PlaySound")
	if existing and existing:IsA("RemoteEvent") then return existing end

	local newRemote = Instance.new("RemoteEvent")
	newRemote.Name = "PlaySound"
	newRemote.Parent = script
	return newRemote
end

-- Module
local SoundModule = {
	DefaultSounds = {},
	LoopingSoundCache = {},
	PlaySoundRemote = getOrCreateRemote(),
}

-- Helper: Clone sound from ID or object
local function cloneSound(sound)
	if typeof(sound) == "string" then
		local s = SoundModule.DefaultSounds[sound]
		if not s then
			warn("No sound found with ID:", sound)
			return nil
		end
		return s:Clone()
	elseif typeof(sound) == "Instance" and sound:IsA("Sound") then
		return sound:Clone()
	end
	return nil
end

-- Helper: Play 3D sound at CFrame or parent it to part
local function play3DSound(sound, position)
	local part = typeof(position) == "CFrame" and Instance.new("Part") or position
	if typeof(position) == "CFrame" then
		part.CFrame = position
	end

	part.Anchored = true
	part.CanCollide = false
	part.CanTouch = false
	part.Transparency = 1
	part.Name = "_SoundAnchor"
	part.Parent = workspace

	sound.RollOffMaxDistance = 150
	sound.PlayOnRemove = true
	sound.Parent = part
	part:Destroy()
end

-- Public: Play sound (one-shot)
function SoundModule:PlaySound(sound, position, playerList)
	if not sound then return end

	if IS_SERVER then
		local targetPlayers = playerList or Players:GetPlayers()

		local payload = typeof(sound) == "Instance" and sound:Clone() or sound
		if typeof(payload) == "Instance" then
			payload.Parent = ReplicatedTemp
			Debris:AddItem(payload, payload.TimeLength + 3)
		end

		for _, player in targetPlayers do
			self.PlaySoundRemote:FireClient(player, payload, position)
		end
	else
		local s = cloneSound(sound)
		if not s then return end

		if position then
			play3DSound(s, position)
		else
			s.PlayOnRemove = true
			s.Parent = workspace
			s:Destroy()
		end
	end
end

-- Public: Play looping sound (client only)
function SoundModule:PlayLoopingSound(sound, part, override, fade)
	if self.LoopingSoundCache[sound] and not override then return end

	local s = cloneSound(sound)
	if not s then return end

	s.Looped = true
	s.RollOffMaxDistance = 150
	s.Parent = part or ReplicatedTemp

	if fade then
		local vol = s.Volume
		s.Volume = 0
		s:Play()
		TweenService:Create(s, TweenInfo.new(1), { Volume = vol }):Play()
	else
		s:Play()
	end

	if self.LoopingSoundCache[sound] then
		self:StopLoopingSound(sound, false)
	end

	self.LoopingSoundCache[sound] = s
end

-- Public: Stop looping sound
function SoundModule:StopLoopingSound(sound, fade)
	local s = self.LoopingSoundCache[sound]
	if not s then return end

	self.LoopingSoundCache[sound] = nil

	if fade then
		local tween = TweenService:Create(s, TweenInfo.new(1), { Volume = 0 })
		tween:Play()
		tween.Completed:Wait()
	end

	s:Destroy()
end

-- Public: Toggle footstep audio on local player
function SoundModule:ToggleFootsteps(state)
	if IS_SERVER then return end

	local char = LOCAL_PLAYER.Character
	local root = char and char:FindFirstChild("HumanoidRootPart")
	local running = root and root:FindFirstChild("Running")
	if not running then return end

	if state == nil then
		state = running.Volume == 0
	end

	running.Volume = state and 0.5 or 0
end

-- Optional: Register a folder of default sounds
function SoundModule:RegisterSounds(folder)
	for _, sound in folder:GetChildren() do
		if sound:IsA("Sound") then
			self.DefaultSounds[sound.Name] = sound
		end
	end
end

-- Internal: Setup client listener
if not IS_SERVER then
	SoundModule.PlaySoundRemote.OnClientEvent:Connect(function(...)
		SoundModule:PlaySound(...)
	end)
end

local function initialise()
    -- Register default sounds
    SoundModule:RegisterSounds(DEFAULT_SOUNDS_FOLDER)

    -- Register custom sounds
    if (SOUNDS_FOLDER) then
        SoundModule:RegisterSounds(SOUNDS_FOLDER)
    else
        warn("Sounds folder not found in ReplicatedStorage.")
    end
end

-- Initialisation
initialise()

return SoundModule]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f05</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBXbae783a549914f489f2dc2150be4a33f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">DefaultSounds</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f06</UniqueId>
						</Properties>
						<Item class="Sound" referent="RBXaeed5b1d440e47a1941c2e3e090c1c9f">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="IsMutedForCapture">false</bool>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Click_01</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<float name="RollOffMaxDistance">10000</float>
								<float name="RollOffMinDistance">10</float>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://1673280232</url></Content>
								<int64 name="SourceAssetId">1673280232</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002133</UniqueId>
								<float name="Volume">0.5</float>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBXbc593e752c4543e49bde50d8037769b8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">UI</string>
						<string name="ScriptGuid">{2b33cfc8-ac25-4bb1-9cfe-f9f698fce73b}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local UI = {}

-- // Paths
UI.Messages = require(script.Messages)

-- // Services
local CollectionService = game:GetService("CollectionService")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- // Assets
local MenuBlur = Instance.new("BlurEffect")
MenuBlur.Name = "MenuBlur"
MenuBlur.Size = 0
MenuBlur.Parent = Lighting
MenuBlur.Enabled = false

-- // Constants
UI.DefaultProperties = {
    BlurSize = 10,
    FOV = 70,
    TweenDuration = 0.2,
}

-- // Utils
function UI:ToggleFOV(state : boolean, fov : number?)
    if (not fov) then
        fov = UI.DefaultProperties.FOV
    end
    if (state) then
        TweenService:Create(
            game.Workspace.CurrentCamera,
            TweenInfo.new(UI.DefaultProperties.TweenDuration, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
            {FieldOfView = fov}
        ):Play()
    else
        TweenService:Create(
            game.Workspace.CurrentCamera,
            TweenInfo.new(UI.DefaultProperties.TweenDuration, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
            {FieldOfView = UI.DefaultProperties.FOV}
        ):Play()
    end
end

function UI:ToggleBlur(state : boolean)
    if (MenuBlur.Enabled == state) then return end
    MenuBlur.Enabled = state
    if (state) then
        MenuBlur.Size = 0
        MenuBlur.Enabled = true
        TweenService:Create(
            MenuBlur,
            TweenInfo.new(UI.DefaultProperties.TweenDuration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Size = UI.DefaultProperties.BlurSize}
        ):Play()
    else
        TweenService:Create(
            MenuBlur,
            TweenInfo.new(UI.DefaultProperties.TweenDuration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Size = 0}
        ):Play()
        task.delay(UI.DefaultProperties.TweenDuration, function()
            if (MenuBlur.Size == 0) then
                MenuBlur.Enabled = false
            end
        end)
    end
end

function UI:CloseMenu(menu : CanvasGroup | Frame, affectBlur : boolean?, affectFOV : boolean?)
    if not (menu:IsA("Frame") or menu:IsA("CanvasGroup")) then
        return
    end

    if (not menu.Visible) then
        return
    end
    if not (menu.Visible) then
        return
    end
    TweenService:Create(
        menu,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Position = UDim2.new(0, 0, 1, 0)}
    ):Play()
    task.delay(0.5, function()
        if (menu.Position.Y.Scale == 1) then
            menu.Visible = false
        end
    end)

    if (not affectBlur or affectBlur == true) then
        UI:ToggleBlur(false)
    end

    if (not affectFOV or affectFOV == true) then
        UI:ToggleFOV(false)
    end
end

function UI:OpenMenu(menu : CanvasGroup | Frame, closeOthers : boolean, affectBlur : boolean, fov : number?)
    if not (menu:IsA("Frame") or menu:IsA("CanvasGroup")) then
        return
    end
    if (menu.Visible) then
        return
    end

    if closeOthers then
        for _, v in CollectionService:GetTagged("Menu") do
            if not (v:IsA("Frame") or v:IsA("CanvasGroup")) then
                continue
            end
            if (v == menu) then
                continue
            end
            UI:CloseMenu(v, false)
        end
    end

    menu.Visible = true
    TweenService:Create(
        menu,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Position = UDim2.new(0, 0, 0, 0)}
    ):Play()

    if (affectBlur == true) then
        UI:ToggleBlur(true)
    end

    if (fov) then
        UI:ToggleFOV(true, fov)
    end
end

function UI:CloseMenus()
    for _, v in CollectionService:GetTagged("Menu") do
        if not (v:IsA("Frame") or v:IsA("CanvasGroup")) then
            continue
        end
        UI:ToggleMenu(v, false, false)
    end
end

-- // Require UI Components (Client Only)
if (RunService:IsClient()) then
    local Components = {}
    for _, m in script:WaitForChild("Components"):GetChildren() do
        if (m:IsA("ModuleScript")) then
            task.spawn(function()
                Components[m.Name] = require(m)
            end)
        end
    end
end

return UI]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f07</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBX7627c3ed5169456aaf587f81f9fa0181">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Assets</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f08</UniqueId>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX3fbc0d1335bb4a2181c85e02f2e8676c">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Components</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f09</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX7f1bce0401bd4683843c3dc5dc130d5e">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BouncingButton</string>
								<string name="ScriptGuid">{41a6f687-1bf2-47a9-b4db-b46cdee8879a}</string>
								<ProtectedString name="Source"><![CDATA[--!strict

--// Services
local TweenService = game:GetService("TweenService")
local CollectionService = game:GetService("CollectionService")

--// Constants
local TAG = "HoveringButton"
local APPLIED_TAG = TAG .. "_Applied"

--// Types
type GuiComponent = {
	Create: (self: GuiComponent, button: Frame) -> nil
}

--// Component
local GuiComponent: GuiComponent = {}

--// Public Methods
function GuiComponent:Create(button: Frame): nil
	-- Prevent re-application
	if CollectionService:HasTag(button, APPLIED_TAG) then
		return
	end
	CollectionService:AddTag(button, APPLIED_TAG)

	local selectButton = button:FindFirstChild("Select")
	if not selectButton or not selectButton:IsA("TextButton") then
		warn(TAG, "Error: '" .. button:GetFullName() .. "' has no child 'Select' (TextButton)")
		return
	end

	local childFrame = button:FindFirstChild("Button")
	if not childFrame or not childFrame:IsA("Frame") then
		warn(TAG, "Error: '" .. button:GetFullName() .. "' has no child 'Button' (Frame)")
		return
	end

	local originalSize = childFrame.Size

	-- Create tweens
	local inTweens = {}
	local outTweens = {}

	local imageLabel = childFrame:FindFirstChild("ImageLabel")
	if (imageLabel) then
		inTweens.Image = TweenService:Create(
			imageLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Rotation = 30}
		)
		outTweens.Image = TweenService:Create(
			imageLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Rotation = 0}
		)
	end

	local gradientFrame = childFrame:FindFirstChild("GradientFrame")
	if (gradientFrame) then
		gradientFrame.Transparency = 1
		gradientFrame.Visible = true
		inTweens.Gradient = TweenService:Create(
			gradientFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Transparency = 0.8}
		)
		outTweens.Gradient = TweenService:Create(
			gradientFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart), {Transparency = 1}
		)
	end

	inTweens.Frame = TweenService:Create(
		childFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quart),
		{Position = UDim2.new(childFrame.Position.X.Scale, childFrame.Position.X.Offset, 0.5, -5)}
	)
	outTweens.Frame = TweenService:Create(
		childFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quart),
		{Position = childFrame.Position}
	)

	selectButton.MouseEnter:Connect(function()
		for _, tween in inTweens do
			tween:Play()
		end

		selectButton.MouseLeave:Wait()

		for _, tween in outTweens do
			tween:Play()
		end
	end)
end

local function initialise(): nil
	for _, instance in CollectionService:GetTagged(TAG) do
		GuiComponent:Create(instance)
	end

	CollectionService:GetInstanceAddedSignal(TAG):Connect(function(instance)
		GuiComponent:Create(instance)
	end)
end

-- Initialisation
initialise()

return GuiComponent
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f0a</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX9db6d26c28024aff9bd999f11c9faa8d">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">ColourChange</string>
								<string name="ScriptGuid">{4ac984b8-1ee9-4a8b-a706-3ee46e0a7d79}</string>
								<ProtectedString name="Source"><![CDATA[--!strict

--// Services
local CollectionService = game:GetService("CollectionService")
local RunService = game:GetService("RunService")

--// Constants
local TAG = "ColourChangingElement"
local APPLIED_TAG = TAG .. "_Applied"

--// Types
type GuiComponent = {
	ColourSets: { [string]: { [number]: Color3 } }
}

--// Component
local GuiComponent: GuiComponent = {}

--// Configuration
GuiComponent.ColourSets = {
	Default = {
		BrickColor.new("Really red").Color,
		BrickColor.new("Neon orange").Color,
		BrickColor.new("New Yeller").Color,
		BrickColor.new("Lime green").Color,
		BrickColor.new("Electric blue").Color,
		BrickColor.new("Dark blue").Color,
		BrickColor.new("Royal purple").Color,
		BrickColor.new("Hot pink").Color,
	},

	Greyscale = {
		Color3.fromRGB(0, 0, 0),
		Color3.fromRGB(128, 128, 128),
		Color3.fromRGB(255, 255, 255),
		Color3.fromRGB(128, 128, 128),
	},

	Blue = {
		Color3.fromRGB(50, 150, 255),
		Color3.fromRGB(0, 0, 255),
		Color3.fromRGB(0, 200, 255),
		Color3.fromRGB(0, 255, 255),
	},
}

--// Render Update
local function update()
	local elements = CollectionService:GetTagged(TAG)
	if #elements == 0 then return end

	local t = tick()

	for _, element in elements do
		if not element:IsDescendantOf(game.Players) then continue end
		if not CollectionService:HasTag(element, APPLIED_TAG) then
			CollectionService:AddTag(element, APPLIED_TAG)
		end

		local colourSetId = element:GetAttribute("ColourSet") or "Default"
		local colourSet = GuiComponent.ColourSets[colourSetId]

		if not colourSet then
			warn(TAG .. " - Unknown colour set: " .. tostring(colourSetId))
			continue
		end

		local speedAttr = element:GetAttribute("ColourChangeSpeed") or 1
		local clampedSpeed = math.clamp(speedAttr, 0.1, 10)
		local duration = 4 / clampedSpeed

		local index = (t % (duration / #colourSet)) / (duration / #colourSet)
		local n1 = math.floor((t / duration) * #colourSet) % #colourSet
		local n2 = (n1 + 1) > #colourSet and 1 or (n1 + 1)
		
		if n1 == 0 then n1 = #colourSet end

		local c1 = colourSet[n1]
		local c2 = colourSet[n2]
		local interpolated = c1:Lerp(c2, index)

		if element:IsA("Frame") or element:IsA("GuiButton") then
			element.BackgroundColor3 = interpolated
		elseif element:IsA("ImageLabel") then
			element.ImageColor3 = interpolated
		elseif element:IsA("TextLabel") then
			element.TextColor3 = interpolated
		elseif element:IsA("UIStroke") then
			element.Color = interpolated
		end
	end
end

--// Initialization
RunService:BindToRenderStep("ChangeElementColours", Enum.RenderPriority.Last.Value, update)

return GuiComponent]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f0b</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX84108fc7702a4416b18ce1f762e36a55">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">ExpandingButton</string>
								<string name="ScriptGuid">{02814001-23ba-48c9-a501-18cde8103cea}</string>
								<ProtectedString name="Source"><![CDATA[--!strict

--// Services
local TweenService = game:GetService("TweenService")
local CollectionService = game:GetService("CollectionService")

--// Constants
local TAG = "ExpandingButton"
local APPLIED_TAG = TAG .. "_Applied"

--// Types
type GuiComponent = {
	Create: (self: GuiComponent, button: Frame) -> nil
}

--// Component
local GuiComponent: GuiComponent = {}

--// Public Methods
function GuiComponent:Create(button: Frame): nil
	-- Prevent re-application
	if CollectionService:HasTag(button, APPLIED_TAG) then
		return
	end
	CollectionService:AddTag(button, APPLIED_TAG)

	local selectButton = button:FindFirstChild("Select")
	if not selectButton or not selectButton:IsA("TextButton") then
		warn(TAG, "Error: '" .. button:GetFullName() .. "' has no child 'Select' (TextButton)")
		return
	end

	local childFrame = button:FindFirstChild("Button")
	if not childFrame or not childFrame:IsA("Frame") then
		warn(TAG, "Error: '" .. button:GetFullName() .. "' has no child 'Button' (Frame)")
		return
	end

	local originalSize = childFrame.Size

	-- Create tweens
	local inTweens = {}
	local outTweens = {}

	local gradientFrame = button:FindFirstChild("GradientFrame")
	if gradientFrame and gradientFrame:IsA("Frame") then
		gradientFrame.Transparency = 1
		gradientFrame.Visible = true

		inTweens.Gradient = TweenService:Create(
			gradientFrame,
			TweenInfo.new(0.5, Enum.EasingStyle.Quart),
			{ Transparency = 0 }
		)
		outTweens.Gradient = TweenService:Create(
			gradientFrame,
			TweenInfo.new(0.5, Enum.EasingStyle.Quart),
			{ Transparency = 1 }
		)
	end

	inTweens.Frame = TweenService:Create(
		childFrame,
		TweenInfo.new(0.25, Enum.EasingStyle.Quart),
		{ Size = UDim2.fromScale(1, 1) }
	)
	outTweens.Frame = TweenService:Create(
		childFrame,
		TweenInfo.new(0.25, Enum.EasingStyle.Quart),
		{ Size = originalSize }
	)

	selectButton.MouseEnter:Connect(function()
		print("MOUSE ENTERED", button.Name)
		for _, tween in inTweens do
			tween:Play()
		end

		selectButton.MouseLeave:Wait()

		for _, tween in outTweens do
			tween:Play()
		end
	end)
end

local function initialise(): nil
	for _, instance in CollectionService:GetTagged(TAG) do
		GuiComponent:Create(instance)
	end

	CollectionService:GetInstanceAddedSignal(TAG):Connect(function(instance)
		GuiComponent:Create(instance)
	end)
end

-- Initialisation
initialise()

return GuiComponent
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f0c</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXad3dde3be9ca48d89096effe344add75">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">RotatingElement</string>
								<string name="ScriptGuid">{406d328a-f016-4f70-83db-bcf4809149c0}</string>
								<ProtectedString name="Source"><![CDATA[--!strict

--// Services
local CollectionService = game:GetService("CollectionService")
local RunService = game:GetService("RunService")

--// Constants
local TAG = "RotatingElement"
local APPLIED_TAG = TAG .. "_Applied"

--// Types
type GuiComponent = {
}

--// Component
local GuiComponent: GuiComponent = {}

--// Render Update
local function update()
	local elements = CollectionService:GetTagged(TAG)
	if #elements == 0 then return end

	local t = tick()

	for _, element in elements do
		if not element:IsDescendantOf(game.Players) then continue end
		if not CollectionService:HasTag(element, APPLIED_TAG) then
			CollectionService:AddTag(element, APPLIED_TAG)
		end

		local speed = element:GetAttribute("RotateSpeed") or 1
		element.Rotation += speed
	end
end

--// Initialization
RunService:BindToRenderStep("RotateUIElements", Enum.RenderPriority.Last.Value, update)

return GuiComponent]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f0d</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXc215008d10bb44c5847bf21e8555fa6e">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SwingingElement</string>
								<string name="ScriptGuid">{b1f72441-69f0-4d55-ae03-f224da4ef96d}</string>
								<ProtectedString name="Source"><![CDATA[--!strict

--// Services
local CollectionService = game:GetService("CollectionService")
local RunService = game:GetService("RunService")

--// Constants
local TAG = "SwingingElement"
local APPLIED_TAG = TAG .. "_Applied"

--// Types
type GuiComponent = {
}

--// Component
local GuiComponent: GuiComponent = {}

--// Render Update
local function update()
	local elements = CollectionService:GetTagged(TAG)
	if #elements == 0 then return end

	local t = tick()

	for _, element in elements do
		if not element:IsDescendantOf(game.Players) then continue end
		if not CollectionService:HasTag(element, APPLIED_TAG) then
			CollectionService:AddTag(element, APPLIED_TAG)
		end
			
		local maxAngle = element:GetAttribute("MaxSwingAngle") or 30
		local offset = element:GetAttribute("SwingOffset") or 0
		local speed = element:GetAttribute("SwingSpeed") or 1
		local func = element:GetAttribute("SwingFunction") or "Default"
			
		local rot : number
		if (func == "Default") then
			rot = (math.sin(speed * t * 1.5) * math.cos(speed * 0.1 * t)) * maxAngle
		elseif (func == "Tan") then
			rot = (math.sin(speed * 0.25 * t) / math.cos(speed * 1 * t)) * maxAngle
		end
			
		element.Rotation = rot + offset
	end
end

--// Initialization
RunService:BindToRenderStep("SwingUIElements", Enum.RenderPriority.Last.Value, update)

return GuiComponent]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f0e</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXda9c7deb955647a7a06585cbbcae4a17">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Messages</string>
							<string name="ScriptGuid">{01f6c20b-7b17-49db-adc6-7ba658d4a4b9}</string>
							<ProtectedString name="Source"><![CDATA[--!strict

--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TextChatService = game:GetService("TextChatService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")

--// Remotes and events
local Remotes = require(script.Parent.Parent.Remotes)
local ServerMessageRemote: RemoteEvent = Remotes:GetRemote("RemoteEvent", "ServerMessage")
local LocalMessageRemote: RemoteEvent = Remotes:GetRemote("RemoteEvent", "LocalMessage")

--// Assets
local Assets = script:WaitForChild("Assets")
local SampleMessage = Assets:WaitForChild("SampleMessage")
local DefaultGui = Assets:WaitForChild("MessageGui")

--// Constants
local isClient = RunService:IsClient()
local defaultMessageDuration = 4

--// Colours
local errorMessageColor = Color3.fromRGB(255, 0, 10)
local successMessageColor = Color3.fromRGB(10, 225, 100)

--// Module
local MessageModule = {
	DefaultProperties = {
		Text = "";
		Font = Enum.Font.FredokaOne;
		FontSize = Enum.FontSize.Size96;
		Color = Color3.fromRGB(255, 255, 255);
	},

	ChatColors = {
		Color3.fromRGB(255, 0, 0),
		Color3.fromRGB(255, 150, 0),
		Color3.fromRGB(255, 255, 0),
		Color3.fromRGB(0, 255, 0),
		Color3.fromRGB(0, 255, 255),
		Color3.fromRGB(50, 150, 255),
		Color3.fromRGB(255, 50, 200),
		Color3.fromRGB(255, 0, 255),
	},
}

--// Server/Client Message
function MessageModule.ServerMessage(properties)
	if isClient then
		local textChannel = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXSystem")
		local color = properties.Color or Color3.fromRGB(255, 255, 255)
		local message = `<font color='#${color:ToHex()}'>${properties.Text}</font>`
		textChannel:DisplaySystemMessage(message)
	else
		ServerMessageRemote:FireAllClients(properties)
	end
end

--// Client-only Code
if isClient then
	local player = Players.LocalPlayer
	local playerGui = player:WaitForChild("PlayerGui")

	-- Setup GUI
	local gui : ScreenGui = playerGui:FindFirstChild("MessageGui") or DefaultGui:Clone()
	gui.Name = "MessageGui"
	gui.Parent = playerGui

	local messages: Frame = gui:WaitForChild("Messages")

	function MessageModule:LocalMessage(text: string, msgType: "Error" | "Success" | nil, color: Color3?, duration: number?)
		-- Search for existing frame with same message text
		local existingFrame: Frame? = nil
		for _, frame in messages:GetChildren() do
			if frame:IsA("Frame") and frame:FindFirstChild("TextLabel") then
				local label = frame.TextLabel
				local labelText = label.Text
				if labelText == text or string.sub(labelText, 1, #labelText - 3) == text then
					existingFrame = frame
					break
				end
			end
		end

		local newFrame = SampleMessage:Clone()
		local label = newFrame:WaitForChild("TextLabel")

		-- Color priority
		if msgType == "Error" then
			label.TextColor3 = errorMessageColor
		elseif msgType == "Success" then
			label.TextColor3 = successMessageColor
		else
			label.TextColor3 = color or Color3.fromRGB(255, 255, 255)
		end

		if existingFrame then
			local existingText = existingFrame.TextLabel.Text
			local count = tonumber(string.match(existingText, "X(%d+)$")) or 1
			label.Text = text .. " X" .. (count + 1)
			existingFrame:Destroy()
		else
			label.Text = text
		end

		newFrame.Parent = messages

		task.delay(duration or defaultMessageDuration, function()
			for i = 0, 1, 0.05 do
				if not newFrame:IsDescendantOf(messages) then return end
				label.TextTransparency = i
				if label:FindFirstChild("UIStroke") then
					label.UIStroke.Transparency = i
				end
				task.wait()
			end
			newFrame:Destroy()
		end)
	end
else
	function MessageModule:ShowMessage(...)
		LocalMessageRemote:FireClient(...)
	end
end

--// Initialization
local function initialise()
	if isClient then
		ServerMessageRemote.OnClientEvent:Connect(function(...)
			MessageModule.ServerMessage(...)
		end)

		LocalMessageRemote.OnClientEvent:Connect(function(...)
			MessageModule:LocalMessage(...)
		end)
	end
end

initialise()

return MessageModule]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f0f</UniqueId>
						</Properties>
						<Item class="Folder" referent="RBX8a906b10791243a494706a42f3388c62">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Assets</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00001f10</UniqueId>
							</Properties>
							<Item class="ScreenGui" referent="RBXc16547235a224970a75f9393932e005a">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipToDeviceSafeArea">true</bool>
									<bool name="DefinesCapabilities">false</bool>
									<int name="DisplayOrder">5</int>
									<bool name="Enabled">true</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">MessageGui</string>
									<bool name="ResetOnSpawn">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SafeAreaCompatibility">1</token>
									<token name="ScreenInsets">0</token>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002134</UniqueId>
									<token name="ZIndexBehavior">1</token>
								</Properties>
								<Item class="Frame" referent="RBX1231a57fa5094e19a12e9aac8832f327">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>1</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Messages</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.800000012</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>0.699999988</XS>
											<XO>0</XO>
											<YS>0.25</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002135</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="UIListLayout" referent="RBX43e8c3656981446988f06a6bde2e46e4">
										<Properties>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="DefinesCapabilities">false</bool>
											<token name="FillDirection">1</token>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<token name="HorizontalAlignment">1</token>
											<token name="HorizontalFlex">0</token>
											<token name="ItemLineAlignment">0</token>
											<string name="Name">UIListLayout</string>
											<UDim name="Padding">
												<S>0</S>
												<O>0</O>
											</UDim>
											<token name="SortOrder">2</token>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002136</UniqueId>
											<token name="VerticalAlignment">2</token>
											<token name="VerticalFlex">0</token>
											<bool name="Wraps">false</bool>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX54ed46b2e1964634bfbba084690410ad">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="BackgroundTransparency">0.300000012</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">SampleMessage</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0.25</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002137</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXedd4c2ad135747b684a105feb3ab1262">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
										</Font>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<string name="LocalizationMatchIdentifier"></string>
										<string name="LocalizationMatchedSourceText"></string>
										<int name="MaxVisibleGraphemes">-1</int>
										<string name="Name">TextLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<string name="OpenTypeFeatures"></string>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">This is a sample message (x1)</string>
										<Color3 name="TextColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<token name="TextDirection">0</token>
										<bool name="TextScaled">true</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002138</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="UIStroke" referent="RBX8c7c685812f145b89f452a1ff61bf042">
										<Properties>
											<token name="ApplyStrokeMode">0</token>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<UDim name="BorderOffset">
												<S>0</S>
												<O>0</O>
											</UDim>
											<token name="BorderStrokePosition">0</token>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<Color3 name="Color">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Enabled">true</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<token name="LineJoinMode">0</token>
											<string name="Name">UIStroke</string>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<float name="Thickness">1</float>
											<float name="Transparency">0</float>
											<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002139</UniqueId>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBXf5f863c1bc7d43118339f5db32df0a48">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Debounce</string>
						<string name="ScriptGuid">{83166f24-22a3-48cf-83df-4acc3c0a5d97}</string>
						<ProtectedString name="Source"><![CDATA[--!strict

local Debounce = {}

--[[
	USAGE:
	if not Debounce:Try("key", 1) then return end
	Debounce:Reset("key")
	if Debounce:IsActive("key") then ...
]]

function Debounce:Try(key: string, delay: number, callback: (() -> ())?): boolean
	if self[key] then return false end

	self[key] = true
	task.delay(delay, function()
		self[key] = nil
		if callback then callback() end
	end)

	return true
end

function Debounce:IsActive(key: string): boolean
	return self[key] == true
end

function Debounce:Reset(key: string)
	self[key] = nil
end

function Debounce:ClearAll()
	for k in pairs(self) do
		self[k] = nil
	end
end

return Debounce]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002219</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXe780629630714207b25f693ecadda340">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">TimedRewards</string>
						<string name="ScriptGuid">{4f0924dc-7730-4c43-8a8a-1898b5fec116}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local TimedRewards = {}

-- // Paths
TimedRewards.PlaytimeRewards = require(script.PlaytimeRewards)
TimedRewards.DailyRewards = require(script.DailyRewards)

return TimedRewards]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002593</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBX070b54ef85a346129f43061ef3cb3009">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">PlaytimeRewards</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002595</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX037a15661c7345ccbeac388c269fd853">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ReplicatedData</string>
						<string name="ScriptGuid">{a58665f4-73a2-4191-8481-a24cd4c8415c}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- // Services
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local DataRemoteEvent : RemoteEvent

-- // Constants
local DEBUG_CATEGORIES -- Categories that will print on update (for debugging)
	= {}

-- // Module // --
local ReplicatedData = {}

if RunService:IsServer() then
	-- Server code
	DataRemoteEvent = Instance.new("RemoteEvent", Remotes)
	DataRemoteEvent.Name = "GetData"
	
	ReplicatedData.Replications = {Public = {}, Private = {}}
	
	-- playertable is optional, if no table replicate to all
	function ReplicatedData:SetData(category, data, playerTable)
		if playerTable then
			-- Private data to a group of players
			table.insert(ReplicatedData.Replications.Private, {category, data, playerTable})
		else
			-- Public data
			ReplicatedData.Replications.Public[category] = data
		end
	end
	
	function ReplicatedData:UpdateData(category, data, playerTable)
		if playerTable then
			for _, localPlayer in ipairs(playerTable) do
				DataRemoteEvent:FireClient(localPlayer, category, data)
			end
		else
			DataRemoteEvent:FireAllClients(category, data)
		end
	end
	
	function ReplicatedData:RemoveData(category)
		if ReplicatedData.Replications.Public[category] then
			ReplicatedData.Replications.Public[category] = nil
		end
		for index, replicationInfo in ipairs(ReplicatedData.Replications.Private) do
			if replicationInfo[1] == category then
				table.remove(ReplicatedData.Replications.Private, index)
			end
		end
	end
	
	DataRemoteEvent.OnServerEvent:Connect(function(p)
		-- Return all public data
		for publicCategory, publicData in ipairs(ReplicatedData.Replications.Public) do
			DataRemoteEvent:FireClient(p, publicCategory, publicData)
		end
		-- Return their private data
		for _, replicationInfo in ipairs(ReplicatedData.Replications.Private) do
			local category, data, playerTable = unpack(replicationInfo)
			if table.find(playerTable, p) then
				DataRemoteEvent:FireClient(p, category, data)
			end
		end
	end)
	
	-- Main loop
	task.spawn(function()
		local publicComparisonCache = {} -- Category = cached_string
		local privateComparisonCache = {} -- Player = {Categot = cached_string}
		while task.wait(0.2) do
			
			-- Public data replicates to all
			for category, publicData in pairs(ReplicatedData.Replications.Public) do
				print("Public data:", category, publicData)
				local newEncodedString = HttpService:JSONEncode(publicData)
				if (not publicComparisonCache[category]) or newEncodedString ~= publicComparisonCache[category] then
					-- Update the data
					publicComparisonCache[category] = newEncodedString
					ReplicatedData:UpdateData(category, publicData, nil)
				end
			end
			
			-- Private data replicates to specific players
			for _, replicationInfo in pairs(ReplicatedData.Replications.Private) do
				local category, data, playerTable = unpack(replicationInfo)
				local newEncodedString = HttpService:JSONEncode(data)
				
				if not privateComparisonCache[playerTable] then
					privateComparisonCache[playerTable] = {}
				end
				
				local comparisonString = privateComparisonCache[playerTable][category]
				
				if (not comparisonString) or newEncodedString ~= comparisonString then
					-- Update the data
					privateComparisonCache[playerTable][category] = newEncodedString
					ReplicatedData:UpdateData(category, data, playerTable)
				end
			end
		end
	end)
else
	-- Client code
	DataRemoteEvent = Remotes:WaitForChild("GetData")
	
	local player = game.Players.LocalPlayer
	
	ReplicatedData.OnUpdate = Instance.new("BindableEvent")
	
	local dataContainer = {}
	
	function ReplicatedData:GetData(category, yield)
		if dataContainer[category] then
			return dataContainer[category]
		end
		
		if yield then
			local yieldStart = tick()
			repeat task.wait(0.2)
			until dataContainer[category] or (tick() - yieldStart) > 25
		end
		return dataContainer[category]
	end
	
	-- Keep track of which categories have been printed to the console
	local received_categories = {}
	
	DataRemoteEvent.OnClientEvent:Connect(function(category, data)
		if (not received_categories[category]) then
			task.delay(1.5, print, "Data recieved: Category =", category, " Data =", data)
		elseif (table.find(DEBUG_CATEGORIES, category)) then
			print("Data recieved: Category =", category, " Data =", data)
		end
		received_categories[category] = true
		
		ReplicatedData.OnUpdate:Fire(category, data)
		dataContainer[category] = data
	end)
	
	-- Get initial data
	DataRemoteEvent:FireServer()
end

return ReplicatedData]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000025c3</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBXec65424ec0db4a1f978a4ae60151b88a">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Config</string>
					<string name="ScriptGuid">{7b32783e-ae27-46d5-a6cf-286ef01b34aa}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
local Config = {}

-- // Type Defs
export type PlayerData = typeof(Config.PROFILE_TEMPLATE)
export type PlayerInfo = typeof(Config.INFO_TEMPLATE)

export type PlayerProfile = {
	Data: PlayerData,
	Info: PlayerInfo,
	Reconcile: (self: PlayerProfile) -> (),
	EndSession: (self: PlayerProfile) -> (),
	AddUserId: (self: PlayerProfile, userId: number) -> (),
	OnSessionEnd: RBXScriptSignal,
}

-- // CONFIGURATION // --
Config = {
	-- // Currency Data
	CURRENCY = require('@self/Currency'),

	-- // Player Profile Template
	PROFILE_TEMPLATE = {
		Stats = {
			Cash = 0;
		};
		Analytics = {
			TotalLogins = 0;
			TotalPlaytime = 0;
			LastLeaveTime = nil;
		};
	},
	INFO_TEMPLATE = {
		JoinTime = 0;
		Multipliers = {};
	},
};

return Config]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7a5be8c3b493ddb808a513760000176c</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBXaed730aa2503487497424abca58e5e5f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Currency</string>
						<string name="ScriptGuid">{6f1f2108-5b98-468a-a5a8-dc5e6443e4ad}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local CurrencyConfig : { Types: { [string]: Currency } } = { Types = {} }

-- // Type Defs
export type Currency = {
	Name : string,
	Symbol : string,
	RebirthMultiplier : number,
	UseLeaderstats : boolean,
	UseFriendBoost : boolean,
	Collectables : {
		{
			Name : string,
			Value : number,
			Model : Model,
			Sound : Sound,
		}
	},
	Get : ({}) -> number,
	Update : ({}, number) -> nil
}

-- // Assets
local CurrencyModels = script:WaitForChild("Models")
local CurrencySounds = script:WaitForChild("Sounds")

-- // Configuration
CurrencyConfig.Types = {
	Coins = {
        Name = "Coins",
        Symbol = "₵",
        UseFriendBoost = true,
        RebirthMultiplier = 1.25,
        UseLeaderstats = true,
        Collectables = {
            [1] = {
                Name = "Coin",
                Value = 1,
                Model = CurrencyModels:WaitForChild("Coin"),
                Sound = CurrencySounds:WaitForChild("CoinPickup"),
            },
        },
        Get = function(profile, currencyID)
            return profile.Data.Stats.Cash or 0
        end,
        Update = function(profile, amount)
            profile.Data.Stats.Cash += amount
        end,
	},
	Rebirths = {
        Name = "Rebirths",
        Symbol = "♻️",
        UseFriendBoost = true,
        RebirthMultiplier = 1.25,
        UseLeaderstats = true,
        Collectables = {
            [1] = {
                Name = "Rebirth",
                Value = 1,
                Model = CurrencyModels:WaitForChild("Coin"),
                Sound = CurrencySounds:WaitForChild("CoinPickup"),
            },
        },
        Get = function(profile, currencyID)
            return profile.Data.Stats.Rebirths or 0
        end,
        Update = function(profile, amount)
            profile.Data.Stats.Rebirths += amount
        end,
	},
}

-- // Public API
function CurrencyConfig:GetCurrencyFromID(currencyID : string): Currency?
    if not (currencyID and self.Types[currencyID]) then return nil end
    return self.Types[currencyID]
end

function CurrencyConfig:GetCurrencyText(currencyID : string, amount : number): string
    if not (currencyID and amount) then return "" end
    
    local text = tostring(amount)

    -- Check if this stat has its own currency type
    local currencyInfo = self:GetCurrencyFromID(currencyID)
    if (currencyInfo) then
        local symbol = currencyInfo.Symbol
        local name = currencyInfo.Name

        if (symbol) then
            text = string.format("%s%s", symbol, text)
        else
            text = string.format("%s %s", text, name)
        end
    end

    return text
end

return CurrencyConfig]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">7a5be8c3b493ddb808a5137600001779</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBXd97aecee5e964eb3b10e25f6b2c9a89f">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Models</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5be8c3b493ddb808a513760000177b</UniqueId>
						</Properties>
						<Item class="Model" referent="RBXd01573ba2aa7464e8a5af029b2a39955">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">Coin</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">RBXd8e18dbb2d424baa9caa02c5f53e0f20</Ref>
								<float name="ScaleFactor">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5be8c3b493ddb808a5137600001799</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>-12.5</X>
										<Y>0.5</Y>
										<Z>-5.89996338</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Part" referent="RBXd8e18dbb2d424baa9caa02c5f53e0f20">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AudioCanCollide">true</bool>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-12.5</X>
										<Y>0.5</Y>
										<Z>-5.89996338</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4280374457</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="EnableFluidForces">true</bool>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Part</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">1</float>
									<UniqueId name="UniqueId">7a5be8c3b493ddb808a513760000179a</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
								<Item class="BillboardGui" referent="RBX3a0120b1bbc54d5e9f0c76ce851c7e0f">
									<Properties>
										<bool name="Active">true</bool>
										<Ref name="Adornee">RBXd8e18dbb2d424baa9caa02c5f53e0f20</Ref>
										<bool name="AlwaysOnTop">true</bool>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<float name="Brightness">1</float>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">true</bool>
										<bool name="DefinesCapabilities">false</bool>
										<float name="DistanceLowerLimit">0</float>
										<float name="DistanceStep">0</float>
										<float name="DistanceUpperLimit">-1</float>
										<bool name="Enabled">true</bool>
										<Vector3 name="ExtentsOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<Vector3 name="ExtentsOffsetWorldSpace">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<float name="LightInfluence">0</float>
										<float name="MaxDistance">INF</float>
										<string name="Name">BillboardGui</string>
										<Ref name="PlayerToHideFrom">null</Ref>
										<bool name="ResetOnSpawn">true</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<UDim2 name="Size">
											<XS>1.5</XS>
											<XO>0</XO>
											<YS>1.5</YS>
											<YO>0</YO>
										</UDim2>
										<Vector2 name="SizeOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<int64 name="SourceAssetId">-1</int64>
										<Vector3 name="StudsOffset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<Vector3 name="StudsOffsetWorldSpace">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a513760000179b</UniqueId>
										<token name="ZIndexBehavior">1</token>
									</Properties>
									<Item class="ImageLabel" referent="RBXe5ea313974cc4b0c96037db96da25792">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<BinaryString name="AttributesSerialize"></BinaryString>
											<bool name="AutoLocalize">true</bool>
											<token name="AutomaticSize">0</token>
											<Color3 name="BackgroundColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">
												<R>0</R>
												<G>0</G>
												<B>0</B>
											</Color3>
											<token name="BorderMode">0</token>
											<int name="BorderSizePixel">0</int>
											<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
											<bool name="ClipsDescendants">false</bool>
											<bool name="DefinesCapabilities">false</bool>
											<bool name="Draggable">false</bool>
											<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
											<Content name="Image"><url>rbxassetid://109226830882785</url></Content>
											<Color3 name="ImageColor3">
												<R>1</R>
												<G>1</G>
												<B>1</B>
											</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<bool name="Interactable">true</bool>
											<int name="LayoutOrder">0</int>
											<string name="Name">ImageLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<token name="ResampleMode">0</token>
											<Ref name="RootLocalizationTable">null</Ref>
											<float name="Rotation">0</float>
											<token name="ScaleType">3</token>
											<bool name="Selectable">false</bool>
											<token name="SelectionBehaviorDown">0</token>
											<token name="SelectionBehaviorLeft">0</token>
											<token name="SelectionBehaviorRight">0</token>
											<token name="SelectionBehaviorUp">0</token>
											<bool name="SelectionGroup">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<int name="SelectionOrder">0</int>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<float name="SliceScale">1</float>
											<int64 name="SourceAssetId">-1</int64>
											<BinaryString name="Tags"></BinaryString>
											<UDim2 name="TileSize">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<UniqueId name="UniqueId">7a5be8c3b493ddb808a513760000179c</UniqueId>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX985aaec9c5b24998a13fc7e86a585ada">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Sounds</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5be8c3b493ddb808a513760000177c</UniqueId>
						</Properties>
						<Item class="Sound" referent="RBX26f92739f4d94daa80d7dd19c29943c8">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="IsMutedForCapture">false</bool>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">CoinPickup</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<float name="RollOffMaxDistance">10000</float>
								<float name="RollOffMinDistance">10</float>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxassetid://120672563582350</url></Content>
								<int64 name="SourceAssetId">120672563582350</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<UniqueId name="UniqueId">7a5be8c3b493ddb808a513760000179d</UniqueId>
								<float name="Volume">0.5</float>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="ServerScriptService" referent="4">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000376</UniqueId>
		</Properties>
		<Item class="Folder" referent="RBX7fd15d559b484e7eb95f3db467724760">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Server</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000025be</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBX5ff15e16e78f4018a268d43ad842d84c">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Packages</string>
					<string name="ScriptGuid">{0a0db0fd-ba4f-40a4-849b-4466fb8e3d9f}</string>
					<ProtectedString name="Source"><![CDATA[--!strict

local Packages = {}

-- // Paths
Packages.DataManager = require(script.DataManager)
Packages.TimedRewards = require(script.TimedRewards)

return Packages]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c00002596</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBXb46bebbe2b154bbb851f1617e8924eb8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">TimedRewards</string>
						<string name="ScriptGuid">{d8b25353-95fa-497c-9d34-5d785c6762a6}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local TimedRewards = {}

-- // Paths
-- TimedRewards.PlaytimeRewards = require(script.PlaytimeRewards)
-- TimedRewards.DailyRewards = require(script.DailyRewards)

return TimedRewards]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c0000259b</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBXe7e717eb7a8a484e9d4ed086532282b8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">PlaytimeRewards</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c0000259c</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBXdeb49a0f18a34ecfbaa6b1257547e447">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DataManager</string>
						<string name="ScriptGuid">{80622ef5-9fb3-4593-9de8-25fc9e421b35}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- Uses ProfileStore and ReplicatedData to save data and enable server/client communication

--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

--// Packages
local ProfileStore = require(script:WaitForChild("ProfileStore"))

local SharedPackages = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Packages"))
local ReplicatedData = SharedPackages.ReplicatedData

local Config = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Config"))

--// Templates
local PROFILE_TEMPLATE = Config.PROFILE_TEMPLATE
local INFO_TEMPLATE = Config.INFO_TEMPLATE

--// ProfileStore Setup
local PlayerStore = ProfileStore.New("PlayerStore", PROFILE_TEMPLATE)
local Profiles: { [Player]: Config.PlayerProfile } = {}

--// Module
local DataManager = {}

-- Deep clone utility
local function deepClone(original)
	local copy = {}
	for k, v in pairs(original) do
		if typeof(v) == "table" then
			copy[k] = deepClone(v)
		else
			copy[k] = v
		end
	end
	return copy
end

local function deepReconcile(target: {}, template: {})
	for k, v in pairs(template) do
		if typeof(v) == "table" and typeof(target[k]) == "table" then
			deepReconcile(target[k], v)
		elseif target[k] == nil then
			target[k] = v
		end
	end
end

--// Private: Called when a profile is loaded
local function onProfileLoad(player: Player, profile: Config.PlayerProfile)
	-- Initialise Info
	profile.Info = deepClone(INFO_TEMPLATE)

	-- Extra temporary values
	profile.Info.JoinTime = os.time()
	profile.Info.ClaimedGifts = {}

	-- Analytics
	profile.Data.Analytics.TotalLogins += 1

	-- Save join time locally for playtime calc
	profile.Info.JoinTime = os.time()

	-- Replicate to client
	ReplicatedData:SetData("PlayerData", profile.Data, { player })
	ReplicatedData:SetData("PlayerInfo", profile.Info, { player })
	ReplicatedData:SetData("Stats", profile.Data.Stats, { player })
end

--// Public API

function DataManager:GetPlayerProfile(player: Player, yield: boolean?): Config.PlayerProfile?
	if Profiles[player] then return Profiles[player] end

	if yield then
		repeat task.wait(0.1)
		until not player.Parent or Profiles[player]
	end

	return Profiles[player]
end

function DataManager:GetPlayerData(player: Player, yield: boolean?): {}?
	local profile = self:GetPlayerProfile(player, yield)
	return profile and profile.Data or nil
end

function DataManager:ResetData(player: Player): boolean
	local profile = self:GetPlayerProfile(player)
	if not profile then return false end

	profile.Data = {}
	profile:Reconcile()
	onProfileLoad(player, profile)

	profile.Data.Stats.Cash = 99999999 -- dev override
	warn("Reset data for", player)
	return true
end

--// Modular Support: Reconcile a new section into existing data
function DataManager:ReconcileProfileSection(player: Player, sectionType: "Info" | "Data", sectionName: string, template: {}): boolean
	local profile = self:GetPlayerProfile(player)
	if not profile then return false end

	if sectionType == "Info" then
		profile.Info[sectionName] = profile.Info[sectionName] or {}
		deepReconcile(profile.Info[sectionName], template)
		ReplicatedData:SetData("PlayerInfo", profile.Info, { player })

	elseif sectionType == "Data" then
		profile.Data[sectionName] = profile.Data[sectionName] or {}
		deepReconcile(profile.Data[sectionName], template)
		ReplicatedData:SetData("PlayerData", profile.Data, { player })
	end

	return true
end

--// Events

function DataManager:LoadPlayerProfile(player: Player): Config.PlayerProfile?
	local profile = PlayerStore:StartSessionAsync(tostring(player.UserId), {
		Cancel = function()
			return not player:IsDescendantOf(Players)
		end,
	})

	if not profile then
		player:Kick("Profile load failed. Please rejoin.")
		return nil
	end

	profile:AddUserId(player.UserId)
	profile:Reconcile()

	profile.OnSessionEnd:Connect(function()
		Profiles[player] = nil
		player:Kick("Profile session ended. Please rejoin.")
	end)

	if player:IsDescendantOf(Players) then
		onProfileLoad(player, profile)
		Profiles[player] = profile
		return profile
	else
		profile:EndSession()
	end

	return nil
end

function DataManager:ReleasePlayerProfile(player: Player)
	local profile = Profiles[player]
	if profile then
		profile.Data.Analytics.LastLeaveTime = os.time()
		profile:EndSession()
	end
end

return DataManager]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000025b5</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXbc263b56ecb743e9869549209a1ac18a">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">ProfileStore</string>
							<string name="ScriptGuid">{1125e390-6042-4992-b70d-05af03244add}</string>
							<ProtectedString name="Source"><![CDATA[--[[
MAD STUDIO (by loleris)

-[ProfileStore]---------------------------------------

	Periodic DataStore saving solution with session locking
	
	WARNINGS FOR "Profile.Data" VALUES:
	 	! Do not create numeric tables with gaps - attempting to store such tables will result in an error.
		! Do not create mixed tables (some values indexed by number and others by a string key)
			- only numerically indexed  data will be stored.
		! Do not index tables by anything other than numbers and strings.
		! Do not reference Roblox Instances
		! Do not reference userdata (Vector3, Color3, CFrame...) - Serialize userdata before referencing
		! Do not reference functions
		
	Members:
	
		ProfileStore.IsClosing          [bool]
			-- Set to true after a game:BindToClose() trigger
			
		ProfileStore.IsCriticalState    [bool]
			-- Set to true when ProfileStore experiences too many consecutive errors
		
		ProfileStore.OnError            [Signal] (message, store_name, profile_key)
			-- Most ProfileStore errors will be caught and passed to this signal
			
		ProfileStore.OnOverwrite        [Signal] (store_name, profile_key)
			-- Triggered when a DataStore key was likely used to store data that wasn't
			a ProfileStore profile or the ProfileStore structure was invalidly manually
			altered for that DataStore key
			
		ProfileStore.OnCriticalToggle   [Signal] (is_critical)
			-- Triggered when ProfileStore experiences too many consecutive errors
		
		ProfileStore.DataStoreState     [string] ("NotReady", "NoInternet", "NoAccess", "Access")
			-- This value resembles ProfileStore's access to the DataStore; The value starts
			as "NotReady" and will eventually change to one of the other 3 possible values.
	
	Functions:
	
		ProfileStore.New(store_name, template?) --> [ProfileStore]
			store_name   [string] -- DataStore name
			template     [table] or nil -- Profiles will default to given table (hard-copy) when no data was saved previously
			
		ProfileStore.SetConstant(name, value)
			name    [string]
			value   [number]
				
	Members [ProfileStore]:
	
		ProfileStore.Mock   [ProfileStore]
			-- Reflection of ProfileStore methods, but the methods will now query a mock
			DataStore with no relation to the real DataStore
			
		ProfileStore.Name   [string]
		
	Methods [ProfileStore]:
	
		ProfileStore:StartSessionAsync(profile_key, params?) --> [Profile] or nil
			profile_key [string] -- DataStore key
			params      nil or [table]: -- Custom params; E.g. {Steal = true}
				{
					Steal = true, -- Pass this to disregard an existing session lock
					Cancel = fn() -> (boolean), -- Pass this to create a request cancel condition.
						-- If the cancel function returns true, ProfileStore will stop trying to
						-- start the session and return nil
				}
			
		ProfileStore:MessageAsync(profile_key, message) --> is_success [bool]
			profile_key [string] -- DataStore key
			message     [table] -- Data to be messaged to the profile
			
		ProfileStore:GetAsync(profile_key, version?) --> [Profile] or nil
			-- Reads a profile without starting a session - will not autosave
			profile_key   [string] -- DataStore key
			version       nil or [string] -- DataStore key version

		ProfileStore:VersionQuery(profile_key, sort_direction?, min_date?, max_date?) --> [VersionQuery]
			profile_key      [string]
			sort_direction   nil or [Enum.SortDirection]
			min_date         nil or [DateTime]
			max_date         nil or [DateTime]
			
		ProfileStore:RemoveAsync(profile_key) --> is_success [bool]
			-- Completely removes profile data from the DataStore / mock DataStore with no way to recover it.

	Methods [VersionQuery]:

		VersionQuery:NextAsync() --> [Profile] or nil -- (Yields)
			-- Returned profile is similar to profiles returned by ProfileStore:GetAsync()
		
	Members [Profile]:
	
		Profile.Data               [table]
			-- When the profile is active changes to this table are guaranteed to be saved
		Profile.LastSavedData      [table] (Read-only)
			-- Last snapshot of "Profile.Data" that has been successfully saved to the DataStore;
			Useful for proper developer product purchase receipt handling
		
		Profile.FirstSessionTime   [number] (Read-only)
			-- os.time() timestamp of the first profile session
			
		Profile.SessionLoadCount   [number] (Read-only) -- Amount of times a session was started for this profile
			
		Profile.Session            [table] (Read-only) {PlaceId = number, JobId = string} / nil
			-- Set to a table if this profile is in use by a server; nil if released

		Profile.RobloxMetaData     [table] -- Writable table that gets saved automatically and once the profile is released
		Profile.UserIds            [table] -- (Read-only) -- {user_id [number], ...} -- User ids associated with this profile

		Profile.KeyInfo            [DataStoreKeyInfo] -- Changes before OnAfterSave signal
		
		Profile.OnSave             [Signal] ()
			-- Triggered right before changes to Profile.Data are saved to the DataStore
			
		Profile.OnLastSave         [Signal] (reason [string]: "Manual", "External", "Shutdown")
			-- Triggered right before changes to Profile.Data are saved to the DataStore
			for the last time; A reason is provided for the last save:
				- "Manual"   - Profile:EndSession() was called
				- "Shutdown" - The server that has ownership of this profile is shutting down
				- "External" - Another server has started a session for this profile
			Note that this event will not trigger for when a profile session is ended by
			another server trying to take ownership of the session - this is impossible to
			do without compromising on ProfileStore's speed.
			
		Profile.OnSessionEnd       [Signal] ()
			-- Triggered when the profile session is terminated on this server
		
		Profile.OnAfterSave        [Signal] (last_saved_data)
			-- Triggered after a successful save
			last_saved_data [table] -- Profile.LastSavedData
			
		Profile.ProfileStore       [ProfileStore] -- ProfileStore object this profile belongs to
		Profile.Key                [string] -- DataStore key
		
	Methods [Profile]:
	
		Profile:IsActive() --> [bool] -- If "true" is returned, changes to Profile.Data are guaranteed to save;
			This guarantee is only valid until code yields (e.g. task.wait() is used).
			
		Profile:Reconcile() -- Fills in missing (nil) [string_key] = [value] pairs to the Profile.Data structure
			from the "template" argument that was passed to "ProfileStore.New()"
			
		Profile:EndSession() -- Call after the server has finished working with this profile
			e.g., after the player leaves (Profile object will become inactive)

		Profile:AddUserId(user_id) -- Associates user_id with profile (GDPR compliance)
			user_id   [number]

		Profile:RemoveUserId(user_id) -- Unassociates user_id with profile (safe function)
			user_id   [number]
			
		Profile:MessageHandler(fn) -- Sets a message handler for this profile
			fn [function] (message [table], processed [function]())
			-- The handler function receives a message table and a callback function;
			The callback function is to be called when a message has been processed
			- this will discard the message from the profile message cache; If the
			callback function is not called, other message handlers will also be triggered
			with unprocessed message data.
			
		Profile:Save() -- If the profile session is still active makes an UpdateAsync call
			to the DataStore to immediately save profile data

		Profile:SetAsync() -- Forcefully saves changes to the profile; Only for profiles
			loaded with ProfileStore:GetAsync() or ProfileStore:VersionQuery()
		
--]]

local AUTO_SAVE_PERIOD = 300 -- (Seconds) Time between when changes to a profile are saved to the DataStore
local LOAD_REPEAT_PERIOD = 10 -- (Seconds) Time between successive profile reads when handling a session conflict
local FIRST_LOAD_REPEAT = 5 -- (Seconds) Time between first and second profile read when handling a session conflict
local SESSION_STEAL = 40 -- (Seconds) Time until a session conflict is resolved with the waiting server stealing the session
local ASSUME_DEAD = 630 -- (Seconds) If a profile hasn't had updates for this long, quickly assume an active session belongs to a crashed server
local START_SESSION_TIMEOUT = 120 -- (Seconds) If a session can't be started for a profile for this long, stop repeating calls to the DataStore

local CRITICAL_STATE_ERROR_COUNT = 5 -- Assume critical state if this many issues happen in a short amount of time
local CRITICAL_STATE_ERROR_EXPIRE = 120 -- (Seconds) Individual issue expiration
local CRITICAL_STATE_EXPIRE = 120 -- (Seconds) Critical state expiration

local MAX_MESSAGE_QUEUE = 1000 -- Max messages saved in a profile that were sent using "ProfileStore:MessageAsync()"

----- Dependencies -----

-- local Util = require(game.ReplicatedStorage.Shared.Util)
-- local Signal = Util.Signal

local Signal do

	local FreeRunnerThread

	--[[
		Yield-safe coroutine reusing by stravant;
		Sources:
		https://devforum.roblox.com/t/lua-signal-class-comparison-optimal-goodsignal-class/1387063
		https://gist.github.com/stravant/b75a322e0919d60dde8a0316d1f09d2f
	--]]

	local function AcquireRunnerThreadAndCallEventHandler(fn, ...)
		local acquired_runner_thread = FreeRunnerThread
		FreeRunnerThread = nil
		fn(...)
		-- The handler finished running, this runner thread is free again.
		FreeRunnerThread = acquired_runner_thread
	end

	local function RunEventHandlerInFreeThread(...)
		AcquireRunnerThreadAndCallEventHandler(...)
		while true do
			AcquireRunnerThreadAndCallEventHandler(coroutine.yield())
		end
	end

	local Connection = {}
	Connection.__index = Connection

	local SignalClass = {}
	SignalClass.__index = SignalClass

	function Connection:Disconnect()

		if self.is_connected == false then
			return
		end

		local signal = self.signal
		self.is_connected = false
		signal.listener_count -= 1

		if signal.head == self then
			signal.head = self.next
		else
			local prev = signal.head
			while prev ~= nil and prev.next ~= self do
				prev = prev.next
			end
			if prev ~= nil then
				prev.next = self.next
			end
		end

	end

	function SignalClass.New()

		local self = {
			head = nil,
			listener_count = 0,
		}
		setmetatable(self, SignalClass)

		return self

	end

	function SignalClass:Connect(listener: (...any) -> ())

		if type(listener) ~= "function" then
			error(`[{script.Name}]: \"listener\" must be a function; Received {typeof(listener)}`)
		end

		local connection = {
			listener = listener,
			signal = self,
			next = self.head,
			is_connected = true,
		}
		setmetatable(connection, Connection)

		self.head = connection
		self.listener_count += 1

		return connection

	end

	function SignalClass:GetListenerCount(): number
		return self.listener_count
	end

	function SignalClass:Fire(...)
		local item = self.head
		while item ~= nil do
			if item.is_connected == true then
				if not FreeRunnerThread then
					FreeRunnerThread = coroutine.create(RunEventHandlerInFreeThread)
				end
				task.spawn(FreeRunnerThread, item.listener, ...)
			end
			item = item.next
		end
	end

	function SignalClass:Wait()
		local co = coroutine.running()
		local connection
		connection = self:Connect(function(...)
			connection:Disconnect()
			task.spawn(co, ...)
		end)
		return coroutine.yield()
	end

	Signal = table.freeze({
		New = SignalClass.New,
	})

end

----- Private -----

local ActiveSessionCheck = {} -- {[session_token] = profile, ...}
local AutoSaveList = {} -- {profile, ...} -- Loaded profile table which will be circularly auto-saved
local IssueQueue = {} -- {issue_time, ...}

local DataStoreService = game:GetService("DataStoreService")
local MessagingService = game:GetService("MessagingService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

local PlaceId = game.PlaceId
local JobId = game.JobId

local AutoSaveIndex = 1 -- Next profile to auto save
local LastAutoSave = os.clock()

local LoadIndex = 0

local ActiveProfileLoadJobs = 0 -- Number of active threads that are loading in profiles
local ActiveProfileSaveJobs = 0 -- Number of active threads that are saving profiles

local CriticalStateStart = 0 -- os.clock()

local IsStudio = RunService:IsStudio()
local DataStoreState: "NotReady" | "NoInternet" | "NoAccess" | "Access" = "NotReady"

local MockStore = {}
local UserMockStore = {}
local MockFlag = false

local OnError = Signal.New() -- (message, store_name, profile_key)
local OnOverwrite = Signal.New() -- (store_name, profile_key)

local UpdateQueue = { -- For stability sake, we won't do UpdateAsync calls for the same key until all previous calls finish
	--[[
		[session_token] = {
			coroutine, ...
		},
		...
	--]]
}

local function WaitInUpdateQueue(session_token) --> next_in_queue()

	local is_first = false

	if UpdateQueue[session_token] == nil then
		is_first = true
		UpdateQueue[session_token] = {}
	end

	local queue = UpdateQueue[session_token]

	if is_first == false then
		table.insert(queue, coroutine.running())
		coroutine.yield()
	end

	return function()
		local next_co = table.remove(queue, 1)
		if next_co ~= nil then
			coroutine.resume(next_co)
		else
			UpdateQueue[session_token] = nil
		end
	end

end

local function SessionToken(store_name, profile_key, is_mock)

	local session_token = "L_" -- Live

	if is_mock == true then
		session_token = "U_" -- User mock
	elseif DataStoreState ~= "Access" then
		session_token = "M_" -- Mock, cause no DataStore access
	end

	session_token ..= store_name .. "\0" .. profile_key

	return session_token

end

local function DeepCopyTable(t)
	local copy = {}
	for key, value in pairs(t) do
		if type(value) == "table" then
			copy[key] = DeepCopyTable(value)
		else
			copy[key] = value
		end
	end
	return copy
end

local function ReconcileTable(target, template)
	for k, v in pairs(template) do
		if type(k) == "string" then -- Only string keys will be reconciled
			if target[k] == nil then
				if type(v) == "table" then
					target[k] = DeepCopyTable(v)
				else
					target[k] = v
				end
			elseif type(target[k]) == "table" and type(v) == "table" then
				ReconcileTable(target[k], v)
			end
		end
	end
end

local function RegisterError(error_message, store_name, profile_key) -- Called when a DataStore API call errors
	warn(`[{script.Name}]: DataStore API error (STORE:{store_name}; KEY:{profile_key}) - {tostring(error_message)}`)
	table.insert(IssueQueue, os.clock()) -- Adding issue time to queue
	OnError:Fire(tostring(error_message), store_name, profile_key)
end

local function RegisterOverwrite(store_name, profile_key) -- Called when a corrupted profile is loaded
	warn(`[{script.Name}]: Invalid profile was overwritten (STORE:{store_name}; KEY:{profile_key})`)
	OnOverwrite:Fire(store_name, profile_key)
end

local function NewMockDataStoreKeyInfo(params)

	local version_id_string = tostring(params.VersionId or 0)
	local meta_data = params.MetaData or {}
	local user_ids = params.UserIds or {}

	return {
		CreatedTime = params.CreatedTime,
		UpdatedTime = params.UpdatedTime,
		Version = string.rep("0", 16) .. "."
			.. string.rep("0", 10 - string.len(version_id_string)) .. version_id_string
			.. "." .. string.rep("0", 16) .. "." .. "01",

		GetMetadata = function()
			return DeepCopyTable(meta_data)
		end,

		GetUserIds = function()
			return DeepCopyTable(user_ids)
		end,
	}

end

local function MockUpdateAsync(mock_data_store, profile_store_name, key, transform_function, is_get_call) --> loaded_data, key_info

	local profile_store = mock_data_store[profile_store_name]

	if profile_store == nil then
		profile_store = {}
		mock_data_store[profile_store_name] = profile_store
	end

	local epoch_time = math.floor(os.time() * 1000)
	local mock_entry = profile_store[key]
	local mock_entry_was_nil = false

	if mock_entry == nil then
		mock_entry_was_nil = true
		if is_get_call ~= true then
			mock_entry = {
				Data = nil,
				CreatedTime = epoch_time,
				UpdatedTime = epoch_time,
				VersionId = 0,
				UserIds = {},
				MetaData = {},
			}
			profile_store[key] = mock_entry
		end
	end

	local mock_key_info = mock_entry_was_nil == false and NewMockDataStoreKeyInfo(mock_entry) or nil

	local transform, user_ids, roblox_meta_data = transform_function(mock_entry and mock_entry.Data, mock_key_info)

	if transform == nil then
		return nil
	else
		if mock_entry ~= nil and is_get_call ~= true then
			mock_entry.Data = DeepCopyTable(transform)
			mock_entry.UserIds = DeepCopyTable(user_ids or {})
			mock_entry.MetaData = DeepCopyTable(roblox_meta_data or {})
			mock_entry.VersionId += 1
			mock_entry.UpdatedTime = epoch_time
		end

		return DeepCopyTable(transform), mock_entry ~= nil and NewMockDataStoreKeyInfo(mock_entry) or nil
	end

end

local function UpdateAsync(profile_store, profile_key, transform_params, is_user_mock, is_get_call, version) --> loaded_data, key_info
	--transform_params = {
	--	ExistingProfileHandle = function(latest_data),
	--	MissingProfileHandle = function(latest_data),
	--	EditProfile = function(lastest_data),
	--}

	local loaded_data, key_info

	local next_in_queue = WaitInUpdateQueue(SessionToken(profile_store.Name, profile_key, is_user_mock))

	local success = true

	local success, error_message = pcall(function()
		local transform_function = function(latest_data)

			local missing_profile = false
			local overwritten = false
			local global_updates = {0, {}}

			if latest_data == nil then

				missing_profile = true

			elseif type(latest_data) ~= "table" then

				missing_profile = true
				overwritten = true

			else

				if type(latest_data.Data) == "table" and type(latest_data.MetaData) == "table" and type(latest_data.GlobalUpdates) == "table" then

					-- Regular profile structure detected:

					latest_data.WasOverwritten = false -- Must be set to false if set previously
					global_updates = latest_data.GlobalUpdates

					if transform_params.ExistingProfileHandle ~= nil then
						transform_params.ExistingProfileHandle(latest_data)
					end

				elseif latest_data.Data == nil and latest_data.MetaData == nil and type(latest_data.GlobalUpdates) == "table" then

					-- Regular structure not detected, but GlobalUpdate data exists:

					latest_data.WasOverwritten = false -- Must be set to false if set previously
					global_updates = latest_data.GlobalUpdates or global_updates
					missing_profile = true

				else

					missing_profile = true
					overwritten = true

				end

			end

			-- Profile was not created or corrupted and no GlobalUpdate data exists:
			if missing_profile == true then
				latest_data = {
					-- Data = nil,
					-- MetaData = nil,
					GlobalUpdates = global_updates,
				}
				if transform_params.MissingProfileHandle ~= nil then
					transform_params.MissingProfileHandle(latest_data)
				end
			end

			-- Editing profile:
			if transform_params.EditProfile ~= nil then
				transform_params.EditProfile(latest_data)
			end

			-- Invalid data handling (Silently override with empty profile)
			if overwritten == true then
				latest_data.WasOverwritten = true -- Temporary tag that will be removed on first save
			end

			return latest_data, latest_data.UserIds, latest_data.RobloxMetaData
		end

		if is_user_mock == true then -- Used when the profile is accessed through ProfileStore.Mock

			loaded_data, key_info = MockUpdateAsync(UserMockStore, profile_store.Name, profile_key, transform_function, is_get_call)
			task.wait() -- Simulate API call yield

		elseif DataStoreState ~= "Access" then -- Used when API access is disabled

			loaded_data, key_info = MockUpdateAsync(MockStore, profile_store.Name, profile_key, transform_function, is_get_call)
			task.wait() -- Simulate API call yield

		else

			if is_get_call == true then

				if version ~= nil then

					local success, error_message = pcall(function()
						loaded_data, key_info = profile_store.data_store:GetVersionAsync(profile_key, version)
					end)

					if success == false and type(error_message) == "string" and string.find(error_message, "not valid") ~= nil then
						warn(`[{script.Name}]: Passed version argument is not valid; Traceback:\n` .. debug.traceback())
					end

				else

					loaded_data, key_info = profile_store.data_store:GetAsync(profile_key)

				end

				loaded_data = transform_function(loaded_data)

			else

				loaded_data, key_info = profile_store.data_store:UpdateAsync(profile_key, transform_function)

			end

		end

	end)

	next_in_queue()

	if success == true and type(loaded_data) == "table" then
		-- Invalid data handling:
		if loaded_data.WasOverwritten == true and is_get_call ~= true then
			RegisterOverwrite(
				profile_store.Name,
				profile_key
			)
		end
		-- Return loaded_data:
		return loaded_data, key_info
	else
		-- Error handling:
		RegisterError(
			error_message or "Undefined error",
			profile_store.Name,
			profile_key
		)
		-- Return nothing:
		return nil
	end

end

local function IsThisSession(session_tag)
	return session_tag[1] == PlaceId and session_tag[2] == JobId
end

local function ReadMockFlag(): boolean
	local is_mock = MockFlag
	MockFlag = false
	return is_mock
end

local function WaitForStoreReady(profile_store)
	while profile_store.is_ready == false do
		task.wait()
	end
end

local function AddProfileToAutoSave(profile)

	ActiveSessionCheck[profile.session_token] = profile

	-- Add at AutoSaveIndex and move AutoSaveIndex right:

	table.insert(AutoSaveList, AutoSaveIndex, profile)

	if #AutoSaveList > 1 then
		AutoSaveIndex = AutoSaveIndex + 1
	elseif #AutoSaveList == 1 then
		-- First profile created - make sure it doesn't get immediately auto saved:
		LastAutoSave = os.clock()
	end

end

local function RemoveProfileFromAutoSave(profile)

	ActiveSessionCheck[profile.session_token] = nil

	local auto_save_index = table.find(AutoSaveList, profile)

	if auto_save_index ~= nil then
		table.remove(AutoSaveList, auto_save_index)
		if auto_save_index < AutoSaveIndex then
			AutoSaveIndex = AutoSaveIndex - 1 -- Table contents were moved left before AutoSaveIndex so move AutoSaveIndex left as well
		end
		if AutoSaveList[AutoSaveIndex] == nil then -- AutoSaveIndex was at the end of the AutoSaveList - reset to 1
			AutoSaveIndex = 1
		end
	end

end

local function SaveProfileAsync(profile, is_ending_session, is_overwriting, last_save_reason)

	if type(profile.Data) ~= "table" then
		error(`[{script.Name}]: Developer code likely set "Profile.Data" to a non-table value! (STORE:{profile.ProfileStore.Name}; KEY:{profile.Key})`)
	end

	profile.OnSave:Fire()
	if is_ending_session == true then
		profile.OnLastSave:Fire(last_save_reason or "Manual")
	end

	if is_ending_session == true and is_overwriting ~= true then
		if profile.roblox_message_subscription ~= nil then
			profile.roblox_message_subscription:Disconnect()
		end
		RemoveProfileFromAutoSave(profile)
		profile.OnSessionEnd:Fire()
	end

	ActiveProfileSaveJobs = ActiveProfileSaveJobs + 1

	-- Compare "SessionLoadCount" when writing to profile to prevent a rare case of repeat last save when the profile is loaded on the same server again

	local repeat_save_flag = true -- Released Profile save calls have to repeat until they succeed
	local exp_backoff = 1

	while repeat_save_flag == true do

		if is_ending_session ~= true then
			repeat_save_flag = false
		end

		local loaded_data, key_info = UpdateAsync(
			profile.ProfileStore,
			profile.Key,
			{
				ExistingProfileHandle = nil,
				MissingProfileHandle = nil,
				EditProfile = function(latest_data)

					-- Check if this session still owns the profile:

					local session_owns_profile = false

					if is_overwriting ~= true then

						local active_session = latest_data.MetaData.ActiveSession
						local session_load_count = latest_data.MetaData.SessionLoadCount

						if type(active_session) == "table" then
							session_owns_profile = IsThisSession(active_session) and session_load_count == profile.load_index
						end

					else
						session_owns_profile = true
					end

					-- We may only edit the profile if this server has ownership of the profile:

					if session_owns_profile == true then

						-- Clear processed updates (messages):

						local locked_updates = profile.locked_global_updates -- [index] = true, ...
						local active_updates = latest_data.GlobalUpdates[2]
						-- ProfileService module format: {{update_id, version_id, update_locked, update_data}, ...}
						-- ProfileStore module format: {{update_id, update_data}, ...}

						if next(locked_updates) ~= nil then
							local i = 1
							while i <= #active_updates do
								local update = active_updates[i]
								if locked_updates[update[1]] == true then
									table.remove(active_updates, i)
								else
									i += 1
								end
							end
						end

						-- Save profile data:

						latest_data.Data = profile.Data
						latest_data.RobloxMetaData = profile.RobloxMetaData
						latest_data.UserIds = profile.UserIds

						if is_overwriting ~= true then

							latest_data.MetaData.LastUpdate = os.time()

							if is_ending_session == true then
								latest_data.MetaData.ActiveSession = nil
							end

						else

							latest_data.MetaData.ActiveSession = nil
							latest_data.MetaData.ForceLoadSession = nil

						end

					end

				end,
			},
			profile.is_mock
		)

		if loaded_data ~= nil and key_info ~= nil then

			if is_overwriting == true then
				break
			end

			repeat_save_flag = false

			local active_session = loaded_data.MetaData.ActiveSession
			local session_load_count = loaded_data.MetaData.SessionLoadCount
			local session_owns_profile = false

			if type(active_session) == "table" then
				session_owns_profile = IsThisSession(active_session) and session_load_count == profile.load_index
			end

			local force_load_session = loaded_data.MetaData.ForceLoadSession
			local force_load_pending = false
			if type(force_load_session) == "table" then
				force_load_pending = not IsThisSession(force_load_session)
			end

			local is_active = profile:IsActive()

			-- If another server is trying to start a session for this profile - end the session:

			if force_load_pending == true and session_owns_profile == true then
				if is_active == true then
					SaveProfileAsync(profile, true, false, "External")
				end
				break
			end

			-- Clearing processed update list / Detecting new updates:

			local locked_updates = profile.locked_global_updates -- [index] = true, ...
			local received_updates = profile.received_global_updates -- [index] = true, ...
			local active_updates = loaded_data.GlobalUpdates[2]

			local new_updates = {} -- {}, ...
			local still_pending = {} -- [index] = true, ...

			for _, update in ipairs(active_updates) do
				if locked_updates[update[1]] == true then
					still_pending[update[1]] = true
				elseif received_updates[update[1]] ~= true then
					received_updates[update[1]] = true
					table.insert(new_updates, update)
				end
			end

			for index in pairs(locked_updates) do
				if still_pending[index] ~= true then
					locked_updates[index] = nil
				end
			end

			-- Updating profile values:

			profile.KeyInfo = key_info
			profile.LastSavedData = loaded_data.Data
			profile.global_updates = loaded_data.GlobalUpdates and loaded_data.GlobalUpdates[2] or {}

			if session_owns_profile == true then
				if is_active == true and is_ending_session ~= true then

					-- Processing new global updates (messages):

					for _, update in ipairs(new_updates) do

						local index = update[1]
						local update_data = update[#update] -- Backwards compatibility with ProfileService

						for _, handler in ipairs(profile.message_handlers) do

							local is_processed = false
							local processed_callback = function()
								is_processed = true
								locked_updates[index] = true
							end

							local send_update_data = DeepCopyTable(update_data)

							task.spawn(handler, send_update_data, processed_callback)

							if is_processed == true then
								break
							end

						end

					end

				end
			else

				if profile.roblox_message_subscription ~= nil then
					profile.roblox_message_subscription:Disconnect()
				end

				if is_active == true then
					RemoveProfileFromAutoSave(profile)
					profile.OnSessionEnd:Fire()
				end

			end

			profile.OnAfterSave:Fire(profile.LastSavedData)

		elseif repeat_save_flag == true then

			-- DataStore call likely resulted in an error; Repeat the DataStore call shortly
			task.wait(exp_backoff)
			exp_backoff = math.min(if last_save_reason == "Shutdown" then 8 else 20, exp_backoff * 2)

		end

	end

	ActiveProfileSaveJobs = ActiveProfileSaveJobs - 1

end

----- Public -----

--[[
	Saved profile structure:
	
	{
		Data = {},
		
		MetaData = {
			ProfileCreateTime = 0,
			SessionLoadCount = 0,
			ActiveSession = {place_id, game_job_id, unique_session_id} / nil,
			ForceLoadSession = {place_id, game_job_id} / nil,
			LastUpdate = 0, -- os.time()
			MetaTags = {}, -- Backwards compatibility with ProfileService
		},
		
		RobloxMetaData = {},
		UserIds = {},
		
		GlobalUpdates = {
			update_index,
			{
				{update_index, data}, ...
			},
		},
	}

--]]

export type JSONAcceptable = { JSONAcceptable } | { [string]: JSONAcceptable } | number | string | boolean | buffer

export type Profile<T> = {
	Data: T & JSONAcceptable,
	LastSavedData: T & JSONAcceptable,
	FirstSessionTime: number,
	SessionLoadCount: number,
	Session: {PlaceId: number, JobId: string}?,
	RobloxMetaData: JSONAcceptable,
	UserIds: {number},
	KeyInfo: DataStoreKeyInfo,
	OnSave: {Connect: (self: any, listener: () -> ()) -> ({Disconnect: (self: any) -> ()})},
	OnLastSave: {Connect: (self: any, listener: (reason: "Manual" | "External" | "Shutdown") -> ()) -> ({Disconnect: (self: any) -> ()})},
	OnSessionEnd: {Connect: (self: any, listener: () -> ()) -> ({Disconnect: (self: any) -> ()})},
	OnAfterSave: {Connect: (self: any, listener: (last_saved_data: T & JSONAcceptable) -> ()) -> ({Disconnect: (self: any) -> ()})},
	ProfileStore: JSONAcceptable,
	Key: string,

	IsActive: (self: any) -> (boolean),
	Reconcile: (self: any) -> (),
	EndSession: (self: any) -> (),
	AddUserId: (self: any, user_id: number) -> (),
	RemoveUserId: (self: any, user_id: number) -> (),
	MessageHandler: (self: any, fn: (message: JSONAcceptable, processed: () -> ()) -> ()) -> (),
	Save: (self: any) -> (),
	SetAsync: (self: any) -> (),
}

export type VersionQuery<T> = {
	NextAsync: (self: any) -> (Profile<T>?),
}

type ProfileStoreStandard<T> = {
	Name: string,
	StartSessionAsync: (self: any, profile_key: string, params: {Steal: boolean?}) -> (Profile<T>?),
	MessageAsync: (self: any, profile_key: string, message: JSONAcceptable) -> (boolean),
	GetAsync: (self: any, profile_key: string, version: string?) -> (Profile<T>?),
	VersionQuery: (self: any, profile_key: string, sort_direction: Enum.SortDirection?, min_date: DateTime | number | nil, max_date: DateTime | number | nil) -> (VersionQuery<T>),
	RemoveAsync: (self: any, profile_key: string) -> (boolean),
}

export type ProfileStore<T> = {
	Mock: ProfileStoreStandard<T>,
} & ProfileStoreStandard<T>

type ConstantName = "AUTO_SAVE_PERIOD" | "LOAD_REPEAT_PERIOD" | "FIRST_LOAD_REPEAT" | "SESSION_STEAL"
| "ASSUME_DEAD" | "START_SESSION_TIMEOUT" | "CRITICAL_STATE_ERROR_COUNT" | "CRITICAL_STATE_ERROR_EXPIRE"
| "CRITICAL_STATE_EXPIRE" | "MAX_MESSAGE_QUEUE"

export type ProfileStoreModule = {
	IsClosing: boolean,
	IsCriticalState: boolean,
	OnError: {Connect: (self: any, listener: (message: string, store_name: string, profile_key: string) -> ()) -> ({Disconnect: (self: any) -> ()})},
	OnOverwrite: {Connect: (self: any, listener: (store_name: string, profile_key: string) -> ()) -> ({Disconnect: (self: any) -> ()})},
	OnCriticalToggle: {Connect: (self: any, listener: (is_critical: boolean) -> ()) -> ({Disconnect: (self: any) -> ()})},
	DataStoreState: "NotReady" | "NoInternet" | "NoAccess" | "Access",
	New: <T>(store_name: string, template: (T & JSONAcceptable)?) -> (ProfileStore<T>),
	SetConstant: (name: ConstantName, value: number) -> ()
}

local Profile = {}
Profile.__index = Profile

function Profile.New(raw_data, key_info, profile_store, key, is_mock, session_token)

	local data = raw_data.Data or {}
	local session = raw_data.MetaData and raw_data.MetaData.ActiveSession or nil

	local global_updates = raw_data.GlobalUpdates and raw_data.GlobalUpdates[2] or {}
	local received_global_updates = {}

	for _, update in ipairs(global_updates) do
		received_global_updates[update[1]] = true
	end

	local self = {

		Data = data,
		LastSavedData = DeepCopyTable(data),

		FirstSessionTime = raw_data.MetaData and raw_data.MetaData.ProfileCreateTime or 0,
		SessionLoadCount = raw_data.MetaData and raw_data.MetaData.SessionLoadCount or 0,
		Session = session and {PlaceId = session[1], JobId = session[2]},

		RobloxMetaData = raw_data.RobloxMetaData or {},
		UserIds = raw_data.UserIds or {},
		KeyInfo = key_info,

		OnAfterSave = Signal.New(),
		OnSave = Signal.New(),
		OnLastSave = Signal.New(),
		OnSessionEnd = Signal.New(),

		ProfileStore = profile_store,
		Key = key,

		load_timestamp = os.clock(),
		is_mock = is_mock,
		session_token = session_token or "",
		load_index = raw_data.MetaData and raw_data.MetaData.SessionLoadCount or 0,
		locked_global_updates = {},
		received_global_updates = received_global_updates,
		message_handlers = {},
		global_updates = global_updates,

	}
	setmetatable(self, Profile)

	return self

end

function Profile:IsActive()
	return ActiveSessionCheck[self.session_token] == self
end

function Profile:Reconcile()
	ReconcileTable(self.Data, self.ProfileStore.template)
end

function Profile:EndSession()
	if self:IsActive() == true then
		task.spawn(SaveProfileAsync, self, true, nil, "Manual") -- Call save function in a new thread with release_from_session = true
	end
end

function Profile:AddUserId(user_id) -- Associates user_id with profile (GDPR compliance)

	if type(user_id) ~= "number" or user_id % 1 ~= 0 then
		warn(`[{script.Name}]: Invalid UserId argument for :AddUserId() ({tostring(user_id)}); Traceback:\n` .. debug.traceback())
		return
	end

	if user_id < 0 and self.is_mock ~= true and DataStoreState == "Access" then
		return -- Avoid giving real Roblox APIs negative UserId's
	end

	if table.find(self.UserIds, user_id) == nil then
		table.insert(self.UserIds, user_id)
	end

end

function Profile:RemoveUserId(user_id) -- Unassociates user_id with profile (safe function)

	if type(user_id) ~= "number" or user_id % 1 ~= 0 then
		warn(`[{script.Name}]: Invalid UserId argument for :RemoveUserId() ({tostring(user_id)}); Traceback:\n` .. debug.traceback())
		return
	end

	local index = table.find(self.UserIds, user_id)

	if index ~= nil then
		table.remove(self.UserIds, index)
	end

end

function Profile:SetAsync() -- Saves the profile to the DataStore and removes the session lock

	if self.view_mode ~= true then
		error(`[{script.Name}]: :SetAsync() can only be used in view mode`)
	end

	SaveProfileAsync(self, nil, true)

end

function Profile:MessageHandler(fn)

	if type(fn) ~= "function" then
		error(`[{script.Name}]: fn argument is not a function`)
	end

	if self.view_mode ~= true and self:IsActive() ~= true then
		return -- Don't process messages if the profile session was ended
	end

	local locked_updates = self.locked_global_updates
	table.insert(self.message_handlers, fn)

	for _, update in ipairs(self.global_updates) do

		local index = update[1]
		local update_data = update[#update] -- Backwards compatibility with ProfileService

		if locked_updates[index] ~= true then

			local processed_callback = function()
				locked_updates[index] = true
			end

			local send_update_data = DeepCopyTable(update_data)

			task.spawn(fn, send_update_data, processed_callback)

		end

	end

end

function Profile:Save()

	if self.view_mode == true then
		error(`[{script.Name}]: Can't save profile in view mode; Should you be calling :SetAsync() instead?`)
	end

	if self:IsActive() == false then
		warn(`[{script.Name}]: Attempted saving an inactive profile (STORE:{self.ProfileStore.Name}; KEY:{self.Key});`
			.. ` Traceback:\n` .. debug.traceback())
		return
	end

	-- Move the profile right behind the auto save index to delay the next auto save for it:
	RemoveProfileFromAutoSave(self)
	AddProfileToAutoSave(self)

	-- Perform save in new thread:
	task.spawn(SaveProfileAsync, self)

end

local ProfileStore: ProfileStoreModule = {

	IsClosing = false,
	IsCriticalState = false,
	OnError = OnError, -- (message, store_name, profile_key)
	OnOverwrite = OnOverwrite, -- (store_name, profile_key)
	OnCriticalToggle = Signal.New(), -- (is_critical)
	DataStoreState = "NotReady", -- ("NotReady", "NoInternet", "NoAccess", "Access")

}
ProfileStore.__index = ProfileStore

function ProfileStore.SetConstant(name, value)

	if type(value) ~= "number" then
		error(`[{script.Name}]: Invalid value type`)
	end

	if name == "AUTO_SAVE_PERIOD" then
		AUTO_SAVE_PERIOD = value
	elseif name == "LOAD_REPEAT_PERIOD" then
		LOAD_REPEAT_PERIOD = value
	elseif name == "FIRST_LOAD_REPEAT" then
		FIRST_LOAD_REPEAT = value
	elseif name == "SESSION_STEAL" then
		SESSION_STEAL = value
	elseif name == "ASSUME_DEAD" then
		ASSUME_DEAD = value
	elseif name == "START_SESSION_TIMEOUT" then
		START_SESSION_TIMEOUT = value
	elseif name == "CRITICAL_STATE_ERROR_COUNT" then
		CRITICAL_STATE_ERROR_COUNT = value
	elseif name == "CRITICAL_STATE_ERROR_EXPIRE" then
		CRITICAL_STATE_ERROR_EXPIRE = value
	elseif name == "CRITICAL_STATE_EXPIRE" then
		CRITICAL_STATE_EXPIRE = value
	elseif name == "MAX_MESSAGE_QUEUE" then
		MAX_MESSAGE_QUEUE = value
	else
		error(`[{script.Name}]: Invalid constant name was provided`)
	end

end

function ProfileStore.Test()
	return {
		ActiveSessionCheck = ActiveSessionCheck,
		AutoSaveList = AutoSaveList,
		ActiveProfileLoadJobs = ActiveProfileLoadJobs,
		ActiveProfileSaveJobs = ActiveProfileSaveJobs,
		MockStore = MockStore,
		UserMockStore = UserMockStore,
		UpdateQueue = UpdateQueue,
	}
end

function ProfileStore.New(store_name, template)

	template = template or {}

	if type(store_name) ~= "string" then
		error(`[{script.Name}]: Invalid or missing "store_name"`)
	elseif string.len(store_name) == 0 then
		error(`[{script.Name}]: store_name cannot be an empty string`)
	elseif string.len(store_name) > 50 then
		error(`[{script.Name}]: store_name is too long`)
	end

	if type(template) ~= "table" then
		error(`[{script.Name}]: Invalid template argument`)
	end

	local self
	self = {

		Mock = {

			Name = store_name,

			StartSessionAsync = function(_, profile_key)
				MockFlag = true
				return self:StartSessionAsync(profile_key)
			end,
			MessageAsync = function(_, profile_key, message)
				MockFlag = true
				return self:MessageAsync(profile_key, message)
			end,
			GetAsync = function(_, profile_key, version)
				MockFlag = true
				return self:GetAsync(profile_key, version)
			end,
			VersionQuery = function(_, profile_key, sort_direction, min_date, max_date)
				MockFlag = true
				return self:VersionQuery(profile_key, sort_direction, min_date, max_date)
			end,
			RemoveAsync = function(_, profile_key)
				MockFlag = true
				return self:RemoveAsync(profile_key)
			end
		},

		Name = store_name,

		template = template,
		data_store = nil,
		load_jobs = {},
		mock_load_jobs = {},
		is_ready = true,

	}
	setmetatable(self, ProfileStore)

	local options = Instance.new("DataStoreOptions")
	options:SetExperimentalFeatures({v2 = true})

	if DataStoreState == "NotReady" then

		-- The module is not sure whether DataStores are accessible yet:

		self.is_ready = false

		task.spawn(function()

			repeat task.wait() until DataStoreState ~= "NotReady"

			if DataStoreState == "Access" then
				self.data_store = DataStoreService:GetDataStore(store_name, nil, options)
			end

			self.is_ready = true

		end)

	elseif DataStoreState == "Access" then

		self.data_store = DataStoreService:GetDataStore(store_name, nil, options)

	end

	return self

end

function ProfileStore:StartSessionAsync(profile_key, params)

	local is_mock = ReadMockFlag()

	if type(profile_key) ~= "string" then
		error(`[{script.Name}]: profile_key must be a string`)
	elseif string.len(profile_key) == 0 then
		error(`[{script.Name}]: Invalid profile_key`)
	elseif string.len(profile_key) > 50 then
		error(`[{script.Name}]: profile_key is too long`)
	end

	if params ~= nil and type(params) ~= "table" then
		error(`[{script.Name}]: Invalid params`)
	end

	params = params or {}

	if ProfileStore.IsClosing == true then
		return nil
	end

	WaitForStoreReady(self)

	local session_token = SessionToken(self.Name, profile_key, is_mock)

	if ActiveSessionCheck[session_token] ~= nil then
		error(`[{script.Name}]: Profile (STORE:{self.Name}; KEY:{profile_key}) is already loaded in this session`)
	end

	ActiveProfileLoadJobs = ActiveProfileLoadJobs + 1

	local is_user_cancel = false

	local function cancel_condition()
		if is_user_cancel == false then
			if params.Cancel ~= nil then
				is_user_cancel = params.Cancel() == true
			end
			return is_user_cancel
		end
		return true
	end

	local user_steal = params.Steal == true

	local force_load_steps = 0 -- Session conflict handling values
	local request_force_load = true
	local steal_session = false

	local start = os.clock()
	local exp_backoff = 1

	while ProfileStore.IsClosing == false and cancel_condition() == false do

		-- Load profile:

		-- SPECIAL CASE - If StartSessionAsync is called for the same key again before another StartSessionAsync finishes,
		-- grab the DataStore return for the new call. The early call will return nil. This is supposed to retain
		-- expected and efficient behaviour in cases where a player would quickly rejoin the same server.

		LoadIndex += 1
		local load_id = LoadIndex
		local profile_load_jobs = is_mock == true and self.mock_load_jobs or self.load_jobs
		local profile_load_job = profile_load_jobs[profile_key] -- {load_id, {loaded_data, key_info} or nil}

		local loaded_data, key_info
		local unique_session_id = HttpService:GenerateGUID(false)

		if profile_load_job ~= nil then

			profile_load_job[1] = load_id -- Steal load job
			while profile_load_job[2] == nil do -- Wait for job to finish
				task.wait()
			end
			if profile_load_job[1] == load_id then -- Load job hasn't been double-stolen
				loaded_data, key_info = table.unpack(profile_load_job[2])
				profile_load_jobs[profile_key] = nil
			else
				ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
				return nil
			end

		else

			profile_load_job = {load_id, nil}
			profile_load_jobs[profile_key] = profile_load_job

			profile_load_job[2] = table.pack(UpdateAsync(
				self,
				profile_key,
				{
					ExistingProfileHandle = function(latest_data)

						if ProfileStore.IsClosing == true or cancel_condition() == true then
							return
						end

						local active_session = latest_data.MetaData.ActiveSession
						local force_load_session = latest_data.MetaData.ForceLoadSession

						if active_session == nil then
							latest_data.MetaData.ActiveSession = {PlaceId, JobId, unique_session_id}
							latest_data.MetaData.ForceLoadSession = nil
						elseif type(active_session) == "table" then
							if IsThisSession(active_session) == false then
								local last_update = latest_data.MetaData.LastUpdate
								if last_update ~= nil then
									if os.time() - last_update > ASSUME_DEAD then
										latest_data.MetaData.ActiveSession = {PlaceId, JobId, unique_session_id}
										latest_data.MetaData.ForceLoadSession = nil
										return
									end
								end
								if steal_session == true or user_steal == true then
									local force_load_interrupted = if force_load_session ~= nil then not IsThisSession(force_load_session) else true
									if force_load_interrupted == false or user_steal == true then
										latest_data.MetaData.ActiveSession = {PlaceId, JobId, unique_session_id}
										latest_data.MetaData.ForceLoadSession = nil
									end
								elseif request_force_load == true then
									latest_data.MetaData.ForceLoadSession = {PlaceId, JobId}
								end
							else
								latest_data.MetaData.ForceLoadSession = nil
							end
						end

					end,
					MissingProfileHandle = function(latest_data)

						local is_cancel = ProfileStore.IsClosing == true or cancel_condition() == true

						latest_data.Data = DeepCopyTable(self.template)
						latest_data.MetaData = {
							ProfileCreateTime = os.time(),
							SessionLoadCount = 0,
							ActiveSession = if is_cancel == false then {PlaceId, JobId, unique_session_id} else nil,
							ForceLoadSession = nil,
							MetaTags = {}, -- Backwards compatibility with ProfileService
						}

					end,
					EditProfile = function(latest_data)

						if ProfileStore.IsClosing == true or cancel_condition() == true then
							return
						end

						local active_session = latest_data.MetaData.ActiveSession
						if active_session ~= nil and IsThisSession(active_session) == true then
							latest_data.MetaData.SessionLoadCount = latest_data.MetaData.SessionLoadCount + 1
							latest_data.MetaData.LastUpdate = os.time()
						end

					end,
				},
				is_mock
				))
			if profile_load_job[1] == load_id then -- Load job hasn't been stolen
				loaded_data, key_info = table.unpack(profile_load_job[2])
				profile_load_jobs[profile_key] = nil
			else
				ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
				return nil -- Load job stolen
			end
		end

		-- Handle load_data:

		if loaded_data ~= nil and key_info ~= nil then
			local active_session = loaded_data.MetaData.ActiveSession
			if type(active_session) == "table" then

				if IsThisSession(active_session) == true then

					-- Profile is now taken by this session:

					local profile = Profile.New(loaded_data, key_info, self, profile_key, is_mock, session_token)
					AddProfileToAutoSave(profile)

					if is_mock ~= true and DataStoreState == "Access" then

						-- Use MessagingService to quickly detect session conflicts and resolve them quickly:

						local last_roblox_message = 0

						profile.roblox_message_subscription = MessagingService:SubscribeAsync("PS_" .. unique_session_id, function(message)
							if type(message.Data) == "table" and message.Data.LoadCount == profile.SessionLoadCount then
								-- High reaction rate, based on numPlayers × 10 DataStore budget as of writing
								if os.clock() - last_roblox_message > 6 then 
									last_roblox_message = os.clock()
									if profile:IsActive() == true then
										if message.Data.EndSession == true then
											SaveProfileAsync(profile, true, false, "External")
										else
											profile:Save()
										end
									end
								end
							end
						end)

					end

					if ProfileStore.IsClosing == true or cancel_condition() == true then
						-- The server has initiated a shutdown by the time this profile was loaded
						SaveProfileAsync(profile, true) -- Release profile and yield until the DataStore call is finished
						profile = nil -- Don't return the profile object
					end

					ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
					return profile

				else

					if ProfileStore.IsClosing == true or cancel_condition() == true then
						ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
						return nil
					end

					-- Profile is taken by some other session:

					local force_load_session = loaded_data.MetaData.ForceLoadSession
					local force_load_interrupted = if force_load_session ~= nil then not IsThisSession(force_load_session) else true

					if force_load_interrupted == false then

						if request_force_load == false then
							force_load_steps = force_load_steps + 1
							if force_load_steps >= math.ceil(SESSION_STEAL / LOAD_REPEAT_PERIOD) then
								steal_session = true
							end
						end

						-- Request the remote server to end its session:
						if type(active_session[3]) == "string" then
							local session_load_count = loaded_data.MetaData.SessionLoadCount or 0
							MessagingService:PublishAsync("PS_" .. active_session[3], {LoadCount = session_load_count, EndSession = true})
						end

						-- Attempt to load the profile again after a delay
						local wait_until = os.clock() + if request_force_load == true then FIRST_LOAD_REPEAT else LOAD_REPEAT_PERIOD
						repeat task.wait() until os.clock() >= wait_until or ProfileStore.IsClosing == true

					else
						-- Another session tried to load this profile:
						ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
						return nil
					end

					request_force_load = false -- Only request a force load once

				end

			else
				ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
				return nil -- In this scenario it is likely that this server started shutting down
			end
		else

			-- A DataStore call has likely ended in an error:

			local default_timeout = false

			if params.Cancel == nil then
				default_timeout = os.clock() - start >= START_SESSION_TIMEOUT
			end

			if default_timeout == true or ProfileStore.IsClosing == true or cancel_condition() == true then
				ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
				return nil
			end

			task.wait(exp_backoff)  -- Repeat the call shortly
			exp_backoff = math.min(20, exp_backoff * 2)

		end

	end

	ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
	return nil -- Game started shutting down or the request was cancelled - don't return the profile

end

function ProfileStore:MessageAsync(profile_key, message)

	local is_mock = ReadMockFlag()

	if type(profile_key) ~= "string" then
		error(`[{script.Name}]: profile_key must be a string`)
	elseif string.len(profile_key) == 0 then
		error(`[{script.Name}]: Invalid profile_key`)
	elseif string.len(profile_key) > 50 then
		error(`[{script.Name}]: profile_key is too long`)
	end

	if type(message) ~= "table" then
		error(`[{script.Name}]: message must be a table`)
	end

	if ProfileStore.IsClosing == true then
		return false
	end

	WaitForStoreReady(self)

	local exp_backoff = 1

	while ProfileStore.IsClosing == false do

		-- Updating profile:

		local loaded_data = UpdateAsync(
			self,
			profile_key,
			{
				ExistingProfileHandle = nil,
				MissingProfileHandle = nil,
				EditProfile = function(latest_data)

					local global_updates = latest_data.GlobalUpdates
					local update_list = global_updates[2]
					--{
					--	update_index,
					--	{
					--		{update_index, data}, ...
					--	},
					--},

					global_updates[1] += 1
					table.insert(update_list, {global_updates[1], message})

					-- Clearing queue if above limit:

					while #update_list > MAX_MESSAGE_QUEUE do
						table.remove(update_list, 1)
					end

				end,
			},
			is_mock
		)

		if loaded_data ~= nil then

			local session_token = SessionToken(self.Name, profile_key, is_mock)

			local profile = ActiveSessionCheck[session_token]

			if profile ~= nil then

				-- The message was sent to a profile that is active in this server:
				profile:Save()

			else

				local meta_data = loaded_data.MetaData or {}
				local active_session = meta_data.ActiveSession
				local session_load_count = meta_data.SessionLoadCount or 0

				if type(active_session) == "table" and type(active_session[3]) == "string" then
					-- Request the remote server to auto-save sooner and receive the message:
					MessagingService:PublishAsync("PS_" .. active_session[3], {LoadCount = session_load_count})
				end

			end

			return true

		else

			task.wait(exp_backoff) -- A DataStore call has likely ended in an error - repeat the call shortly
			exp_backoff = math.min(20, exp_backoff * 2)

		end

	end

	return false

end

function ProfileStore:GetAsync(profile_key, version)

	local is_mock = ReadMockFlag()

	if type(profile_key) ~= "string" then
		error(`[{script.Name}]: profile_key must be a string`)
	elseif string.len(profile_key) == 0 then
		error(`[{script.Name}]: Invalid profile_key`)
	elseif string.len(profile_key) > 50 then
		error(`[{script.Name}]: profile_key is too long`)
	end

	if ProfileStore.IsClosing == true then
		return nil
	end

	WaitForStoreReady(self)

	if version ~= nil and (is_mock or DataStoreState ~= "Access") then
		return nil -- No version support in mock mode
	end

	local exp_backoff = 1

	while ProfileStore.IsClosing == false do

		-- Load profile:

		local loaded_data, key_info = UpdateAsync(
			self,
			profile_key,
			{
				ExistingProfileHandle = nil,
				MissingProfileHandle = function(latest_data)

					latest_data.Data = DeepCopyTable(self.template)
					latest_data.MetaData = {
						ProfileCreateTime = os.time(),
						SessionLoadCount = 0,
						ActiveSession = nil,
						ForceLoadSession = nil,
						MetaTags = {}, -- Backwards compatibility with ProfileService
					}

				end,
				EditProfile = nil,
			},
			is_mock,
			true, -- Use :GetAsync()
			version -- DataStore key version
		)

		-- Handle load_data:

		if loaded_data ~= nil then

			if key_info == nil then
				return nil -- Load was successful, but the key was empty - return no profile object
			end

			local profile = Profile.New(loaded_data, key_info, self, profile_key, is_mock)
			profile.view_mode = true

			return profile

		else

			task.wait(exp_backoff) -- A DataStore call has likely ended in an error - repeat the call shortly
			exp_backoff = math.min(20, exp_backoff * 2)

		end

	end

	return nil -- Game started shutting down - don't return the profile

end

function ProfileStore:RemoveAsync(profile_key)

	local is_mock = ReadMockFlag()

	if type(profile_key) ~= "string" or string.len(profile_key) == 0 then
		error(`[{script.Name}]: Invalid profile_key`)
	end

	if ProfileStore.IsClosing == true then
		return false
	end

	WaitForStoreReady(self)

	local wipe_status = false

	local next_in_queue = WaitInUpdateQueue(SessionToken(self.Name, profile_key, is_mock))

	if is_mock == true then -- Used when the profile is accessed through ProfileStore.Mock

		local mock_data_store = UserMockStore[self.Name]

		if mock_data_store ~= nil then
			mock_data_store[profile_key] = nil
			if next(mock_data_store) == nil then
				UserMockStore[self.Name] = nil
			end
		end

		wipe_status = true
		task.wait() -- Simulate API call yield

	elseif DataStoreState ~= "Access" then -- Used when API access is disabled

		local mock_data_store = MockStore[self.Name]

		if mock_data_store ~= nil then
			mock_data_store[profile_key] = nil
			if next(mock_data_store) == nil then
				MockStore[self.Name] = nil
			end
		end

		wipe_status = true
		task.wait() -- Simulate API call yield

	else -- Live DataStore

		wipe_status = pcall(function()
			self.data_store:RemoveAsync(profile_key)
		end)

	end

	next_in_queue()

	return wipe_status

end

local ProfileVersionQuery = {}
ProfileVersionQuery.__index = ProfileVersionQuery

function ProfileVersionQuery.New(profile_store, profile_key, sort_direction, min_date, max_date, is_mock)

	local self = {
		profile_store = profile_store,
		profile_key = profile_key,
		sort_direction = sort_direction,
		min_date = min_date,
		max_date = max_date,

		query_pages = nil,
		query_index = 0,
		query_failure = false,

		is_query_yielded = false,
		query_queue = {},

		is_mock = is_mock,
	}
	setmetatable(self, ProfileVersionQuery)

	return self

end

function MoveVersionQueryQueue(self) -- Hidden ProfileVersionQuery method
	while #self.query_queue > 0 do

		local queue_entry = table.remove(self.query_queue, 1)

		task.spawn(queue_entry)

		if self.is_query_yielded == true then
			break
		end

	end
end

local VersionQueryNextAsyncStackingFlag = false
local WarnAboutVersionQueryOnce = false

function ProfileVersionQuery:NextAsync()

	local is_stacking = VersionQueryNextAsyncStackingFlag == true
	VersionQueryNextAsyncStackingFlag = false

	WaitForStoreReady(self.profile_store)

	if ProfileStore.IsClosing == true then
		return nil -- Silently fail :NextAsync() requests
	end

	if self.is_mock == true or DataStoreState ~= "Access" then
		if IsStudio == true and WarnAboutVersionQueryOnce == false then
			WarnAboutVersionQueryOnce = true
			warn(`[{script.Name}]: :VersionQuery() is not supported in mock mode!`)
		end
		return nil -- Silently fail :NextAsync() requests
	end

	local profile
	local is_finished = false

	local function query_job()

		if self.query_failure == true then
			is_finished = true
			return
		end

		-- First "next" call loads version pages:

		if self.query_pages == nil then

			self.is_query_yielded = true

			task.spawn(function()
				VersionQueryNextAsyncStackingFlag = true
				profile = self:NextAsync()
				is_finished = true
			end)

			local list_success, error_message = pcall(function()
				self.query_pages = self.profile_store.data_store:ListVersionsAsync(
					self.profile_key,
					self.sort_direction,
					self.min_date,
					self.max_date
				)
				self.query_index = 0
			end)

			if list_success == false or self.query_pages == nil then
				warn(`[{script.Name}]: Version query fail - {tostring(error_message)}`)
				self.query_failure = true
			end

			self.is_query_yielded = false

			MoveVersionQueryQueue(self)

			return

		end

		local current_page = self.query_pages:GetCurrentPage()
		local next_item = current_page[self.query_index + 1]

		-- No more entries:

		if self.query_pages.IsFinished == true and next_item == nil then
			is_finished = true
			return
		end

		-- Load next page when this page is over:

		if next_item == nil then

			self.is_query_yielded = true
			task.spawn(function()
				VersionQueryNextAsyncStackingFlag = true
				profile = self:NextAsync()
				is_finished = true
			end)

			local success, error_message = pcall(function()
				self.query_pages:AdvanceToNextPageAsync()
				self.query_index = 0
			end)

			if success == false or #self.query_pages:GetCurrentPage() == 0 then
				self.query_failure = true
			end

			self.is_query_yielded = false
			MoveVersionQueryQueue(self)

			return

		end

		-- Next page item:

		self.query_index += 1
		profile = self.profile_store:GetAsync(self.profile_key, next_item.Version)
		is_finished = true

	end

	if self.is_query_yielded == false then
		query_job()
	else
		if is_stacking == true then
			table.insert(self.query_queue, 1, query_job)
		else
			table.insert(self.query_queue, query_job)
		end
	end

	while is_finished == false do
		task.wait()
	end

	return profile

end

function ProfileStore:VersionQuery(profile_key, sort_direction, min_date, max_date)

	local is_mock = ReadMockFlag()

	if type(profile_key) ~= "string" or string.len(profile_key) == 0 then
		error(`[{script.Name}]: Invalid profile_key`)
	end

	-- Type check:

	if sort_direction ~= nil and (typeof(sort_direction) ~= "EnumItem"
		or sort_direction.EnumType ~= Enum.SortDirection) then
		error(`[{script.Name}]: Invalid sort_direction ({tostring(sort_direction)})`)
	end

	if min_date ~= nil and typeof(min_date) ~= "DateTime" and typeof(min_date) ~= "number" then
		error(`[{script.Name}]: Invalid min_date ({tostring(min_date)})`)
	end

	if max_date ~= nil and typeof(max_date) ~= "DateTime" and typeof(max_date) ~= "number" then
		error(`[{script.Name}]: Invalid max_date ({tostring(max_date)})`)
	end

	min_date = typeof(min_date) == "DateTime" and min_date.UnixTimestampMillis or min_date
	max_date = typeof(max_date) == "DateTime" and max_date.UnixTimestampMillis or max_date

	return ProfileVersionQuery.New(self, profile_key, sort_direction, min_date, max_date, is_mock)

end

-- DataStore API access check:

if IsStudio == true then

	task.spawn(function()

		local new_state = "NoAccess"

		local status, message = pcall(function()
			-- This will error if current instance has no Studio API access:
			DataStoreService:GetDataStore("____PS"):SetAsync("____PS", os.time())
		end)

		local no_internet_access = status == false and string.find(message, "ConnectFail", 1, true) ~= nil

		if no_internet_access == true then
			warn(`[{script.Name}]: No internet access - check your network connection`)
		end

		if status == false and
			(string.find(message, "403", 1, true) ~= nil or -- Cannot write to DataStore from studio if API access is not enabled
				string.find(message, "must publish", 1, true) ~= nil or -- Game must be published to access live keys
				no_internet_access == true) then -- No internet access

			new_state = if no_internet_access == true then "NoInternet" else "NoAccess"
			print(`[{script.Name}]: Roblox API services unavailable - data will not be saved`)
		else
			new_state = "Access"
			print(`[{script.Name}]: Roblox API services available - data will be saved`)
		end

		DataStoreState = new_state
		ProfileStore.DataStoreState = new_state

	end)

else

	DataStoreState = "Access"
	ProfileStore.DataStoreState = "Access"

end

-- Update loop:

RunService.Heartbeat:Connect(function()

	-- Auto saving:

	local auto_save_list_length = #AutoSaveList
	if auto_save_list_length > 0 then
		local auto_save_index_speed = AUTO_SAVE_PERIOD / auto_save_list_length
		local os_clock = os.clock()
		while os_clock - LastAutoSave > auto_save_index_speed do
			LastAutoSave = LastAutoSave + auto_save_index_speed
			local profile = AutoSaveList[AutoSaveIndex]
			if os_clock - profile.load_timestamp < AUTO_SAVE_PERIOD / 2 then
				-- This profile is freshly loaded - auto saving immediately is not necessary:
				profile = nil
				for _ = 1, auto_save_list_length - 1 do
					-- Move auto save index to the right:
					AutoSaveIndex = AutoSaveIndex + 1
					if AutoSaveIndex > auto_save_list_length then
						AutoSaveIndex = 1
					end
					profile = AutoSaveList[AutoSaveIndex]
					if os_clock - profile.load_timestamp >= AUTO_SAVE_PERIOD / 2 then
						break
					else
						profile = nil
					end
				end
			end
			-- Move auto save index to the right:
			AutoSaveIndex = AutoSaveIndex + 1
			if AutoSaveIndex > auto_save_list_length then
				AutoSaveIndex = 1
			end
			-- Perform save call:
			if profile ~= nil then
				task.spawn(SaveProfileAsync, profile) -- Auto save profile in new thread
			end
		end
	end

	-- Critical state handling:

	if ProfileStore.IsCriticalState == false then
		if #IssueQueue >= CRITICAL_STATE_ERROR_COUNT then
			ProfileStore.IsCriticalState = true
			ProfileStore.OnCriticalToggle:Fire(true)
			CriticalStateStart = os.clock()
			warn(`[{script.Name}]: Entered critical state`)
		end
	else
		if #IssueQueue >= CRITICAL_STATE_ERROR_COUNT then
			CriticalStateStart = os.clock()
		elseif os.clock() - CriticalStateStart > CRITICAL_STATE_EXPIRE then
			ProfileStore.IsCriticalState = false
			ProfileStore.OnCriticalToggle:Fire(false)
			warn(`[{script.Name}]: Critical state ended`)
		end
	end

	-- Issue queue:

	while true do
		local issue_time = IssueQueue[1]
		if issue_time == nil then
			break
		elseif os.clock() - issue_time > CRITICAL_STATE_ERROR_EXPIRE then
			table.remove(IssueQueue, 1)
		else
			break
		end
	end

end)

-- Release all loaded profiles when the server is shutting down:

task.spawn(function()

	while DataStoreState == "NotReady" do
		task.wait()
	end

	if DataStoreState ~= "Access" then

		game:BindToClose(function()
			ProfileStore.IsClosing = true
			task.wait() -- Mock shutdown delay
		end)

		return -- Don't wait for profiles to properly save in mock mode so studio could end the simulation faster

	end

	game:BindToClose(function()

		ProfileStore.IsClosing = true

		-- Release all active profiles:
		-- (Clone AutoSaveList to a new table because AutoSaveList changes when profiles are released)

		local on_close_save_job_count = 0
		local active_profiles = {}
		for index, profile in ipairs(AutoSaveList) do
			active_profiles[index] = profile
		end

		-- Release the profiles; Releasing profiles can trigger listeners that release other profiles, so check active state:
		for _, profile in ipairs(active_profiles) do
			if profile:IsActive() == true then
				on_close_save_job_count = on_close_save_job_count + 1
				task.spawn(function() -- Save profile on new thread
					SaveProfileAsync(profile, true, nil, "Shutdown")
					on_close_save_job_count = on_close_save_job_count - 1
				end)
			end
		end

		-- Yield until all active profile jobs are finished:
		while on_close_save_job_count > 0 or ActiveProfileLoadJobs > 0 or ActiveProfileSaveJobs > 0 do
			task.wait()
		end

		return -- We're done!

	end)

end)

return ProfileStore]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000025b7</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Script" referent="RBX62eca86fb18846758e6fa0265c0603bb">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Bootstrap</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{19012327-c611-409e-8a77-3a91a608784e}</string>
					<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")
print("Hello world, from server!")

-- Require Packages
local Packages = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Packages"))

-- Require Core
local PlayerHandler = require('./Core/PlayerHandler')
PlayerHandler:Init()

-- Require Services
local DataInterface = require('./Services/DataInterface')
local CurrencyService = require('./Services/Currency')]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000025bc</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBXb994d59539544b869b42da41c9e5ae0e">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Core</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000025c7</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX237679dd1db84a028c02f9a4cbbbf24b">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PlayerHandler</string>
						<string name="ScriptGuid">{be01759f-e3cf-4c9d-a82e-2eed6f62b177}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
local Players = game:GetService("Players")

-- // Services
local DataInterface = require('../Services/DataInterface')

local PlayerHandler = {}

-- // Private Functions
local function onPlayerAdded(p: Player)
    -- Logic to handle when a player joins the game
    print(p.Name .. " has joined the game.")
    
    -- Initialise player data or any other setup
    local profile = DataInterface:LoadPlayerProfile(p)
    if not (profile) then
        warn("Failed to load profile for player: " .. p.Name)
        return
    end
end

local function onPlayerRemove(p: Player)
    print(p.Name .. " has left the game.")

    -- Cleanup player data
    DataInterface:ReleasePlayerProfile(p)
end


function PlayerHandler:Init()
    -- Initialization logic for player handler
    print("PlayerHandler initialized")

    for _, p in Players:GetPlayers() do
        onPlayerAdded(p)
    end
    Players.PlayerAdded:Connect(onPlayerAdded)
    Players.PlayerRemoving:Connect(onPlayerRemove)
end


return PlayerHandler]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000025cd</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX4503ab115d924caa8b56d8745c65641d">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Services</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000025ca</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX3128980450d6471694d0635ff51d4a5f">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DataInterface</string>
						<string name="ScriptGuid">{d98551d2-53c0-4cb2-b10c-0b08b1cafd70}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- // Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerScriptService = game:GetService("ServerScriptService")

-- // Packages
local Packages = require('../Packages')
local DataManager = Packages.DataManager

local Config = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Config"))

local DataInterface = {}

-- // Public API
function DataInterface:GetPlayerProfile(p: Player, yield: boolean?): Config.PlayerProfile?
    -- Check if profile exists
    local profile = DataManager:GetPlayerProfile(p, yield)
    if not profile then
        return nil
    end

    return DataManager.DeepClone(profile)
end

function DataInterface:LoadPlayerProfile(p: Player): Config.PlayerProfile?
    -- Load the player profile
    local profile = DataManager:LoadPlayerProfile(p)
    if not profile then
        warn("Failed to load profile for player: " .. p.Name)
        return nil
    end

    return profile
end

function DataInterface:ReleasePlayerProfile(p: Player): boolean
    -- Release the profile to free up resources
    return DataManager:ReleasePlayerProfile(p)
end

function DataInterface:ReconcileProfileSection(p: Player, sectionType: "Info" | "Data", sectionName: string, template: {})
    -- Reconcile a new section into existing data
    return DataManager:ReconcileProfileSection(p, sectionType, sectionName, template)
end

return DataInterface
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">1e89c5cace45089c08a4c88c000025cb</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXa86217055e8b4b95be20b645cf56efc6">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Currency</string>
						<string name="ScriptGuid">{bc835799-438b-4a65-9a3a-336225c785e5}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- // Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local DataInterface = require('./DataInterface')

-- // Config
local Config = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Config"))

-- // Packages
local SharedPackages = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Packages"))
local Remotes = SharedPackages.Remotes

-- // Remotes
local PromoteProductRemote = Remotes:GetRemote("RemoteEvent", "PromoteProduct")

-- // Monetisation
local ProductDefinitions = require('../Monetisation/ProductDefinitions')

-- // Components
local CollectableCurrency = require('@self/CollectableCurrency')

local CurrencyService = {}

-- // Public API
function CurrencyService:CanAfford(p : Player, currencyID : string, amount : number, promptPurchase : boolean?)
	-- Get player data
	local profile = DataInterface:GetPlayerProfile(p)
	if not (profile) then
		warn("Currency Error: Couldn't load profile for", p)
		return
	end

	-- Check that the currency ID is valid
	local currencyInfo = Config.CURRENCY:GetCurrencyFromID(currencyID)
	if not (currencyInfo) then return end
	
	local balance = currencyInfo.Get(profile, currencyID)
	if not (balance and typeof(balance) == "number") then
		warn("Currency Error: Couldn't get data for currency", currencyID)
		return false
	end
	
	if (balance < amount) then
		-- Prompt purchase
		local amountRequired = amount - balance
		local stringID = ProductDefinitions:GetSmallestRequiredCurrencyPack(currencyID, amountRequired)
		if (stringID) then
			PromoteProductRemote:FireClient(p, "DevProduct", stringID)
		end
		return false
	end
	return true
end

function CurrencyService:GiveCurrency(p : Player, currencyID : string, amount : number, useMultipliers : boolean, showDrops : boolean)
	-- Get player data
	local profile = DataInterface:GetPlayerProfile(p)
	if not (profile) then
		warn("Currency Error: Couldn't load profile for", p)
		return
	end
	
	-- Check that the currency ID is valid
	local currencyInfo = Config.CURRENCY:GetCurrencyFromID(currencyID)
	if not (currencyInfo) then return end
	
	-- Make sure amount is positive
	amount = math.clamp(amount, 0, math.huge)
	
	-- Apply multipliers if necessary
	if (useMultipliers) then
		local multiplier = CurrencyService:GetCurrencyMultiplier(p, currencyID) or 1.0
		amount *= multiplier
	end
	
	currencyInfo.Update(profile, math.ceil(amount))
	
	-- Replicate to leaderstats
	if (currencyInfo.UseLeaderstats) then
		local leaderstats = p:FindFirstChild("leaderstats")
		if (leaderstats) then
			local val = leaderstats:FindFirstChild(currencyID)
			if (val) then
				val.Value = currencyInfo.Get(profile, currencyID)
			else
				warn("Currency Error: Couldn't find leaderstats value for", currencyID)
			end
		end
	end
	
	-- If should drop currency, drop it
	if (showDrops) then
		task.spawn(function()
			CollectableCurrency:DropCurrency(p, currencyID, math.ceil(amount))
		end)
	end
	
	-- print("Gave", p, amount, currencyID)
	return true -- Success
end

function CurrencyService:SpendCurrency(p : Player, currencyID : string, amount : number)
	-- Get player data
	local profile = DataInterface:GetPlayerProfile(p)
	if not (profile) then
		warn("Currency Error: Couldn't load profile for", p)
		return
	end

	-- Check that the currency ID is valid
	local currencyInfo = Config.CURRENCY:GetCurrencyFromID(currencyID)
	if not (currencyInfo) then return end
	
	-- Check that they can afford this amount
	local canAfford = CurrencyService:CanAfford(p, currencyID, amount)
	if not (canAfford) then
		warn("Currency Error:", p, "can't afford to spend", amount, currencyID)
		return false
	end
	
	-- Make sure amount is positive
	amount = math.clamp(amount, 0, math.huge)

	currencyInfo.Update(profile, -amount)
	
	-- Replicate to leaderstats
	if (currencyInfo.UseLeaderstats) then
		local leaderstats = p:FindFirstChild("leaderstats")
		if (leaderstats) then
			local val = leaderstats:FindFirstChild(currencyID)
			if (val) then
				val.Value = currencyInfo.Get(profile, currencyID)
			else
				warn("Currency Error: Couldn't find leaderstats value for", currencyID)
			end
		end
	end
	
	print("Took", amount, currencyID, "from", p)
	return true -- Success
end

-- // Multipliers
function CurrencyService:GetCurrencyMultiplier(p : Player, currencyID : string): number
	-- Get player data and info
	local profile = DataInterface:GetPlayerProfile(p, true)
	if not (profile) then
		return 1.0
	end

	local currencyInfo = Config.CURRENCY:GetCurrencyFromID(currencyID)
	if not currencyInfo then
		warn("No currency info found for ID:", currencyID)
		return 1.0
	end

	-- Start at base x1 multiplier
	local totalBonus : number = 0.0

	-- Friend Boost (e.g. +0.05 per friend)
	if currencyInfo.UseFriendBoost then
		for _, otherPlayer in Players:GetPlayers() do
			if p ~= otherPlayer and p:IsFriendsWith(otherPlayer.UserId) then
				totalBonus += Config.FRIEND_BOOST
			end
		end
	end

	-- Gamepasses and temporary boosts (playtime, dev products, etc.)
	if profile.Info.Multipliers then
		for _, multiplierInfo in profile.Info.Multipliers do
			if multiplierInfo.CurrencyID == currencyID then
				totalBonus += (multiplierInfo.Value - 1)
			end
		end
	end

	-- Rebirths
	if profile.Data.Stats.Rebirths and profile.Data.Stats.Rebirths > 1 then
		local rebirthMult = currencyInfo.RebirthMultiplier or 1.25
		totalBonus += (profile.Data.Stats.Rebirths - 1) * rebirthMult
	end

	-- Final multiplier is always at least 1.0
	return math.max(1.0, 1.0 + totalBonus)
end

function CurrencyService:SetMultiplier(p: Player, multiplierID: string, currencyID: string, multiplier: number, duration: number?)
	-- Get player data
	local profile = DataInterface:GetPlayerProfile(p)
	if not profile then
		warn("Currency Error: Couldn't load profile for", p)
		return false
	end

	-- Check that the currency ID is valid
	local currencyInfo = Config.CURRENCY:GetCurrencyFromID(currencyID)
	if not currencyInfo then
		warn("Currency Error: Invalid currency ID", currencyID)
		return false
	end

	-- Ensure the multipliers table exists
	profile.Info.Multipliers = profile.Info.Multipliers or {}

	local currentTime = os.time()
	local endTime = (duration and (currentTime + duration)) or nil

	-- Apply or overwrite multiplier
	profile.Info.Multipliers[multiplierID] = {
		EndTime = endTime;
		Value = multiplier;
		IsPermanent = (duration == nil);
		LastUpdate = currentTime;
		CurrencyID = currencyID;
	}

	print(`[SERVER | Currency] Set multiplier '{multiplierID}' for {p.Name} x{multiplier} for {duration or "∞"} seconds`)

	-- If temporary, remove after duration
	if duration then
		task.delay(duration, function()
			local info = profile.Info.Multipliers[multiplierID]
			if info and info.LastUpdate == currentTime then
				profile.Info.Multipliers[multiplierID] = nil
				print(`[SERVER | Currency] Removed multiplier '{multiplierID}' from {p.Name} after {duration} seconds`)
			end
		end)
	end

	return true
end

local function onPlayerAdded(p : Player)
	-- Give them leaderstats
	local leaderstats = p:FindFirstChild("leaderstats")
	if not (leaderstats) then
		leaderstats = Instance.new("Folder", p)
		leaderstats.Name = "leaderstats"
	end
	
	local profile = DataInterface:GetPlayerProfile(p, true)
    if not (profile) then
        warn("Currency Error: Couldn't load profile for", p)
        return
    end

    local statsTemplate = {}
	for currencyID, currencyInfo in Config.CURRENCY_TYPES do
        statsTemplate[currencyID] = 0
		if not (profile and profile.Data.Stats[currencyID]) then
			profile.Data.Stats[currencyID] = 0
		end
		if (currencyInfo.UseLeaderstats) then
			local val = Instance.new("NumberValue")
			val.Name = currencyInfo.Name
			val.Value = currencyInfo.Get(profile, currencyID) or 0
			val.Parent = leaderstats
		end
	end

    -- Replicate multipliers and stats to the client
    DataInterface:ReconcileProfileSection(p, "Info", "Multipliers", {})
    DataInterface:ReconcileProfileSection(p, "Data", "Stats", statsTemplate)
end

local function initialise()
	for _, p in Players:GetPlayers() do
		onPlayerAdded(p)
	end
	Players.PlayerAdded:Connect(onPlayerAdded)
end

-- Initialisation
initialise()

return CurrencyService]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">7a5be8c3b493ddb808a5137600001707</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBXc605d1cbdfdc49c59731401a91ef93db">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Monetisation</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{dba6cce0-19ed-451c-8297-1934294fba6a}</string>
					<ProtectedString name="Source"><![CDATA[--!strict
-- // Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MarketPlaceService = game:GetService("MarketplaceService")
local ServerStorage = game:GetService("ServerStorage")
local DataStoreService = game:GetService("DataStoreService")
local Players = game:GetService("Players")

-- // Data
local ProductDefinitions = require('./ProductDefinitions')
local ProductHandlers = require('./ProductHandlers')

-- // Packages
local SharedPackages = require(ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Packages"))
local Remotes = SharedPackages.Remotes

-- // Remotes
local GetMonetisationData = Remotes:GetRemote("RemoteFunction", "GetMonetisationData")

-- // Datastores
local PurchaseHistoryStore = DataStoreService:GetDataStore("PreviousPurchases")

-- // Gamepasses
local function handleGamepass(p: Player, stringID: string): boolean
	local gamepassInfo = ProductDefinitions.Gamepasses[stringID]
	if not gamepassInfo then
		warn("No Gamepass found with name:", stringID)
		return false
	end

	if gamepassInfo.HandledByTycoon then
		return true
	end

	local handler = ProductHandlers.GetHandler("Gamepasses", gamepassInfo.ID)
	if not handler then
		warn("No handler defined for Gamepass:", stringID)
		return false
	end

	local success, err = pcall(function()
		handler(p)
	end)

	if not success then
		warn("Gamepass Handler Error:", err, "Gamepass Name:", stringID, "Player:", p)
		return false
	end

	print("Handled", stringID, "gamepass for", p)
	return true
end

MarketPlaceService.PromptGamePassPurchaseFinished:Connect(function(p, gamepassId, wasPurchased)
	if (wasPurchased) then
		-- Get the gamepass info
		local stringID, gamepassInfo = ProductDefinitions:GetGamepassFromNumericID(gamepassId)
		if not (gamepassInfo) then return end

		if (wasPurchased) then
			handleGamepass(p, stringID)
		end
	end
end)

-- // Dev products
local function processReceipt(receiptInfo)
	local playerkey = receiptInfo.PlayerId .. "_" .. receiptInfo.PurchaseId
	local purchased = false

	-- Check if already purchased
	local success, errorMessage = pcall(function()
		purchased = PurchaseHistoryStore:GetAsync(playerkey)
	end)

	if (success and purchased) then
		return Enum.ProductPurchaseDecision.PurchaseGranted
	elseif not success then
		warn("Datastore error:", errorMessage)
		return Enum.ProductPurchaseDecision.NotProcessedYet
	end

	-- Process purchase logic (outside of UpdateAsync!)
	local player = Players:GetPlayerByUserId(receiptInfo.PlayerId)
	if not player then
		return Enum.ProductPurchaseDecision.NotProcessedYet -- will retry next session
	end

	local stringID, productInfo = ProductDefinitions:GetProductFromNumericID(receiptInfo.ProductId)
	local handler = ProductHandlers.GetHandler("DevProducts", receiptInfo.ProductId)

	if not handler then
		warn(receiptInfo.ProductId, "/", stringID, "has no handler function in ProductHandlers!")
		return Enum.ProductPurchaseDecision.NotProcessedYet
	end

	local handlerSuccess, handlerError = pcall(function()
		handler(player)
	end)

	if not handlerSuccess then
		warn("Failed to process product purchase:", handlerError)
		return Enum.ProductPurchaseDecision.NotProcessedYet
	end

	-- Safely record the purchase
	local recordSuccess, recordError = pcall(function()
		PurchaseHistoryStore:UpdateAsync(playerkey, function()
			return true -- only returning static value (no yields here!)
		end)
	end)

	if not recordSuccess then
		warn("Failed to record purchase:", recordError)
		return Enum.ProductPurchaseDecision.NotProcessedYet
	end

	return Enum.ProductPurchaseDecision.PurchaseGranted
end

local function onCharacterAdded(p : Player, c : Model)
	-- Handle gamepasses
	for stringID, info in ProductDefinitions.Gamepasses do
		if (MarketPlaceService:UserOwnsGamePassAsync(p.UserId, info.ID)) then
			handleGamepass(p, stringID)
		end
	end
end

local function onPlayerAdded(p : Player)
	local char = p.Character or p.CharacterAdded:Wait()
	onCharacterAdded(p, char)
	
	p.CharacterAdded:Connect(function(c : Model)
		onCharacterAdded(p, c)
	end)
end

local function initialise()
	GetMonetisationData.OnServerInvoke = function(p : Player)
		return ProductDefinitions
	end
	
	for _, p in Players:GetPlayers() do
		onPlayerAdded(p)
	end
	Players.PlayerAdded:Connect(onPlayerAdded)
end

-- Initialisation
initialise()

MarketPlaceService.ProcessReceipt = processReceipt]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">7a5be8c3b493ddb808a513760000187e</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX0a43568893224d688db7de75d72e5ddc">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ProductDefinitions</string>
						<string name="ScriptGuid">{9a3864c0-35b9-4d56-9fb6-384d182a6f7f}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
-- // Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MarketPlaceService = game:GetService("MarketplaceService")
local RunService = game:GetService("RunService")

-- // Remotes
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local PromptSaleRemote : RemoteEvent

-- // Type Defs
type DevProduct = {
    Category: string,
    ID: number,
    DisplayName: string,
    CurrencyID: string?,
    Amount: number?,
    Image: string?,
    Description: string?,
    PriceInRobux: number?,
}

type Gamepass = {
    ID: number,
    DisplayName: string,
    Image: string?,
}

local ProductDefinitions = {}

ProductDefinitions = {
	DevProducts = {
		CurrencyPack1 = {
			Category = "Currency",
			ID = 3336725329,
			DisplayName = "Tiny Currency Pack",
			CurrencyID = "Cash",
			Amount = 10000,
		},
		CurrencyPack2 = {
			Category = "Currency",
			ID = 3336725326,
			DisplayName = "Small Currency Pack",
			CurrencyID = "Cash",
			Amount = 45000,
		},
		CurrencyPack3 = {
			Category = "Currency",
			ID = 3336725324,
			DisplayName = "Medium Currency Pack",
			CurrencyID = "Cash",
			Amount = 80000,
		},
		CurrencyPack4 = {
			Category = "Currency",
			ID = 3336725327,
			DisplayName = "Big Currency Pack",
			CurrencyID = "Cash",
			Amount = 250000,
		},
		CurrencyPack5 = {
			Category = "Currency",
			ID = 3336725330,
			DisplayName = "Huge Currency Pack",
			CurrencyID = "Cash",
			Amount = 600000,
		},
		CurrencyPack6 = {
			Category = "Currency",
			ID = 3336725328,
			DisplayName = "Massive Currency Pack",
			CurrencyID = "Cash",
			Amount = 1200000,
		},
	} :: { [string]: DevProduct };
	Gamepasses = {
		AutoCollect = {
			ID = 1323024326,
			DisplayName = "🔥Auto Collect🔥",
			Image = nil,
			HandledByTycoon = true,
		},
		DoubleCash = {
			ID = 1321344434,
			DisplayName = "💰2X Cash💰",
			Image = nil,
		};
		GravityCoil = {
			ID = 1320712608,
			DisplayName = "🚀Gravity Coil🚀",
			Image = nil,
		};
		SpeedCoil = {
			ID = 1320622677,
			DisplayName = "💨Speed Coil💨",
			Image = nil,
		};
		BeFrontman = {
			ID = 1330208463,
			DisplayName = "🦑Be Frontman🦑",
			Image = nil,
			HandledByTycoon = true,
		};
	} :: { [string]: Gamepass };
}

-- // Private Functions
local function showOverlay(p : Player)
	local playerGui = p:FindFirstChild("PlayerGui")
	if (playerGui) then
		local old = playerGui:FindFirstChild("MonetisationOverlay")
		if (old) then return end
		
		local overlayGui = script.MonetisationOverlay:Clone()
		overlayGui.Parent = playerGui
	end
end

local function hideOverlay(p : Player)
	local playerGui = p:FindFirstChild("PlayerGui")
	local overlayGui = playerGui and playerGui:FindFirstChild("MonetisationOverlay")
	if (overlayGui) then
		task.spawn(function()
			for _, v in overlayGui:GetChildren() do
				if (v:IsA("CanvasGroup")) then
					for i = 0, 1, 0.05 do
						v.GroupTransparency = i
						task.wait()
					end
				end
			end
			overlayGui:Destroy()
		end)
	end
end

local function getAmountFromCurrencyProduct(stringID : string): number
	local productInfo = ProductDefinitions.DevProducts[stringID]
	local baseAmount = productInfo and productInfo.Amount
	if not (baseAmount) then
		warn("PRODUCT DEFINITION ERROR: No product exists named", stringID, "or it doesn't contain a property named Amount")
		return
	end
	
	local amount = baseAmount
	-- Apply scaling here
	
	return amount
end

-- // Public API
function ProductDefinitions:PromptSale(productType : "Gamepass" | "DevProduct", productID : number, p : Player?)
	if not (p) then
		if (RunService:IsServer()) then
			warn("Product Sale Error: Prompting sale from server without player")
			return
		end
		p = game.Players.LocalPlayer
	end
	
	-- Show overlay
	showOverlay(p)
	
	if (productType == "Gamepass") then
		MarketPlaceService:PromptGamePassPurchase(p, productID)
		local con
		con = MarketPlaceService.PromptGamePassPurchaseFinished:Connect(function()
			hideOverlay(p)
			con:Disconnect()
		end)
	else
		MarketPlaceService:PromptProductPurchase(p, productID)
		local con
		con = MarketPlaceService.PromptProductPurchaseFinished:Connect(function()
			hideOverlay(p)
			con:Disconnect()
		end)
	end
end

function ProductDefinitions:GetSmallestRequiredCurrencyPack(currencyID : string, amountRequired : number): string?
	-- Get an array of applicable products
	-- Also track the biggest currency pack for this currency
	local productArray = {}
	local biggestCurrencyPack = nil
	for stringID, info in ProductDefinitions.DevProducts do
		if (info.Category == "Currency" and info.CurrencyID == currencyID) then
			-- Get the amount of currency this gives
			local amount = getAmountFromCurrencyProduct(stringID)
			if not (amount) then continue end
			
			if (not biggestCurrencyPack) or (biggestCurrencyPack.Amount < amount) then
				biggestCurrencyPack = {Amount = amount, StringID = stringID}
			end
			
			if (amount < amountRequired) then continue end
			
			table.insert(productArray, {StringID = stringID, Info = info, Amount = amount})
		end
	end
	
	-- Get the smallest pack that fits this requirement
	-- If all packs are too small, recommend the biggest pack
	table.sort(productArray, function(a, b)
		return a.Amount < b.Amount
	end)
	
	local stringID = (#productArray > 0 and productArray[1].StringID or biggestCurrencyPack.StringID)
	return stringID
end

function ProductDefinitions:GetGamepassFromNumericID(gamepassID : number): (string, any)
	for stringID, info in pairs(ProductDefinitions.Gamepasses) do
		if info.ID == gamepassID then
			return stringID, info
		end
	end
	warn("No gamepass with gamepass ID:", gamepassID)
	return nil
end

function ProductDefinitions:GetProductFromNumericID(productID : number): (string, any)
	for stringID, info in pairs(ProductDefinitions.DevProducts) do
		if info.ID == productID then
			return stringID, info
		end
	end
	warn("No product with product ID:", productID)
	return nil
end

local function initialise()
	-- Load product images
	for stringID, info in ProductDefinitions.Gamepasses do
		local success, result = pcall(function()
			return MarketPlaceService:GetProductInfo(info.ID, Enum.InfoType.GamePass)
		end)
		if (success and result) then
			info.PriceInRobux = result.PriceInRobux
			info.Image = "rbxassetid://" .. result.IconImageAssetId
		else
			info.Image = ""
		end
	end
	
	for stringID, info in ProductDefinitions.DevProducts do
		local success, result = pcall(function()
			return MarketPlaceService:GetProductInfo(info.ID, Enum.InfoType.Product)
		end)
		if (success and result) then
			info.PriceInRobux = result.PriceInRobux
			info.Image = "rbxassetid://" .. result.IconImageAssetId
			info.Description = result.Description
		else
			info.Image = ""
		end
	end
	
	if (RunService:IsClient()) then
		MarketPlaceService.PromptGamePassPurchaseFinished:Connect(function()
			hideOverlay()
		end)
		MarketPlaceService.PromptProductPurchaseFinished:Connect(function()
			hideOverlay()
		end)
	else
		PromptSaleRemote = Instance.new("RemoteEvent", Remotes)
		PromptSaleRemote.Name = "PromptSale"
		PromptSaleRemote.OnServerEvent:Connect(function(p : Player, productType : string, productID : number)
			ProductDefinitions:PromptSale(productType, productID, p)
		end)
	end
end

-- Initialisation
initialise()

return ProductDefinitions]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">7a5be8c3b493ddb808a513760000187a</UniqueId>
					</Properties>
					<Item class="ScreenGui" referent="RBX71e08b3434434b2fa9204c9fb1c669a8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipToDeviceSafeArea">true</bool>
							<bool name="DefinesCapabilities">false</bool>
							<int name="DisplayOrder">5</int>
							<bool name="Enabled">true</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">MonetisationOverlay</string>
							<bool name="ResetOnSpawn">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SafeAreaCompatibility">0</token>
							<token name="ScreenInsets">0</token>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018ac</UniqueId>
							<token name="ZIndexBehavior">1</token>
						</Properties>
						<Item class="LocalScript" referent="RBXb275b166146f4fbdab814103d9a01aff">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Disabled">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Spinner</string>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{947b37da-8663-4edd-9bdf-da73ac76f290}</string>
								<ProtectedString name="Source"><![CDATA[
-- // Services
local RunService = game:GetService("RunService")

local Gui = script.Parent
Gui.Enabled = false

local CanvasGroup = script.Parent:WaitForChild("Main")
local Spinner = CanvasGroup:WaitForChild("Wheel"):WaitForChild("Spinner")
local Glow = CanvasGroup:WaitForChild("Wheel"):WaitForChild("Glow")

CanvasGroup.GroupTransparency = 1
Gui.Enabled = true

local function initialise()
	RunService.RenderStepped:Connect(function()
		Spinner.Rotation += 5
		Glow.ImageTransparency = (math.sin(tick() * 2) / 4) + 0.25 + 0.6
	end)
	
	-- Fade in
	for i = 1, 0, -0.05 do
		CanvasGroup.GroupTransparency = i
		task.wait()
	end
end

-- Initialisation
initialise()]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018ad</UniqueId>
							</Properties>
						</Item>
						<Item class="CanvasGroup" referent="RBX4cffc2b5ff3f4cfcb81e6207d83489f7">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="BackgroundTransparency">0.349999994</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">true</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Color3 name="GroupColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="GroupTransparency">0</float>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Main</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018ae</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX5e086bb821b04c1786ed54cc63c91c86">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Wheel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.296000004</XS>
										<XO>0</XO>
										<YS>0.400000006</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018af</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="UIAspectRatioConstraint" referent="RBX5df81d8f51d84494a75d69f561da2a2a">
									<Properties>
										<float name="AspectRatio">1</float>
										<token name="AspectType">0</token>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<token name="DominantAxis">0</token>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIAspectRatioConstraint</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018b0</UniqueId>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX4243a30f7371402298cd9a8352193020">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Content name="Image"><url>rbxassetid://4463059046</url></Content>
										<Color3 name="ImageColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Spinner</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<token name="ResampleMode">0</token>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<token name="ScaleType">3</token>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>0.800000012</XS>
											<XO>0</XO>
											<YS>0.800000012</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<float name="SliceScale">1</float>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UDim2 name="TileSize">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018b1</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX46b0935dd209416ba97081a9812b348f">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">44d5b5ec589dd7c8088511290000ec08</UniqueId>
										<Content name="Image"><url>rbxassetid://10928806245</url></Content>
										<Color3 name="ImageColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0.800000012</float>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Background</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<token name="ResampleMode">0</token>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<token name="ScaleType">3</token>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>0.939999998</XS>
											<XO>0</XO>
											<YS>0.930000007</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<float name="SliceScale">1</float>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UDim2 name="TileSize">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018b2</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX2491c02dc669448198921dac86d7a764">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="ClipsDescendants">false</bool>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Draggable">false</bool>
										<UniqueId name="HistoryId">44d5b5ec589dd7c8088511290000ec08</UniqueId>
										<Content name="Image"><url>rbxassetid://8119252523</url></Content>
										<Color3 name="ImageColor3">
											<R>0</R>
											<G>1</G>
											<B>0.0941176564</B>
										</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Interactable">true</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Glow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<token name="ResampleMode">0</token>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<token name="ScaleType">3</token>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1.5</XS>
											<XO>0</XO>
											<YS>1.5</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<float name="SliceScale">1</float>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UDim2 name="TileSize">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018b3</UniqueId>
										<bool name="Visible">true</bool>
										<int name="ZIndex">0</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX13b83927a7264ab7a0092cebed2a3c8d">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0.309803933</R>
										<G>0.964705884</G>
										<B>0.192156866</B>
									</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Gradient</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018b4</UniqueId>
									<bool name="Visible">true</bool>
									<int name="ZIndex">0</int>
								</Properties>
								<Item class="UIGradient" referent="RBXfce685acfa314f11a143f7f8f2d99a4f">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
										<bool name="DefinesCapabilities">false</bool>
										<bool name="Enabled">true</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIGradient</string>
										<Vector2 name="Offset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="Rotation">-90</float>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<NumberSequence name="Transparency">0 0 0 0.499286 0.84375 0 1 1 0 </NumberSequence>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018b5</UniqueId>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX900aaa8df7cb42b8865773205a5b8c13">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ProductHandlers</string>
						<string name="ScriptGuid">{f7b45f0b-784e-4584-bf74-1924447b5996}</string>
						<ProtectedString name="Source"><![CDATA[--!strict

-- // NOTE: Define product handlers for monetisation products at the bottom of this file!

--// Services
local CurrencyService = require("../Services/Currency")
local DataInterface = require("../Services/DataInterface")

--// Assets
local Assets = script:WaitForChild("Assets")

--// Data
local ProductDefinitions = require("./ProductDefinitions")
local DevProducts = ProductDefinitions.DevProducts
local Gamepasses = ProductDefinitions.Gamepasses

--// Types
type ProductHandler = (Player) -> (boolean, string?)

--// Handler Tables
local DevProductHandlers: { [number]: ProductHandler } = {}
local GamepassHandlers: { [number]: ProductHandler } = {}

--// Main Handlers Table
local Handlers = {
	DevProducts = DevProductHandlers,
	Gamepasses = GamepassHandlers,
} :: {
	DevProducts: { [number]: ProductHandler },
	Gamepasses: { [number]: ProductHandler },
	GetHandler: ((productType: "DevProducts" | "Gamepasses", id: number) -> ProductHandler?)?
}

--// Helper Functions

local function isPlayerValid(p: Player?): boolean
	return p ~= nil and p:IsDescendantOf(game)
end

local function processCurrencyProduct(p: Player, currencyID: string, amount: number): (boolean, string?)
	if not isPlayerValid(p) then
		return false, "Invalid player"
	end

	local success, err = CurrencyService:GiveCurrency(p, currencyID, amount, false, true)
	return success, err
end

local function processToolGamepass(p: Player, toolName: string): (boolean, string?)
	if not isPlayerValid(p) then
		return false, "Invalid player"
	end

	local toolID = string.format("_%s_", toolName)
	local backpack = p:FindFirstChild("Backpack")
	if backpack and backpack:FindFirstChild(toolID) then
		return true, nil
	end

	local char = p.Character
	if char and char:FindFirstChild(toolID) then
		return true, nil
	end

	local template = Assets:FindFirstChild(toolName)
	if not template then
		return false, `Missing tool asset: {toolName}`
	end

	local clone = template:Clone()
	clone.Name = toolID
	clone.CanBeDropped = false
	clone.Parent = backpack or p:WaitForChild("Backpack")

	return true, nil
end

local function defineGamepassHandler(gamepassName: string, handler: ProductHandler)
	local gamepassInfo = Gamepasses[gamepassName]
	if gamepassInfo then
		GamepassHandlers[gamepassInfo.ID] = handler
	else
		warn(`[ProductHandlers] No gamepass definition for '{gamepassName}'`)
	end
end

--// Define Gamepass Handlers Below

-- Add/edit gamepass handlers here using defineGamepassHandler("GamepassName", function(player)...end)

defineGamepassHandler("GravityCoil", function(p)
	return processToolGamepass(p, "GravityCoil")
end)

defineGamepassHandler("SpeedCoil", function(p)
	return processToolGamepass(p, "SpeedCoil")
end)

defineGamepassHandler("DoubleCash", function(p)
	if not isPlayerValid(p) then
		return false, "Invalid player"
	end

	local gamepassID = Gamepasses["DoubleCash"].ID
	local currencyID = "Cash"
	local multiplier = 2.0

	local success = CurrencyService:SetMultiplier(p, gamepassID, currencyID, multiplier, nil)
	return success, success and nil or "Failed to set multiplier"
end)

--// Define Dev Product Handlers Automatically
for stringID, info in DevProducts do
	if info.Category == "Currency" then
		DevProductHandlers[info.ID] = function(p: Player)
			return processCurrencyProduct(p, info.CurrencyID, info.Amount)
		end
	end
end

--// Handler Lookup Function
function Handlers.GetHandler(productType: "DevProducts" | "Gamepasses", id: number): ProductHandler?
	return Handlers[productType][id]
end

return Handlers
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">7a5be8c3b493ddb808a5137600001882</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBX75101d8761664eaea36f8594b9379b6e">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Assets</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018a0</UniqueId>
						</Properties>
						<Item class="Tool" referent="RBX40443ba7d66d4dd69dc35a0aa2e3b466">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="CanBeDropped">true</bool>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Enabled">true</bool>
								<CoordinateFrame name="Grip">
									<X>0</X>
									<Y>0</Y>
									<Z>1</Z>
									<R00>-1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>-1</R22>
								</CoordinateFrame>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<bool name="ManualActivationOnly">false</bool>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">GravityCoil</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<bool name="RequiresHandle">true</bool>
								<float name="ScaleFactor">1</float>
								<int64 name="SourceAssetId">191028585</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="TextureId"><url>rbxassetid://16619617</url></Content>
								<string name="ToolTip"></string>
								<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018a1</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>592.120178</X>
										<Y>-23.2999954</Y>
										<Z>-86.4000015</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Script" referent="RBX45d1f9bee52c4bbebf481e46d5b5df34">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Disabled">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">GravityCoilScript</string>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{89b176ac-77c2-4836-8423-0333f84eb379}</string>
									<ProtectedString name="Source"><![CDATA[local Players                     = game:GetService("Players")
local Tool                        = script.Parent

local GravityAccelerationConstant = 9.81 * 20 -- For every 20 studs is one meter on ROBLOX. 9.81 is the common accepted acceleration of gravity per a kg on earth, and is used on ROBLOX
local PercentGravity              = 0.25      -- Percentage of countered acceleration due to gravity by the coil. 

-- @author Quenty
-- A rewritten gravity coil script designed for understanding and reliability

local function WaitForChild(Parent, Name, TimeLimit)
	-- Waits for a child to appear. Not efficient, but it shoudln't have to be. It helps with debugging. 
	-- Useful when ROBLOX lags out, and doesn't replicate quickly.
	-- @param TimeLimit If TimeLimit is given, then it will return after the timelimit, even if it hasn't found the child.

	assert(Parent ~= nil, "Parent is nil")
	assert(type(Name) == "string", "Name is not a string.")

	local Child     = Parent:FindFirstChild(Name)
	local StartTime = tick()
	local Warned    = false

	while not Child and Parent do
		wait(0)
		Child = Parent:FindFirstChild(Name)
		if not Warned and StartTime + (TimeLimit or 5) <= tick() then
			Warned = true
			warn("Infinite yield possible for WaitForChild(" .. Parent:GetFullName() .. ", " .. Name .. ")")
			if TimeLimit then
				return Parent:FindFirstChild(Name)
			end
		end
	end

	if not Parent then
		warn("Parent became nil.")
	end

	return Child
end


local function CallOnChildren(Instance, FunctionToCall)
	-- Calls a function on each of the children of a certain object, using recursion.  

	FunctionToCall(Instance)

	for _, Child in next, Instance:GetChildren() do
		CallOnChildren(Child, FunctionToCall)
	end
end

local function GetBricks(StartInstance)
	-- Returns a list of bricks (will include StartInstance)

	local List = {}

	CallOnChildren(StartInstance, function(Item)
		if Item:IsA("BasePart") then
			List[#List+1] = Item;
		end
	end)

	return List
end

--[[Maid
Manages the cleaning of events and other things.
 
API:
	HireMaid()                        Returns a new Maid object.
 
	Maid[key] = (function)            Adds a task to perform when cleaning up.
	Maid[key] = (event connection)    Manages an event connection. Anything that isn't a function is assumed to be this.
	Maid[key] = nil                   Removes a named task. If the task is an event, it is disconnected.
 
	Maid:GiveTask(task)               Same as above, but uses an incremented number as a key.
	Maid:DoCleaning()                 Disconnects all managed events and performs all clean-up tasks.
]]
local MakeMaid do
	local index = {
		GiveTask = function(self, task)
			local n = #self.Tasks+1
			self.Tasks[n] = task
			return n
		end;
		DoCleaning = function(self)
			local tasks = self.Tasks
			for name,task in pairs(tasks) do
				if type(task) == 'function' then
					task()
				else
					task:disconnect()
				end
				tasks[name] = nil
			end
			-- self.Tasks = {}
		end;
	};

	local mt = {
		__index = function(self, k)
			if index[k] then
				return index[k]
			else
				return self.Tasks[k]
			end
		end;
		__newindex = function(self, k, v)
			local tasks = self.Tasks
			if v == nil then
				-- disconnect if the task is an event
				if type(tasks[k]) ~= 'function' and tasks[k] then
					tasks[k]:disconnect()
				end
			elseif tasks[k] then
				-- clear previous task
				self[k] = nil
			end
			tasks[k] = v
		end;
	}

	function MakeMaid()
		return setmetatable({Tasks={},Instances={}},mt)
	end
end

local function GetCharacter(Descendant)
	-- Returns the Player and Charater that a descendent is part of, if it is part of one.
	-- @param Descendant A child of the potential character. 

	local Charater = Descendant
	local Player   = Players:GetPlayerFromCharacter(Charater)

	while not Player do
		if Charater.Parent then
			Charater = Charater.Parent
			Player   = Players:GetPlayerFromCharacter(Charater)
		else
			return nil
		end
	end

	-- Found the player, character must be true.
	return Charater, Player
end

--- Load and create constants
local AntiGravityForce      = Instance.new("BodyForce")
AntiGravityForce.Name       = "GravityCoilEffect"
AntiGravityForce.Archivable = false

local Handle           = WaitForChild(Tool, "Handle")
local CoilSound        = WaitForChild(Handle, "CoilSound")
local GravityMaid      = MakeMaid() -- Will contain and maintain events

local function UpdateGravityEffect(Character)
	-- Updates the AntiGravityForce to match the force of gravity on the character

	local Bricks
	if Character:IsDescendantOf(game) and Character:FindFirstChild("HumanoidRootPart") and Character.HumanoidRootPart:IsA("BasePart") then
		local BasePart = Character.HumanoidRootPart
		Bricks         = BasePart:GetConnectedParts(true) -- Recursive
	else
		warn("[UpdateGravityEffect] - Character failed to have a HumanoidRootPart or something")
		Bricks = GetBricks(Character)
	end

	local TotalMass = 0

	-- Calculate total mass of player
	for _, Part in pairs(Bricks) do
		TotalMass = TotalMass + Part:GetMass()
	end

	-- Force = Mass * Acceleration
	local ForceOnCharacter         = GravityAccelerationConstant * TotalMass
	local CounteringForceMagnitude = (1 - 0.25) * ForceOnCharacter

	-- Set the actual value...
	AntiGravityForce.force = Vector3.new(0, CounteringForceMagnitude, 0)
end


-- Connect events for player interaction
Tool.Equipped:connect(function()
	local Character, Player = GetCharacter(Tool)

	if Character then
		-- Connect events to recalculate gravity when hats are added or removed. Of course, this is not a perfect solution,
		-- as connected parts are not necessarily part of the character, but ROBLOX has no API to handle the changing of joints, and
		-- scanning the whole game for potential joints is really not worth the efficiency cost. 
		GravityMaid.DescendantAddedConnection = Character.DescendantAdded:connect(function()
			UpdateGravityEffect(Character)
		end)

		GravityMaid.DecendantRemovingConnection = Character.DescendantRemoving:connect(function()
			UpdateGravityEffect(Character)
		end)

		UpdateGravityEffect(Character)
		-- Add in the force
		AntiGravityForce.Parent = Handle
	else
		warn("[GravityCoil] - Somehow inexplicity failed to retrieve character")
	end
end)

Tool.Unequipped:connect(function()
	-- Remove force and clean up events
	AntiGravityForce.Parent = nil
	GravityMaid:DoCleaning()
end)]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018a2</UniqueId>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXf4c1dda8a03044d7a7ef6e4cb06b005a">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AudioCanCollide">true</bool>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>92.6100769</X>
										<Y>4.60000229</Y>
										<Z>-28.5</Z>
										<R00>-1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>-1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4291677645</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="EnableFluidForces">true</bool>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">true</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Handle</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018a3</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">2</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1.20000005</Y>
										<Z>2</Z>
									</Vector3>
								</Properties>
								<Item class="Sound" referent="RBXde53537479c744e8a7e718157b0deeda">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="IsMutedForCapture">false</bool>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">false</bool>
										<string name="Name">CoilSound</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1.5</float>
										<bool name="Playing">false</bool>
										<float name="RollOffMaxDistance">10000</float>
										<float name="RollOffMinDistance">10</float>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>http://www.roblox.com/asset/?id=177979632</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018a4</UniqueId>
										<float name="Volume">1</float>
									</Properties>
								</Item>
								<Item class="SpecialMesh" referent="RBX630bc4e55b524ac2bb3a4657dd5068f3">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Content name="MeshId"><url>http://www.roblox.com/asset/?id=16606212</url></Content>
										<token name="MeshType">5</token>
										<string name="Name">Mesh</string>
										<Vector3 name="Offset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<Vector3 name="Scale">
											<X>0.699999988</X>
											<Y>0.699999988</Y>
											<Z>0.699999988</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<Content name="TextureId"><url>http://www.roblox.com/asset/?id=16606141</url></Content>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018a5</UniqueId>
										<Vector3 name="VertexColor">
											<X>1</X>
											<Y>1</Y>
											<Z>1</Z>
										</Vector3>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Tool" referent="RBX43d64936f90b4059a898d909df91b03a">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="CanBeDropped">false</bool>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Enabled">true</bool>
								<CoordinateFrame name="Grip">
									<X>-3.39994735e-08</X>
									<Y>3.39994877e-08</Y>
									<Z>-0.99999994</Z>
									<R00>-0.707134247</R00>
									<R01>-0.707079291</R01>
									<R02>0</R02>
									<R10>0.707079291</R10>
									<R11>-0.707134247</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<token name="LevelOfDetail">0</token>
								<bool name="ManualActivationOnly">false</bool>
								<CoordinateFrame name="ModelMeshCFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
								<Vector3 name="ModelMeshSize">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="ModelStreamingMode">0</token>
								<string name="Name">SpeedCoil</string>
								<bool name="NeedsPivotMigration">false</bool>
								<Ref name="PrimaryPart">null</Ref>
								<bool name="RequiresHandle">true</bool>
								<float name="ScaleFactor">1</float>
								<int64 name="SourceAssetId">12403904845</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="TextureId"><url>http://www.roblox.com/asset/?id=99170415</url></Content>
								<string name="ToolTip">Speed Up!</string>
								<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018a6</UniqueId>
								<OptionalCoordinateFrame name="WorldPivotData">
									<CFrame>
										<X>491.731598</X>
										<Y>32.7157211</Y>
										<Z>-121.704147</Z>
										<R00>-0.0431647897</R00>
										<R01>0.00606953911</R01>
										<R02>0.999049544</R02>
										<R10>-0.696037471</R10>
										<R11>-0.717544854</R11>
										<R12>-0.025713563</R12>
										<R20>0.716706753</R20>
										<R21>-0.696485877</R21>
										<R22>0.035197299</R22>
									</CFrame>
								</OptionalCoordinateFrame>
							</Properties>
							<Item class="Script" referent="RBXc7ba2dbcc7844e7fac6445400de48de1">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Disabled">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<Content name="LinkedSource"><null></null></Content>
									<string name="Name">SpeedUp</string>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{75B79D38-571D-48F4-B543-CF057B8346C6}</string>
									<ProtectedString name="Source"><![CDATA[--!strict
-- simplified speed coil by s_snaker

local BOOST = 16

local tool = script.Parent
local sound = tool.Handle.CoilSound
local oldSpeed -- speed before equipping is saved in functions
local humanoid -- has to be a global so it can be used in onUnequip()

function onEquip()
	humanoid = tool.Parent:FindFirstChild("Humanoid")
	if (humanoid ~= nil) then
		oldSpeed = humanoid.WalkSpeed
		humanoid.WalkSpeed = oldSpeed + BOOST
		sound:play()
	end
end

function onUnequip()
	humanoid.WalkSpeed = oldSpeed
end

tool.Equipped:Connect(onEquip)
tool.Unequipped:Connect(onUnequip)]]></ProtectedString>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018a7</UniqueId>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX8417e41f7afc4ed4aac5b73effa7f3ad">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AudioCanCollide">true</bool>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>227.764496</X>
										<Y>17.9686718</Y>
										<Z>-82.375</Z>
										<R00>-0.0431647897</R00>
										<R01>0.00606953911</R01>
										<R02>0.999049544</R02>
										<R10>-0.696037471</R10>
										<R11>-0.717544854</R11>
										<R12>-0.025713563</R12>
										<R20>0.716706753</R20>
										<R21>-0.696485877</R21>
										<R22>0.035197299</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">false</bool>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="EnableFluidForces">true</bool>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">true</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Handle</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018a8</UniqueId>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">3</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1.29999995</X>
										<Y>1.29999995</Y>
										<Z>2.4000001</Z>
									</Vector3>
								</Properties>
								<Item class="Sound" referent="RBX22ed3aab00a64da4904d02a6e03051cf">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<bool name="IsMutedForCapture">false</bool>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">false</bool>
										<string name="Name">CoilSound</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<float name="RollOffMaxDistance">2000</float>
										<float name="RollOffMinDistance">10</float>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>http://www.roblox.com/asset/?id=99173388</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018a9</UniqueId>
										<float name="Volume">1</float>
									</Properties>
								</Item>
								<Item class="SpecialMesh" referent="RBX04f4390455c3499183d188e71fe807db">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<Content name="MeshId"><url>http://www.roblox.com/asset/?id=16606212</url></Content>
										<token name="MeshType">5</token>
										<string name="Name">Mesh</string>
										<Vector3 name="Offset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<Vector3 name="Scale">
											<X>0.699999988</X>
											<Y>0.699999988</Y>
											<Z>0.699999988</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<Content name="TextureId"><url>http://www.roblox.com/asset/?id=99170547</url></Content>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018aa</UniqueId>
										<Vector3 name="VertexColor">
											<X>1</X>
											<Y>1</Y>
											<Z>1</Z>
										</Vector3>
									</Properties>
								</Item>
								<Item class="Attachment" referent="RBX06c645c7e02d40f0913bc32c5e810378">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<CoordinateFrame name="CFrame">
											<X>0</X>
											<Y>0</Y>
											<Z>-0.99999994</Z>
											<R00>-0.707134247</R00>
											<R01>-0.707079291</R01>
											<R02>0</R02>
											<R10>0.707079291</R10>
											<R11>-0.707134247</R11>
											<R12>0</R12>
											<R20>0</R20>
											<R21>0</R21>
											<R22>1</R22>
										</CoordinateFrame>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">RightGripAttachment</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">7a5be8c3b493ddb808a51376000018ab</UniqueId>
										<bool name="Visible">false</bool>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="ServerStorage" referent="RBX674cd244afcf4aee83e3807207ed5a6d">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000377</UniqueId>
		</Properties>
		<Item class="Folder" referent="RBX806338e72c2540fea4726296b5661f4f">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Archimedes_Storage</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000474</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="ServiceVisibilityService" referent="RBXb33f2437d3854790b061feab89810785">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<BinaryString name="HiddenServices">AAAAAA==</BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServiceVisibilityService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000386</UniqueId>
			<BinaryString name="VisibleServices">AAAAAA==</BinaryString>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXe795b262a0a94ec586c5ad5023e44f3d">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d420000038f</UniqueId>
		</Properties>
	</Item>
	<Item class="Lighting" referent="0">
		<Properties>
			<Color3 name="Ambient">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<BinaryString name="AttributesSerialize"><![CDATA[AgAAACYAAABSQlhfTGlnaHRpbmdUZWNobm9sb2d5VW5pZmllZE1pZ3JhdGlvbgMBIAAAAFJC
WF9PcmlnaW5hbFRlY2hub2xvZ3lPbkZpbGVMb2FkBAEAAAA=]]></BinaryString>
			<float name="Brightness">2</float>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<bool name="DefinesCapabilities">false</bool>
			<float name="EnvironmentDiffuseScale">0</float>
			<float name="EnvironmentSpecularScale">0</float>
			<float name="ExposureCompensation">0</float>
			<token name="ExtendLightRangeTo120">0</token>
			<Color3 name="FogColor">
				<R>0.75</R>
				<G>0.75</G>
				<B>0.75</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="LightingStyle">1</token>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.5</R>
				<G>0.5</G>
				<B>0.5</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<bool name="PrioritizeLightingQuality">false</bool>
			<float name="ShadowSoftness">0.5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">1</token>
			<string name="TimeOfDay">14:00:00</string>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000391</UniqueId>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBXa76d9285869f4789b555c784926fcfea">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoRuns">true</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<bool name="ThrottlePhysicsToRealtime">true</bool>
			<double name="Timeout">10</double>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d42000003b2</UniqueId>
		</Properties>
		<Item class="ModuleScript" referent="RBX4fca629684544673b72f872b52069af6">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">RobloxLSP_Settings</string>
				<string name="ScriptGuid">{BE0318AA-BB4A-4096-826A-C2884C56E738}</string>
				<ProtectedString name="Source"><![CDATA[return {
	port = 27843,
	startAutomatically = true,
	exclude = {
		-- game:GetService("Workspace")
	}
}]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000462</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="UGCAvatarService" referent="RBX01839193b69f4150a26c5e5a1089835d">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">UGCAvatarService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d42000003b9</UniqueId>
		</Properties>
	</Item>
	<Item class="DataStoreService" referent="RBX7de21947516842a6b3723476305a2d33">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutomaticRetry">true</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LegacyNamingScheme">false</bool>
			<string name="Name">DataStoreService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200000456</UniqueId>
		</Properties>
	</Item>
	<Item class="VideoService" referent="RBX43f505f7306644cb93d849c245061dae">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VideoService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d42000004f5</UniqueId>
		</Properties>
	</Item>
	<Item class="LodDataService" referent="RBX48e79d56eb604423b1b90ebbf2449413">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LodDataService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d42000004f6</UniqueId>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBX842e0eae68504e68afa9485def839ee1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="Enabled">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPromptsVisible">16</int>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">774a92fe3f3077d308a27d4200001706</UniqueId>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>